

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Apr 23 23:06:29 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90  0000                     
    91                           ; Version 2.20
    92                           ; Generated 09/04/2020 GMT
    93                           ; 
    94                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4620 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataCOMRAM
   127  0035A6                     __pidataCOMRAM:
   128                           	callstack 0
   129                           
   130                           ;initializer for _LCD_INIT_STRING
   131  0035A6  28                 	db	40
   132  0035A7  0C                 	db	12
   133  0035A8  01                 	db	1
   134  0035A9  06                 	db	6
   135                           
   136                           ;initializer for _initial
   137  0035AA  0001               	dw	1
   138                           
   139                           	psect	mediumconst
   140  00FE68                     __pmediumconst:
   141                           	callstack 0
   142  00FE68  00                 	db	0
   143  00FE69                     __powers_:
   144                           	callstack 0
   145  00FE69  00                 	db	0
   146  00FE6A  80                 	db	128
   147  00FE6B  3F                 	db	63
   148  00FE6C  00                 	db	0
   149  00FE6D  20                 	db	32
   150  00FE6E  41                 	db	65
   151  00FE6F  00                 	db	0
   152  00FE70  C8                 	db	200
   153  00FE71  42                 	db	66
   154  00FE72  00                 	db	0
   155  00FE73  7A                 	db	122
   156  00FE74  44                 	db	68
   157  00FE75  40                 	db	64
   158  00FE76  1C                 	db	28
   159  00FE77  46                 	db	70
   160  00FE78  50                 	db	80
   161  00FE79  C3                 	db	195
   162  00FE7A  47                 	db	71
   163  00FE7B  24                 	db	36
   164  00FE7C  74                 	db	116
   165  00FE7D  49                 	db	73
   166  00FE7E  97                 	db	151
   167  00FE7F  18                 	db	24
   168  00FE80  4B                 	db	75
   169  00FE81  BC                 	db	188
   170  00FE82  BE                 	db	190
   171  00FE83  4C                 	db	76
   172  00FE84  6B                 	db	107
   173  00FE85  6E                 	db	110
   174  00FE86  4E                 	db	78
   175  00FE87  03                 	db	3
   176  00FE88  15                 	db	21
   177  00FE89  50                 	db	80
   178  00FE8A  79                 	db	121
   179  00FE8B  AD                 	db	173
   180  00FE8C  60                 	db	96
   181  00FE8D  F3                 	db	243
   182  00FE8E  49                 	db	73
   183  00FE8F  71                 	db	113
   184  00FE90                     __end_of__powers_:
   185                           	callstack 0
   186  00FE90                     __npowers_:
   187                           	callstack 0
   188  00FE90  00                 	db	0
   189  00FE91  80                 	db	128
   190  00FE92  3F                 	db	63
   191  00FE93  CD                 	db	205
   192  00FE94  CC                 	db	204
   193  00FE95  3D                 	db	61
   194  00FE96  D7                 	db	215
   195  00FE97  23                 	db	35
   196  00FE98  3C                 	db	60
   197  00FE99  12                 	db	18
   198  00FE9A  83                 	db	131
   199  00FE9B  3A                 	db	58
   200  00FE9C  B7                 	db	183
   201  00FE9D  D1                 	db	209
   202  00FE9E  38                 	db	56
   203  00FE9F  C6                 	db	198
   204  00FEA0  27                 	db	39
   205  00FEA1  37                 	db	55
   206  00FEA2  38                 	db	56
   207  00FEA3  86                 	db	134
   208  00FEA4  35                 	db	53
   209  00FEA5  C0                 	db	192
   210  00FEA6  D6                 	db	214
   211  00FEA7  33                 	db	51
   212  00FEA8  CC                 	db	204
   213  00FEA9  2B                 	db	43
   214  00FEAA  32                 	db	50
   215  00FEAB  70                 	db	112
   216  00FEAC  89                 	db	137
   217  00FEAD  30                 	db	48
   218  00FEAE  E7                 	db	231
   219  00FEAF  DB                 	db	219
   220  00FEB0  2E                 	db	46
   221  00FEB1  E5                 	db	229
   222  00FEB2  3C                 	db	60
   223  00FEB3  1E                 	db	30
   224  00FEB4  42                 	db	66
   225  00FEB5  A2                 	db	162
   226  00FEB6  0D                 	db	13
   227  00FEB7                     __end_of__npowers_:
   228                           	callstack 0
   229  00FEB7                     _dpowers:
   230                           	callstack 0
   231  00FEB7  0001               	dw	1
   232  00FEB9  0000               	dw	0
   233  00FEBB  000A               	dw	10
   234  00FEBD  0000               	dw	0
   235  00FEBF  0064               	dw	100
   236  00FEC1  0000               	dw	0
   237  00FEC3  03E8               	dw	1000
   238  00FEC5  0000               	dw	0
   239  00FEC7  2710               	dw	10000
   240  00FEC9  0000               	dw	0
   241  00FECB  86A0               	dw	34464
   242  00FECD  0001               	dw	1
   243  00FECF  4240               	dw	16960
   244  00FED1  000F               	dw	15
   245  00FED3  9680               	dw	38528
   246  00FED5  0098               	dw	152
   247  00FED7  E100               	dw	57600
   248  00FED9  05F5               	dw	1525
   249  00FEDB  CA00               	dw	51712
   250  00FEDD  3B9A               	dw	15258
   251  00FEDF                     __end_of_dpowers:
   252                           	callstack 0
   253  00FEDF                     STR_27:
   254  00FEDF  70                 	db	112	;'p'
   255  00FEE0  65                 	db	101	;'e'
   256  00FEE1  72                 	db	114	;'r'
   257  00FEE2  63                 	db	99	;'c'
   258  00FEE3  65                 	db	101	;'e'
   259  00FEE4  6E                 	db	110	;'n'
   260  00FEE5  74                 	db	116	;'t'
   261  00FEE6  48                 	db	72	;'H'
   262  00FEE7  65                 	db	101	;'e'
   263  00FEE8  61                 	db	97	;'a'
   264  00FEE9  74                 	db	116	;'t'
   265  00FEEA  43                 	db	67	;'C'
   266  00FEEB  6F                 	db	111	;'o'
   267  00FEEC  75                 	db	117	;'u'
   268  00FEED  6E                 	db	110	;'n'
   269  00FEEE  74                 	db	116	;'t'
   270  00FEEF  65                 	db	101	;'e'
   271  00FEF0  72                 	db	114	;'r'
   272  00FEF1  3A                 	db	58	;':'
   273  00FEF2  25                 	db	37
   274  00FEF3  30                 	db	48	;'0'
   275  00FEF4  64                 	db	100	;'d'
   276  00FEF5  25                 	db	37
   277  00FEF6  25                 	db	37
   278  00FEF7  20                 	db	32
   279  00FEF8  70                 	db	112	;'p'
   280  00FEF9  65                 	db	101	;'e'
   281  00FEFA  72                 	db	114	;'r'
   282  00FEFB  63                 	db	99	;'c'
   283  00FEFC  65                 	db	101	;'e'
   284  00FEFD  6E                 	db	110	;'n'
   285  00FEFE  74                 	db	116	;'t'
   286  00FEFF  43                 	db	67	;'C'
   287  00FF00  6F                 	db	111	;'o'
   288  00FF01  6F                 	db	111	;'o'
   289  00FF02  6C                 	db	108	;'l'
   290  00FF03  43                 	db	67	;'C'
   291  00FF04  6F                 	db	111	;'o'
   292  00FF05  75                 	db	117	;'u'
   293  00FF06  6E                 	db	110	;'n'
   294  00FF07  74                 	db	116	;'t'
   295  00FF08  65                 	db	101	;'e'
   296  00FF09  72                 	db	114	;'r'
   297  00FF0A  3A                 	db	58	;':'
   298  00FF0B  25                 	db	37
   299  00FF0C  30                 	db	48	;'0'
   300  00FF0D  64                 	db	100	;'d'
   301  00FF0E  25                 	db	37
   302  00FF0F  25                 	db	37
   303  00FF10  0D                 	db	13
   304  00FF11  0A                 	db	10
   305  00FF12  00                 	db	0
   306  00FF13                     STR_4:
   307  00FF13  0D                 	db	13
   308  00FF14  0D                 	db	13
   309  00FF15  52                 	db	82	;'R'
   310  00FF16  65                 	db	101	;'e'
   311  00FF17  61                 	db	97	;'a'
   312  00FF18  64                 	db	100	;'d'
   313  00FF19  69                 	db	105	;'i'
   314  00FF1A  6E                 	db	110	;'n'
   315  00FF1B  67                 	db	103	;'g'
   316  00FF1C  20                 	db	32
   317  00FF1D  44                 	db	68	;'D'
   318  00FF1E  41                 	db	65	;'A'
   319  00FF1F  74                 	db	116	;'t'
   320  00FF20  61                 	db	97	;'a'
   321  00FF21  20                 	db	32
   322  00FF22  41                 	db	65	;'A'
   323  00FF23  62                 	db	98	;'b'
   324  00FF24  6F                 	db	111	;'o'
   325  00FF25  75                 	db	117	;'u'
   326  00FF26  74                 	db	116	;'t'
   327  00FF27  20                 	db	32
   328  00FF28  74                 	db	116	;'t'
   329  00FF29  68                 	db	104	;'h'
   330  00FF2A  65                 	db	101	;'e'
   331  00FF2B  20                 	db	32
   332  00FF2C  41                 	db	65	;'A'
   333  00FF2D  69                 	db	105	;'i'
   334  00FF2E  72                 	db	114	;'r'
   335  00FF2F  20                 	db	32
   336  00FF30  63                 	db	99	;'c'
   337  00FF31  6F                 	db	111	;'o'
   338  00FF32  6E                 	db	110	;'n'
   339  00FF33  64                 	db	100	;'d'
   340  00FF34  69                 	db	105	;'i'
   341  00FF35  74                 	db	116	;'t'
   342  00FF36  69                 	db	105	;'i'
   343  00FF37  6F                 	db	111	;'o'
   344  00FF38  6E                 	db	110	;'n'
   345  00FF39  65                 	db	101	;'e'
   346  00FF3A  72                 	db	114	;'r'
   347  00FF3B  00                 	db	0
   348  00FF3C                     STR_25:
   349  00FF3C  53                 	db	83	;'S'
   350  00FF3D  50                 	db	80	;'P'
   351  00FF3E  3A                 	db	58	;':'
   352  00FF3F  25                 	db	37
   353  00FF40  34                 	db	52	;'4'
   354  00FF41  2E                 	db	46
   355  00FF42  32                 	db	50	;'2'
   356  00FF43  66                 	db	102	;'f'
   357  00FF44  43                 	db	67	;'C'
   358  00FF45  20                 	db	32
   359  00FF46  20                 	db	32
   360  00FF47  4F                 	db	79	;'O'
   361  00FF48  54                 	db	84	;'T'
   362  00FF49  3A                 	db	58	;':'
   363  00FF4A  25                 	db	37
   364  00FF4B  34                 	db	52	;'4'
   365  00FF4C  2E                 	db	46
   366  00FF4D  32                 	db	50	;'2'
   367  00FF4E  66                 	db	102	;'f'
   368  00FF4F  43                 	db	67	;'C'
   369  00FF50  0D                 	db	13
   370  00FF51  0A                 	db	10
   371  00FF52  00                 	db	0
   372  00FF53                     STR_29:
   373  00FF53  48                 	db	72	;'H'
   374  00FF54  65                 	db	101	;'e'
   375  00FF55  61                 	db	97	;'a'
   376  00FF56  74                 	db	116	;'t'
   377  00FF57  3A                 	db	58	;':'
   378  00FF58  4F                 	db	79	;'O'
   379  00FF59  4E                 	db	78	;'N'
   380  00FF5A  20                 	db	32
   381  00FF5B  43                 	db	67	;'C'
   382  00FF5C  6F                 	db	111	;'o'
   383  00FF5D  6F                 	db	111	;'o'
   384  00FF5E  6C                 	db	108	;'l'
   385  00FF5F  20                 	db	32
   386  00FF60  3A                 	db	58	;':'
   387  00FF61  4F                 	db	79	;'O'
   388  00FF62  46                 	db	70	;'F'
   389  00FF63  46                 	db	70	;'F'
   390  00FF64  0D                 	db	13
   391  00FF65  0A                 	db	10
   392  00FF66  00                 	db	0
   393  00FF67                     STR_30:
   394  00FF67  43                 	db	67	;'C'
   395  00FF68  6F                 	db	111	;'o'
   396  00FF69  6F                 	db	111	;'o'
   397  00FF6A  6C                 	db	108	;'l'
   398  00FF6B  3A                 	db	58	;':'
   399  00FF6C  4F                 	db	79	;'O'
   400  00FF6D  4E                 	db	78	;'N'
   401  00FF6E  20                 	db	32
   402  00FF6F  48                 	db	72	;'H'
   403  00FF70  65                 	db	101	;'e'
   404  00FF71  61                 	db	97	;'a'
   405  00FF72  74                 	db	116	;'t'
   406  00FF73  20                 	db	32
   407  00FF74  3A                 	db	58	;':'
   408  00FF75  4F                 	db	79	;'O'
   409  00FF76  46                 	db	70	;'F'
   410  00FF77  46                 	db	70	;'F'
   411  00FF78  0D                 	db	13
   412  00FF79  0A                 	db	10
   413  00FF7A  00                 	db	0
   414  00FF7B                     STR_12:
   415  00FF7B  4F                 	db	79	;'O'
   416  00FF7C  54                 	db	84	;'T'
   417  00FF7D  3A                 	db	58	;':'
   418  00FF7E  25                 	db	37
   419  00FF7F  34                 	db	52	;'4'
   420  00FF80  2E                 	db	46
   421  00FF81  32                 	db	50	;'2'
   422  00FF82  66                 	db	102	;'f'
   423  00FF83  43                 	db	67	;'C'
   424  00FF84  20                 	db	32
   425  00FF85  25                 	db	37
   426  00FF86  73                 	db	115	;'s'
   427  00FF87  3A                 	db	58	;':'
   428  00FF88  25                 	db	37
   429  00FF89  30                 	db	48	;'0'
   430  00FF8A  64                 	db	100	;'d'
   431  00FF8B  25                 	db	37
   432  00FF8C  25                 	db	37
   433  00FF8D  20                 	db	32
   434  00FF8E  00                 	db	0
   435  00FF8F                     STR_26:
   436  00FF8F  52                 	db	82	;'R'
   437  00FF90  54                 	db	84	;'T'
   438  00FF91  3A                 	db	58	;':'
   439  00FF92  25                 	db	37
   440  00FF93  34                 	db	52	;'4'
   441  00FF94  2E                 	db	46
   442  00FF95  32                 	db	50	;'2'
   443  00FF96  66                 	db	102	;'f'
   444  00FF97  43                 	db	67	;'C'
   445  00FF98  0D                 	db	13
   446  00FF99  0A                 	db	10
   447  00FF9A  00                 	db	0
   448  00FF9B                     STR_7:
   449  00FF9B  53                 	db	83	;'S'
   450  00FF9C  50                 	db	80	;'P'
   451  00FF9D  3A                 	db	58	;':'
   452  00FF9E  25                 	db	37
   453  00FF9F  34                 	db	52	;'4'
   454  00FFA0  2E                 	db	46
   455  00FFA1  32                 	db	50	;'2'
   456  00FFA2  66                 	db	102	;'f'
   457  00FFA3  43                 	db	67	;'C'
   458  00FFA4  20                 	db	32
   459  00FFA5  00                 	db	0
   460  00FFA6                     STR_5:
   461  00FFA6  52                 	db	82	;'R'
   462  00FFA7  54                 	db	84	;'T'
   463  00FFA8  3A                 	db	58	;':'
   464  00FFA9  25                 	db	37
   465  00FFAA  34                 	db	52	;'4'
   466  00FFAB  2E                 	db	46
   467  00FFAC  32                 	db	50	;'2'
   468  00FFAD  66                 	db	102	;'f'
   469  00FFAE  43                 	db	67	;'C'
   470  00FFAF  20                 	db	32
   471  00FFB0  00                 	db	0
   472  00FFB1                     STR_15:
   473  00FFB1  4F                 	db	79	;'O'
   474  00FFB2  54                 	db	84	;'T'
   475  00FFB3  3A                 	db	58	;':'
   476  00FFB4  25                 	db	37
   477  00FFB5  34                 	db	52	;'4'
   478  00FFB6  2E                 	db	46
   479  00FFB7  32                 	db	50	;'2'
   480  00FFB8  66                 	db	102	;'f'
   481  00FFB9  43                 	db	67	;'C'
   482  00FFBA  00                 	db	0
   483  00FFBB                     STR_1:
   484  00FFBB  52                 	db	82	;'R'
   485  00FFBC  3A                 	db	58	;':'
   486  00FFBD  25                 	db	37
   487  00FFBE  34                 	db	52	;'4'
   488  00FFBF  2E                 	db	46
   489  00FFC0  32                 	db	50	;'2'
   490  00FFC1  66                 	db	102	;'f'
   491  00FFC2  00                 	db	0
   492  00FFC3                     STR_32:
   493  00FFC3  28                 	db	40
   494  00FFC4  6E                 	db	110	;'n'
   495  00FFC5  75                 	db	117	;'u'
   496  00FFC6  6C                 	db	108	;'l'
   497  00FFC7  6C                 	db	108	;'l'
   498  00FFC8  29                 	db	41
   499  00FFC9  00                 	db	0
   500  00FFCA                     STR_31:
   501  00FFCA  41                 	db	65	;'A'
   502  00FFCB  75                 	db	117	;'u'
   503  00FFCC  74                 	db	116	;'t'
   504  00FFCD  6F                 	db	111	;'o'
   505  00FFCE  0A                 	db	10
   506  00FFCF  00                 	db	0
   507  00FFD0                     STR_16:
   508  00FFD0  4D                 	db	77	;'M'
   509  00FFD1  44                 	db	68	;'D'
   510  00FFD2  3A                 	db	58	;':'
   511  00FFD3  25                 	db	37
   512  00FFD4  73                 	db	115	;'s'
   513  00FFD5  00                 	db	0
   514  00FFD6                     STR_18:
   515  00FFD6  43                 	db	67	;'C'
   516  00FFD7  6F                 	db	111	;'o'
   517  00FFD8  6F                 	db	111	;'o'
   518  00FFD9  6C                 	db	108	;'l'
   519  00FFDA  00                 	db	0
   520  00FFDB                     STR_19:
   521  00FFDB  41                 	db	65	;'A'
   522  00FFDC  75                 	db	117	;'u'
   523  00FFDD  74                 	db	116	;'t'
   524  00FFDE  6F                 	db	111	;'o'
   525  00FFDF  00                 	db	0
   526  00FFE0                     STR_17:
   527  00FFE0  48                 	db	72	;'H'
   528  00FFE1  65                 	db	101	;'e'
   529  00FFE2  61                 	db	97	;'a'
   530  00FFE3  74                 	db	116	;'t'
   531  00FFE4  00                 	db	0
   532  00FFE5                     STR_6:
   533  00FFE5  48                 	db	72	;'H'
   534  00FFE6  20                 	db	32
   535  00FFE7  43                 	db	67	;'C'
   536  00FFE8  00                 	db	0
   537  00FFE9                     STR_2:
   538  00FFE9  20                 	db	32
   539  00FFEA  20                 	db	32
   540  00FFEB  00                 	db	0
   541  00FFEC                     STR_23:
   542  00FFEC  48                 	db	72	;'H'
   543  00FFED  43                 	db	67	;'C'
   544  00FFEE  00                 	db	0
   545  00FFEF                     STR_21:
   546  00FFEF  43                 	db	67	;'C'
   547  00FFF0  4C                 	db	76	;'L'
   548  00FFF1  00                 	db	0
   549  00FFF2                     STR_22:
   550  00FFF2  48                 	db	72	;'H'
   551  00FFF3  54                 	db	84	;'T'
   552  00FFF4  00                 	db	0
   553  00FFF5                     STR_3:
   554  00FFF5  25                 	db	37
   555  00FFF6  64                 	db	100	;'d'
   556  00FFF7  00                 	db	0
   557  00FFF8                     STR_13:
   558  00FFF8  48                 	db	72	;'H'
   559  00FFF9  00                 	db	0
   560  00FFFA                     STR_9:
   561  00FFFA  4E                 	db	78	;'N'
   562  00FFFB  00                 	db	0
   563  00FFFC                     STR_8:
   564  00FFFC  59                 	db	89	;'Y'
   565  00FFFD  00                 	db	0
   566  00FFFE  00                 	db	0	; dummy byte at the end
   567  0000                     
   568                           	psect	nvCOMRAM
   569  00004D                     __pnvCOMRAM:
   570                           	callstack 0
   571  00004D                     _coolError:
   572                           	callstack 0
   573  00004D                     	ds	3
   574  000050                     _RT:
   575                           	callstack 0
   576  000050                     	ds	3
   577  000053                     _SP:
   578                           	callstack 0
   579  000053                     	ds	3
   580  000056                     _heatError:
   581                           	callstack 0
   582  000056                     	ds	3
   583                           
   584                           	psect	nvBANK1
   585  000185                     __pnvBANK1:
   586                           	callstack 0
   587  000185                     _OT:
   588                           	callstack 0
   589  000185                     	ds	3
   590  0000                     _PIR1bits	set	3998
   591  0000                     _TXREG	set	4013
   592  0000                     _SPBRGH	set	4016
   593  0000                     _INTCON2bits	set	4081
   594  0000                     _INTCON3	set	4080
   595  0000                     _INTCON2	set	4081
   596  0000                     _RCONbits	set	4048
   597  0000                     _IPR2bits	set	4002
   598  0000                     _PIE2bits	set	4000
   599  0000                     _T3CONbits	set	4017
   600  0000                     _T1CONbits	set	4045
   601  0000                     _RCSTAbits	set	4011
   602  0000                     _RCSTA	set	4011
   603  0000                     _TXSTAbits	set	4012
   604  0000                     _SPBRG	set	4015
   605  0000                     _TXSTA	set	4012
   606  0000                     _BAUDCONbits	set	4024
   607  0000                     _RCREG	set	4014
   608  0000                     _PIE1	set	3997
   609  0000                     _PORTD	set	3971
   610  0000                     _TRISE	set	3990
   611  0000                     _TRISD	set	3989
   612  0000                     _TRISC	set	3988
   613  0000                     _TRISB	set	3987
   614  0000                     _TRISA	set	3986
   615  0000                     _ADCON1	set	4033
   616  0000                     _INTCON3bits	set	4080
   617  0000                     _INTCONbits	set	4082
   618  0000                     _PORTCbits	set	3970
   619  0000                     _PIR2bits	set	4001
   620  0000                     _CCP1CONbits	set	4029
   621  0000                     _CCPR1L	set	4030
   622  0000                     _TRISCbits	set	3988
   623  0000                     _T2CONbits	set	4042
   624  0000                     _CCP1CON	set	4029
   625  0000                     _T2CON	set	4042
   626  0000                     _PR2	set	4043
   627  0000                     _PORTEbits	set	3972
   628  0000                     _ADRESL	set	4035
   629  0000                     _ADRESH	set	4036
   630  0000                     _ADCON2	set	4032
   631  0000                     _ADCON0bits	set	4034
   632  0000                     _ADCON0	set	4034
   633  0000                     _TMR3L	set	4018
   634  0000                     _TMR3H	set	4019
   635  0000                     _TMR1L	set	4046
   636  0000                     _TMR1H	set	4047
   637                           
   638                           ; #config settings
   639                           
   640                           	psect	cinit
   641  0030FA                     __pcinit:
   642                           	callstack 0
   643  0030FA                     start_initialization:
   644                           	callstack 0
   645  0030FA                     __initialization:
   646                           	callstack 0
   647                           
   648                           ; Initialize objects allocated to COMRAM (6 bytes)
   649                           ; load TBLPTR registers with __pidataCOMRAM
   650  0030FA  0EA6               	movlw	low __pidataCOMRAM
   651  0030FC  6EF6               	movwf	tblptrl,c
   652  0030FE  0E35               	movlw	high __pidataCOMRAM
   653  003100  6EF7               	movwf	tblptrh,c
   654  003102  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   655  003104  6EF8               	movwf	tblptru,c
   656  003106  EE00  F059         	lfsr	0,__pdataCOMRAM
   657  00310A  EE10 F006          	lfsr	1,6
   658  00310E                     copy_data0:
   659  00310E  0009               	tblrd		*+
   660  003110  CFF5 FFEE          	movff	tablat,postinc0
   661  003114  50E5               	movf	postdec1,w,c
   662  003116  50E1               	movf	fsr1l,w,c
   663  003118  E1FA               	bnz	copy_data0
   664                           
   665                           ; Clear objects allocated to BANK1 (32 bytes)
   666  00311A  EE01  F065         	lfsr	0,__pbssBANK1
   667  00311E  0E20               	movlw	32
   668  003120                     clear_0:
   669  003120  6AEE               	clrf	postinc0,c
   670  003122  06E8               	decf	wreg,f,c
   671  003124  E1FD               	bnz	clear_0
   672                           
   673                           ; Clear objects allocated to BANK0 (2 bytes)
   674  003126  0100               	movlb	0
   675  003128  6BF4               	clrf	(__pbssBANK0+1)& (0+255),b
   676  00312A  6BF3               	clrf	__pbssBANK0& (0+255),b
   677                           
   678                           ; Clear objects allocated to COMRAM (22 bytes)
   679  00312C  EE00  F037         	lfsr	0,__pbssCOMRAM
   680  003130  0E16               	movlw	22
   681  003132                     clear_1:
   682  003132  6AEE               	clrf	postinc0,c
   683  003134  06E8               	decf	wreg,f,c
   684  003136  E1FD               	bnz	clear_1
   685  003138                     end_of_initialization:
   686                           	callstack 0
   687  003138                     __end_of__initialization:
   688                           	callstack 0
   689  003138  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   690  00313A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   691  00313C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   692  00313E  6EF8               	movwf	tblptru,c
   693  003140  0100               	movlb	0
   694  003142  EF21  F006         	goto	_main	;jump to C main() function
   695                           
   696                           	psect	bssCOMRAM
   697  000037                     __pbssCOMRAM:
   698                           	callstack 0
   699  000037                     _stpMode:
   700                           	callstack 0
   701  000037                     	ds	2
   702  000039                     _clkMode:
   703                           	callstack 0
   704  000039                     	ds	2
   705  00003B                     _hours:
   706                           	callstack 0
   707  00003B                     	ds	2
   708  00003D                     _minutes:
   709                           	callstack 0
   710  00003D                     	ds	2
   711  00003F                     _seconds:
   712                           	callstack 0
   713  00003F                     	ds	2
   714  000041                     _RPS_count:
   715                           	callstack 0
   716  000041                     	ds	2
   717  000043                     _timerCounter:
   718                           	callstack 0
   719  000043                     	ds	2
   720  000045                     _percentCoolCounter:
   721                           	callstack 0
   722  000045                     	ds	2
   723  000047                     _autoMode:
   724                           	callstack 0
   725  000047                     	ds	2
   726  000049                     _operationMode:
   727                           	callstack 0
   728  000049                     	ds	2
   729  00004B                     _HS:
   730                           	callstack 0
   731  00004B                     	ds	2
   732                           
   733                           	psect	dataCOMRAM
   734  000059                     __pdataCOMRAM:
   735                           	callstack 0
   736  000059                     _LCD_INIT_STRING:
   737                           	callstack 0
   738  000059                     	ds	4
   739  00005D                     _initial:
   740                           	callstack 0
   741  00005D                     	ds	2
   742                           
   743                           	psect	bssBANK0
   744  0000F3                     __pbssBANK0:
   745                           	callstack 0
   746  0000F3                     _percentHeatCounter:
   747                           	callstack 0
   748  0000F3                     	ds	2
   749                           
   750                           	psect	bssBANK1
   751  000165                     __pbssBANK1:
   752                           	callstack 0
   753  000165                     _Buffer:
   754                           	callstack 0
   755  000165                     	ds	32
   756                           
   757                           	psect	cstackBANK1
   758  000100                     __pcstackBANK1:
   759                           	callstack 0
   760  000100                     _sprintf$2120:
   761                           	callstack 0
   762                           
   763                           ; 3 bytes @ 0x0
   764  000100                     	ds	3
   765  000103                     sprintf@cp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x3
   769  000103                     	ds	2
   770  000105                     sprintf@ap:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x5
   774  000105                     	ds	1
   775  000106                     sprintf@len:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x6
   779  000106                     	ds	2
   780  000108                     sprintf@tmpval:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x8
   784  000108                     	ds	4
   785  00010C                     sprintf@val:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0xC
   789  00010C                     	ds	4
   790  000110                     sprintf@eexp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x10
   794  000110                     	ds	2
   795  000112                     sprintf@flag:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x12
   799  000112                     	ds	2
   800  000114                     sprintf@fval:
   801                           	callstack 0
   802                           
   803                           ; 3 bytes @ 0x14
   804  000114                     	ds	3
   805  000117                     sprintf@width:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x17
   809  000117                     	ds	2
   810  000119                     sprintf@prec:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x19
   814  000119                     	ds	2
   815  00011B                     sprintf@c:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x1B
   819  00011B                     	ds	1
   820  00011C                     main@AN:
   821                           	callstack 0
   822                           
   823                           ; 9 bytes @ 0x1C
   824  00011C                     	ds	9
   825  000125                     main@Buffer:
   826                           	callstack 0
   827                           
   828                           ; 32 bytes @ 0x25
   829  000125                     	ds	32
   830  000145                     main@voltage:
   831                           	callstack 0
   832                           
   833                           ; 3 bytes @ 0x45
   834  000145                     	ds	3
   835  000148                     _main$2115:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x48
   839  000148                     	ds	2
   840  00014A                     _main$2116:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x4A
   844  00014A                     	ds	2
   845  00014C                     _main$1317:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x4C
   849  00014C                     	ds	2
   850  00014E                     _main$1321:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x4E
   854  00014E                     	ds	2
   855  000150                     _main$1326:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x50
   859  000150                     	ds	2
   860  000152                     _main$1327:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x52
   864  000152                     	ds	2
   865  000154                     _main$1335:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x54
   869  000154                     	ds	2
   870  000156                     _main$1336:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x56
   874  000156                     	ds	2
   875  000158                     _main$1337:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x58
   879  000158                     	ds	2
   880  00015A                     _main$1344:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x5A
   884  00015A                     	ds	2
   885  00015C                     _main$1345:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x5C
   889  00015C                     	ds	2
   890  00015E                     _main$1360:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x5E
   894  00015E                     	ds	2
   895  000160                     _main$1361:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x60
   899  000160                     	ds	2
   900  000162                     main@SendToSerial:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x62
   904  000162                     	ds	1
   905  000163                     main@RecvedChar:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x63
   909  000163                     	ds	1
   910  000164                     main@channel:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x64
   914  000164                     	ds	1
   915                           
   916                           	psect	cstackBANK0
   917  000080                     __pcstackBANK0:
   918                           	callstack 0
   919  000080                     ??_isdigit:
   920  000080                     ??_delay_cycles:
   921  000080                     ?_read_adc_raw_no_lib:
   922                           	callstack 0
   923  000080                     ?___wmul:
   924                           	callstack 0
   925  000080                     ?___awmod:
   926                           	callstack 0
   927  000080                     ?___ftpack:
   928                           	callstack 0
   929  000080                     ?___ftneg:
   930                           	callstack 0
   931  000080                     ?__tdiv_to_l_:
   932                           	callstack 0
   933  000080                     ?__div_to_l_:
   934                           	callstack 0
   935  000080                     ?___lldiv:
   936                           	callstack 0
   937  000080                     send_byte_no_lib@c:
   938                           	callstack 0
   939  000080                     read_byte_no_lib@c:
   940                           	callstack 0
   941  000080                     ___lbmod@divisor:
   942                           	callstack 0
   943  000080                     delay_ms@n:
   944                           	callstack 0
   945  000080                     set_pwm1_raw@raw_value:
   946                           	callstack 0
   947  000080                     ___wmul@multiplier:
   948                           	callstack 0
   949  000080                     ___awmod@dividend:
   950                           	callstack 0
   951  000080                     __div_to_l_@f1:
   952                           	callstack 0
   953  000080                     ___ftpack@arg:
   954                           	callstack 0
   955  000080                     __tdiv_to_l_@f1:
   956                           	callstack 0
   957  000080                     ___ftneg@f1:
   958                           	callstack 0
   959  000080                     ___lldiv@dividend:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x0
   963  000080                     	ds	1
   964  000081                     ___lbmod@dividend:
   965                           	callstack 0
   966  000081                     _isdigit$1870:
   967                           	callstack 0
   968  000081                     send_string_no_lib@p:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x1
   972  000081                     	ds	1
   973  000082                     ??_read_adc_raw_no_lib:
   974  000082                     ??_set_pwm1_raw:
   975  000082                     ___lbmod@counter:
   976                           	callstack 0
   977  000082                     isdigit@c:
   978                           	callstack 0
   979  000082                     delay_ms@i:
   980                           	callstack 0
   981  000082                     ___wmul@multiplicand:
   982                           	callstack 0
   983  000082                     ___awmod@divisor:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x2
   987  000082                     	ds	1
   988  000083                     delay_cycles@n:
   989                           	callstack 0
   990  000083                     ___ftpack@exp:
   991                           	callstack 0
   992  000083                     ___lbmod@rem:
   993                           	callstack 0
   994  000083                     __div_to_l_@f2:
   995                           	callstack 0
   996  000083                     __tdiv_to_l_@f2:
   997                           	callstack 0
   998                           
   999                           ; 3 bytes @ 0x3
  1000  000083                     	ds	1
  1001  000084                     read_adc_raw_no_lib@channel:
  1002                           	callstack 0
  1003  000084                     ___awmod@counter:
  1004                           	callstack 0
  1005  000084                     ___ftpack@sign:
  1006                           	callstack 0
  1007  000084                     ___lbdiv@divisor:
  1008                           	callstack 0
  1009  000084                     delay_cycles@x:
  1010                           	callstack 0
  1011  000084                     ___wmul@product:
  1012                           	callstack 0
  1013  000084                     ___lldiv@divisor:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x4
  1017  000084                     	ds	1
  1018  000085                     ??___ftpack:
  1019  000085                     ___awmod@sign:
  1020                           	callstack 0
  1021  000085                     ___lbdiv@dividend:
  1022                           	callstack 0
  1023  000085                     read_adc_raw_no_lib@raw_value:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x5
  1027  000085                     	ds	1
  1028  000086                     ??__tdiv_to_l_:
  1029  000086                     ??_lcd_send_nibble:
  1030  000086                     ?___awdiv:
  1031                           	callstack 0
  1032  000086                     ___lbdiv@counter:
  1033                           	callstack 0
  1034  000086                     ___awdiv@dividend:
  1035                           	callstack 0
  1036  000086                     __div_to_l_@quot:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x6
  1040  000086                     	ds	1
  1041  000087                     lcd_send_nibble@n:
  1042                           	callstack 0
  1043  000087                     ___lbdiv@quotient:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x7
  1047  000087                     	ds	1
  1048  000088                     ?___awtoft:
  1049                           	callstack 0
  1050  000088                     ?___lltoft:
  1051                           	callstack 0
  1052  000088                     ?___lwtoft:
  1053                           	callstack 0
  1054  000088                     lcd_send_byte@n:
  1055                           	callstack 0
  1056  000088                     ___awdiv@divisor:
  1057                           	callstack 0
  1058  000088                     ___awtoft@c:
  1059                           	callstack 0
  1060  000088                     ___lwtoft@c:
  1061                           	callstack 0
  1062  000088                     ___lldiv@quotient:
  1063                           	callstack 0
  1064  000088                     ___lltoft@c:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x8
  1068  000088                     	ds	1
  1069  000089                     lcd_send_byte@cm_data:
  1070                           	callstack 0
  1071  000089                     __tdiv_to_l_@quot:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x9
  1075  000089                     	ds	1
  1076  00008A                     lcd_init@i:
  1077                           	callstack 0
  1078  00008A                     lcd_gotoxy@y:
  1079                           	callstack 0
  1080  00008A                     ___awdiv@counter:
  1081                           	callstack 0
  1082  00008A                     __div_to_l_@cntr:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0xA
  1086  00008A                     	ds	1
  1087  00008B                     lcd_gotoxy@x:
  1088                           	callstack 0
  1089  00008B                     ___awdiv@sign:
  1090                           	callstack 0
  1091  00008B                     ___awtoft@sign:
  1092                           	callstack 0
  1093  00008B                     __div_to_l_@exp1:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0xB
  1097  00008B                     	ds	1
  1098  00008C                     ??___lltoft:
  1099  00008C                     ?___ftdiv:
  1100                           	callstack 0
  1101  00008C                     lcd_gotoxy@address:
  1102                           	callstack 0
  1103  00008C                     ___lldiv@counter:
  1104                           	callstack 0
  1105  00008C                     ___awdiv@quotient:
  1106                           	callstack 0
  1107  00008C                     ___ftdiv@f1:
  1108                           	callstack 0
  1109                           
  1110                           ; 3 bytes @ 0xC
  1111  00008C                     	ds	1
  1112  00008D                     ?___llmod:
  1113                           	callstack 0
  1114  00008D                     lcd_putc@c:
  1115                           	callstack 0
  1116  00008D                     __tdiv_to_l_@cntr:
  1117                           	callstack 0
  1118  00008D                     ___llmod@dividend:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0xD
  1122  00008D                     	ds	1
  1123  00008E                     __tdiv_to_l_@exp1:
  1124                           	callstack 0
  1125  00008E                     lcd_puts@s:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0xE
  1129  00008E                     	ds	1
  1130  00008F                     ___ftdiv@f2:
  1131                           	callstack 0
  1132                           
  1133                           ; 3 bytes @ 0xF
  1134  00008F                     	ds	1
  1135  000090                     ___lltoft@exp:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x10
  1139  000090                     	ds	1
  1140  000091                     ___llmod@divisor:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x11
  1144  000091                     	ds	1
  1145  000092                     ??___ftdiv:
  1146                           
  1147                           ; 1 bytes @ 0x12
  1148  000092                     	ds	3
  1149  000095                     ___ftdiv@cntr:
  1150                           	callstack 0
  1151  000095                     ___llmod@counter:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x15
  1155  000095                     	ds	1
  1156  000096                     ___ftdiv@f3:
  1157                           	callstack 0
  1158                           
  1159                           ; 3 bytes @ 0x16
  1160  000096                     	ds	3
  1161  000099                     ___ftdiv@exp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x19
  1165  000099                     	ds	1
  1166  00009A                     ___ftdiv@sign:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1A
  1170  00009A                     	ds	1
  1171  00009B                     ?_read_adc_voltage:
  1172                           	callstack 0
  1173                           
  1174                           ; 3 bytes @ 0x1B
  1175  00009B                     	ds	3
  1176  00009E                     read_adc_voltage@voltage:
  1177                           	callstack 0
  1178                           
  1179                           ; 3 bytes @ 0x1E
  1180  00009E                     	ds	3
  1181  0000A1                     read_adc_voltage@channel:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x21
  1185  0000A1                     	ds	1
  1186  0000A2                     read_adc_voltage@raw_value:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x22
  1190  0000A2                     	ds	2
  1191  0000A4                     ?___ftmul:
  1192                           	callstack 0
  1193  0000A4                     ___ftmul@f1:
  1194                           	callstack 0
  1195                           
  1196                           ; 3 bytes @ 0x24
  1197  0000A4                     	ds	3
  1198  0000A7                     ___ftmul@f2:
  1199                           	callstack 0
  1200                           
  1201                           ; 3 bytes @ 0x27
  1202  0000A7                     	ds	3
  1203  0000AA                     ??___ftmul:
  1204                           
  1205                           ; 1 bytes @ 0x2A
  1206  0000AA                     	ds	3
  1207  0000AD                     ___ftmul@exp:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x2D
  1211  0000AD                     	ds	1
  1212  0000AE                     ___ftmul@f3_as_product:
  1213                           	callstack 0
  1214                           
  1215                           ; 3 bytes @ 0x2E
  1216  0000AE                     	ds	3
  1217  0000B1                     ___ftmul@cntr:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x31
  1221  0000B1                     	ds	1
  1222  0000B2                     ___ftmul@sign:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x32
  1226  0000B2                     	ds	1
  1227  0000B3                     ?_fround:
  1228                           	callstack 0
  1229  0000B3                     ?_scale:
  1230                           	callstack 0
  1231                           
  1232                           ; 3 bytes @ 0x33
  1233  0000B3                     	ds	3
  1234  0000B6                     ??_fround:
  1235  0000B6                     _scale$2119:
  1236                           	callstack 0
  1237                           
  1238                           ; 3 bytes @ 0x36
  1239  0000B6                     	ds	1
  1240  0000B7                     _fround$2118:
  1241                           	callstack 0
  1242                           
  1243                           ; 3 bytes @ 0x37
  1244  0000B7                     	ds	2
  1245  0000B9                     scale@scl:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x39
  1249  0000B9                     	ds	1
  1250  0000BA                     _fround$2117:
  1251                           	callstack 0
  1252                           
  1253                           ; 3 bytes @ 0x3A
  1254  0000BA                     	ds	3
  1255  0000BD                     fround@prec:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x3D
  1259  0000BD                     	ds	1
  1260  0000BE                     ?___ftadd:
  1261                           	callstack 0
  1262  0000BE                     ___ftadd@f1:
  1263                           	callstack 0
  1264                           
  1265                           ; 3 bytes @ 0x3E
  1266  0000BE                     	ds	3
  1267  0000C1                     ___ftadd@f2:
  1268                           	callstack 0
  1269                           
  1270                           ; 3 bytes @ 0x41
  1271  0000C1                     	ds	3
  1272  0000C4                     ??___ftadd:
  1273                           
  1274                           ; 1 bytes @ 0x44
  1275  0000C4                     	ds	3
  1276  0000C7                     ___ftadd@sign:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x47
  1280  0000C7                     	ds	1
  1281  0000C8                     ___ftadd@exp2:
  1282                           	callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x48
  1285  0000C8                     	ds	1
  1286  0000C9                     ___ftadd@exp1:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x49
  1290  0000C9                     	ds	1
  1291  0000CA                     ?___ftsub:
  1292                           	callstack 0
  1293  0000CA                     ?___fttol:
  1294                           	callstack 0
  1295  0000CA                     ___ftsub@f1:
  1296                           	callstack 0
  1297  0000CA                     ___fttol@f1:
  1298                           	callstack 0
  1299                           
  1300                           ; 3 bytes @ 0x4A
  1301  0000CA                     	ds	3
  1302  0000CD                     ___ftsub@f2:
  1303                           	callstack 0
  1304                           
  1305                           ; 3 bytes @ 0x4D
  1306  0000CD                     	ds	1
  1307  0000CE                     ??___fttol:
  1308                           
  1309                           ; 1 bytes @ 0x4E
  1310  0000CE                     	ds	2
  1311  0000D0                     ___ftge@ff1:
  1312                           	callstack 0
  1313                           
  1314                           ; 3 bytes @ 0x50
  1315  0000D0                     	ds	3
  1316  0000D3                     ___fttol@sign1:
  1317                           	callstack 0
  1318  0000D3                     ___ftge@ff2:
  1319                           	callstack 0
  1320                           
  1321                           ; 3 bytes @ 0x53
  1322  0000D3                     	ds	1
  1323  0000D4                     ___fttol@lval:
  1324                           	callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x54
  1327  0000D4                     	ds	2
  1328  0000D6                     ??___ftge:
  1329                           
  1330                           ; 1 bytes @ 0x56
  1331  0000D6                     	ds	2
  1332  0000D8                     ___fttol@exp1:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x58
  1336  0000D8                     	ds	1
  1337  0000D9                     ?_sprintf:
  1338                           	callstack 0
  1339  0000D9                     sprintf@sp:
  1340                           	callstack 0
  1341  0000D9                     set_pwm1_percent@value:
  1342                           	callstack 0
  1343                           
  1344                           ; 3 bytes @ 0x59
  1345  0000D9                     	ds	2
  1346  0000DB                     sprintf@f:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x5B
  1350  0000DB                     	ds	1
  1351  0000DC                     set_pwm1_percent@tmp:
  1352                           	callstack 0
  1353                           
  1354                           ; 3 bytes @ 0x5C
  1355  0000DC                     	ds	3
  1356  0000DF                     set_pwm1_percent@raw_val:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x5F
  1360  0000DF                     	ds	5
  1361  0000E4                     ??_sprintf:
  1362                           
  1363                           ; 1 bytes @ 0x64
  1364  0000E4                     	ds	6
  1365  0000EA                     _autoHeat$2113:
  1366                           	callstack 0
  1367  0000EA                     _autoCool$2112:
  1368                           	callstack 0
  1369                           
  1370                           ; 3 bytes @ 0x6A
  1371  0000EA                     	ds	3
  1372  0000ED                     _autoCool$1109:
  1373                           	callstack 0
  1374                           
  1375                           ; 3 bytes @ 0x6D
  1376  0000ED                     	ds	3
  1377  0000F0                     autoCool@value:
  1378                           	callstack 0
  1379                           
  1380                           ; 3 bytes @ 0x70
  1381  0000F0                     	ds	3
  1382  0000F3                     
  1383                           ; 1 bytes @ 0x73
  1384                           
  1385                           	psect	cstackCOMRAM
  1386  000001                     __pcstackCOMRAM:
  1387                           	callstack 0
  1388  000001                     ?i2___ftpack:
  1389                           	callstack 0
  1390  000001                     i2set_pwm1_raw@raw_value:
  1391                           	callstack 0
  1392  000001                     i2___ftpack@arg:
  1393                           	callstack 0
  1394                           
  1395                           ; 3 bytes @ 0x0
  1396  000001                     	ds	2
  1397  000003                     ??i2_set_pwm1_raw:
  1398                           
  1399                           ; 1 bytes @ 0x2
  1400  000003                     	ds	1
  1401  000004                     i2___ftpack@exp:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x3
  1405  000004                     	ds	1
  1406  000005                     i2___ftpack@sign:
  1407                           	callstack 0
  1408                           
  1409                           ; 1 bytes @ 0x4
  1410  000005                     	ds	1
  1411  000006                     ??i2___ftpack:
  1412                           
  1413                           ; 1 bytes @ 0x5
  1414  000006                     	ds	3
  1415  000009                     ?i2___ftadd:
  1416                           	callstack 0
  1417  000009                     ?i2___lwtoft:
  1418                           	callstack 0
  1419  000009                     i2___lwtoft@c:
  1420                           	callstack 0
  1421  000009                     i2___ftadd@f1:
  1422                           	callstack 0
  1423                           
  1424                           ; 3 bytes @ 0x8
  1425  000009                     	ds	3
  1426  00000C                     ?i2___ftmul:
  1427                           	callstack 0
  1428  00000C                     i2___ftadd@f2:
  1429                           	callstack 0
  1430  00000C                     i2___ftmul@f1:
  1431                           	callstack 0
  1432                           
  1433                           ; 3 bytes @ 0xB
  1434  00000C                     	ds	3
  1435  00000F                     ??i2___ftadd:
  1436  00000F                     i2___ftmul@f2:
  1437                           	callstack 0
  1438                           
  1439                           ; 3 bytes @ 0xE
  1440  00000F                     	ds	3
  1441  000012                     ??i2___ftmul:
  1442  000012                     i2___ftadd@sign:
  1443                           	callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x11
  1446  000012                     	ds	1
  1447  000013                     i2___ftadd@exp2:
  1448                           	callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x12
  1451  000013                     	ds	1
  1452  000014                     i2___ftadd@exp1:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x13
  1456  000014                     	ds	1
  1457  000015                     ?i2___ftsub:
  1458                           	callstack 0
  1459  000015                     ?i2___fttol:
  1460                           	callstack 0
  1461  000015                     i2___ftmul@exp:
  1462                           	callstack 0
  1463  000015                     i2___ftsub@f1:
  1464                           	callstack 0
  1465  000015                     i2___fttol@f1:
  1466                           	callstack 0
  1467                           
  1468                           ; 3 bytes @ 0x14
  1469  000015                     	ds	1
  1470  000016                     i2___ftmul@f3_as_product:
  1471                           	callstack 0
  1472                           
  1473                           ; 3 bytes @ 0x15
  1474  000016                     	ds	2
  1475  000018                     i2___ftsub@f2:
  1476                           	callstack 0
  1477                           
  1478                           ; 3 bytes @ 0x17
  1479  000018                     	ds	1
  1480  000019                     ??i2___fttol:
  1481  000019                     i2___ftmul@cntr:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x18
  1485  000019                     	ds	1
  1486  00001A                     i2___ftmul@sign:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x19
  1490  00001A                     	ds	1
  1491  00001B                     ?i2___ftdiv:
  1492                           	callstack 0
  1493  00001B                     i2___ftdiv@f1:
  1494                           	callstack 0
  1495  00001B                     i2___ftge@ff1:
  1496                           	callstack 0
  1497                           
  1498                           ; 3 bytes @ 0x1A
  1499  00001B                     	ds	3
  1500  00001E                     i2___fttol@sign1:
  1501                           	callstack 0
  1502  00001E                     i2___ftdiv@f2:
  1503                           	callstack 0
  1504  00001E                     i2___ftge@ff2:
  1505                           	callstack 0
  1506                           
  1507                           ; 3 bytes @ 0x1D
  1508  00001E                     	ds	1
  1509  00001F                     i2___fttol@lval:
  1510                           	callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x1E
  1513  00001F                     	ds	2
  1514  000021                     ??i2___ftdiv:
  1515  000021                     ??i2___ftge:
  1516                           
  1517                           ; 1 bytes @ 0x20
  1518  000021                     	ds	2
  1519  000023                     i2___fttol@exp1:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x22
  1523  000023                     	ds	1
  1524  000024                     i2___ftdiv@cntr:
  1525                           	callstack 0
  1526                           
  1527                           ; 1 bytes @ 0x23
  1528  000024                     	ds	1
  1529  000025                     i2___ftdiv@f3:
  1530                           	callstack 0
  1531                           
  1532                           ; 3 bytes @ 0x24
  1533  000025                     	ds	3
  1534  000028                     i2___ftdiv@exp:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x27
  1538  000028                     	ds	1
  1539  000029                     i2___ftdiv@sign:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x28
  1543  000029                     	ds	1
  1544  00002A                     i2set_pwm1_percent@value:
  1545                           	callstack 0
  1546                           
  1547                           ; 3 bytes @ 0x29
  1548  00002A                     	ds	3
  1549  00002D                     i2set_pwm1_percent@tmp:
  1550                           	callstack 0
  1551                           
  1552                           ; 3 bytes @ 0x2C
  1553  00002D                     	ds	3
  1554  000030                     i2set_pwm1_percent@raw_val:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x2F
  1558  000030                     	ds	2
  1559  000032                     ??_highIsr:
  1560                           
  1561                           ; 1 bytes @ 0x31
  1562  000032                     	ds	2
  1563  000034                     _highIsr$2194:
  1564                           	callstack 0
  1565                           
  1566                           ; 3 bytes @ 0x33
  1567  000034                     	ds	3
  1568                           
  1569 ;;
  1570 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1571 ;;
  1572 ;; *************** function _main *****************
  1573 ;; Defined at:
  1574 ;;		line 528 in file "Main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  Buffer         32   37[BANK1 ] unsigned char [32]
  1579 ;;  AN              9   28[BANK1 ] float [3]
  1580 ;;  voltage         3   69[BANK1 ] float 
  1581 ;;  RPS             2    0        int 
  1582 ;;  raw_val         2    0        int 
  1583 ;;  channel         1  100[BANK1 ] unsigned char 
  1584 ;;  RecvedChar      1   99[BANK1 ] unsigned char 
  1585 ;;  SendToSerial    1   98[BANK1 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 3F/1
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         0       0      73       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:         0       0      73       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:       73 bytes
  1600 ;; Hardware stack levels required when called:   11
  1601 ;; This function calls:
  1602 ;;		___ftge
  1603 ;;		___ftmul
  1604 ;;		___ftsub
  1605 ;;		___wmul
  1606 ;;		_autoCool
  1607 ;;		_autoHeat
  1608 ;;		_init
  1609 ;;		_init_adc_no_lib
  1610 ;;		_init_pwm1
  1611 ;;		_is_byte_available
  1612 ;;		_lcd_gotoxy
  1613 ;;		_lcd_init
  1614 ;;		_lcd_putc
  1615 ;;		_lcd_puts
  1616 ;;		_read_adc_voltage
  1617 ;;		_read_byte_no_lib
  1618 ;;		_send_string_no_lib
  1619 ;;		_setupPorts
  1620 ;;		_setupSerial
  1621 ;;		_sprintf
  1622 ;; This function is called by:
  1623 ;;		Startup code after reset
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text0
  1628  000C42                     __ptext0:
  1629                           	callstack 0
  1630  000C42                     _main:
  1631                           	callstack 20
  1632                           
  1633                           ;Main.c: 529: char Buffer[32];;Main.c: 530: float AN[3];;Main.c: 531: int raw_val;;Main.
      +                          c: 532: unsigned char channel;;Main.c: 533: float voltage;;Main.c: 534: setupPorts();
  1634                           
  1635                           ;incstack = 0
  1636  000C42  EC60  F01A         	call	_setupPorts	;wreg free
  1637                           
  1638                           ;Main.c: 535: setupSerial();
  1639  000C46  EC40  F01A         	call	_setupSerial	;wreg free
  1640                           
  1641                           ;Main.c: 536: init();
  1642  000C4A  EC6B  F010         	call	_init	;wreg free
  1643                           
  1644                           ;Main.c: 537: init_pwm1();
  1645  000C4E  ECB0  F01A         	call	_init_pwm1	;wreg free
  1646                           
  1647                           ;Main.c: 539: lcd_init();
  1648  000C52  EC73  F017         	call	_lcd_init	;wreg free
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;Main.c: 540: init_adc_no_lib();
  1652  000C56  ECC8  F01A         	call	_init_adc_no_lib	;wreg free
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;Main.c: 541: send_string_no_lib((unsigned char *) "\r\rReading DAta About the Air condi
      +                          tioner");
  1656  000C5A  0E13               	movlw	low STR_4
  1657  000C5C  6F81               	movwf	send_string_no_lib@p& (0+255),b
  1658  000C5E  0EFF               	movlw	high STR_4
  1659  000C60  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  1660  000C62  ECFD  F017         	call	_send_string_no_lib	;wreg free
  1661                           
  1662                           ;Main.c: 543: lcd_putc('\f');
  1663  000C66  0E0C               	movlw	12
  1664  000C68  ECCF  F017         	call	_lcd_putc
  1665                           
  1666                           ;Main.c: 545: unsigned char SendToSerial = 0;
  1667  000C6C  0E00               	movlw	0
  1668  000C6E  0101               	movlb	1	; () banked
  1669  000C70  6F62               	movwf	main@SendToSerial& (0+255),b
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;Main.c: 546: int RPS;;Main.c: 548: HS = 0;
  1673  000C72  0E00               	movlw	0
  1674  000C74  6E4C               	movwf	(_HS+1)^0,c
  1675  000C76  0E00               	movlw	0
  1676  000C78  6E4B               	movwf	_HS^0,c
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;Main.c: 549: SP = 0;
  1680  000C7A  0E00               	movlw	0
  1681  000C7C  6E53               	movwf	_SP^0,c
  1682  000C7E  0E00               	movlw	0
  1683  000C80  6E54               	movwf	(_SP+1)^0,c
  1684  000C82  0E00               	movlw	0
  1685  000C84  6E55               	movwf	(_SP+2)^0,c
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;Main.c: 550: OT = 0;
  1689  000C86  0E00               	movlw	0
  1690  000C88  6F85               	movwf	_OT& (0+255),b
  1691  000C8A  0E00               	movlw	0
  1692  000C8C  6F86               	movwf	(_OT+1)& (0+255),b
  1693  000C8E  0E00               	movlw	0
  1694  000C90  6F87               	movwf	(_OT+2)& (0+255),b
  1695                           
  1696                           ; BSR set to: 1
  1697                           ;Main.c: 551: RT = 0.0;
  1698  000C92  0E00               	movlw	0
  1699  000C94  6E50               	movwf	_RT^0,c
  1700  000C96  0E00               	movlw	0
  1701  000C98  6E51               	movwf	(_RT+1)^0,c
  1702  000C9A  0E00               	movlw	0
  1703  000C9C  6E52               	movwf	(_RT+2)^0,c
  1704                           
  1705                           ; BSR set to: 1
  1706                           ;Main.c: 552: coolError = 0;
  1707  000C9E  0E00               	movlw	0
  1708  000CA0  6E4D               	movwf	_coolError^0,c
  1709  000CA2  0E00               	movlw	0
  1710  000CA4  6E4E               	movwf	(_coolError+1)^0,c
  1711  000CA6  0E00               	movlw	0
  1712  000CA8  6E4F               	movwf	(_coolError+2)^0,c
  1713                           
  1714                           ; BSR set to: 1
  1715                           ;Main.c: 553: heatError = 0;
  1716  000CAA  0E00               	movlw	0
  1717  000CAC  6E56               	movwf	_heatError^0,c
  1718  000CAE  0E00               	movlw	0
  1719  000CB0  6E57               	movwf	(_heatError+1)^0,c
  1720  000CB2  0E00               	movlw	0
  1721  000CB4  6E58               	movwf	(_heatError+2)^0,c
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;Main.c: 554: operationMode = 0;
  1725  000CB6  0E00               	movlw	0
  1726  000CB8  6E4A               	movwf	(_operationMode+1)^0,c
  1727  000CBA  0E00               	movlw	0
  1728  000CBC  6E49               	movwf	_operationMode^0,c
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;Main.c: 555: autoMode = 0;
  1732  000CBE  0E00               	movlw	0
  1733  000CC0  6E48               	movwf	(_autoMode+1)^0,c
  1734  000CC2  0E00               	movlw	0
  1735  000CC4  6E47               	movwf	_autoMode^0,c
  1736                           
  1737                           ; BSR set to: 1
  1738                           ;Main.c: 556: percentHeatCounter = 0;
  1739  000CC6  0E00               	movlw	0
  1740  000CC8  0100               	movlb	0	; () banked
  1741  000CCA  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  1742  000CCC  0E00               	movlw	0
  1743  000CCE  6FF3               	movwf	_percentHeatCounter& (0+255),b
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;Main.c: 557: percentCoolCounter = 0;
  1747  000CD0  0E00               	movlw	0
  1748  000CD2  6E46               	movwf	(_percentCoolCounter+1)^0,c
  1749  000CD4  0E00               	movlw	0
  1750  000CD6  6E45               	movwf	_percentCoolCounter^0,c
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;Main.c: 558: timerCounter = 0;
  1754  000CD8  0E00               	movlw	0
  1755  000CDA  6E44               	movwf	(_timerCounter+1)^0,c
  1756  000CDC  0E00               	movlw	0
  1757  000CDE  6E43               	movwf	_timerCounter^0,c
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;Main.c: 561: TRISCbits.RC0 = 1;
  1761  000CE0  8094               	bsf	148,0,c	;volatile
  1762  000CE2                     l353:
  1763  000CE2  0004               	clrwdt		;# 
  1764                           
  1765                           ;Main.c: 565: SP = read_adc_voltage(0) * 20;
  1766  000CE4  0E00               	movlw	0
  1767  000CE6  EC0A  F017         	call	_read_adc_voltage
  1768  000CEA  C09B  F0A4         	movff	?_read_adc_voltage,___ftmul@f1
  1769  000CEE  C09C  F0A5         	movff	?_read_adc_voltage+1,___ftmul@f1+1
  1770  000CF2  C09D  F0A6         	movff	?_read_adc_voltage+2,___ftmul@f1+2
  1771  000CF6  0E00               	movlw	0
  1772  000CF8  6FA7               	movwf	___ftmul@f2& (0+255),b
  1773  000CFA  0EA0               	movlw	160
  1774  000CFC  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  1775  000CFE  0E41               	movlw	65
  1776  000D00  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  1777  000D02  ECE6  F011         	call	___ftmul	;wreg free
  1778  000D06  C0A4  F053         	movff	?___ftmul,_SP
  1779  000D0A  C0A5  F054         	movff	?___ftmul+1,_SP+1
  1780  000D0E  C0A6  F055         	movff	?___ftmul+2,_SP+2
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;Main.c: 566: OT = read_adc_voltage(1) * 20;
  1784  000D12  0E01               	movlw	1
  1785  000D14  EC0A  F017         	call	_read_adc_voltage
  1786  000D18  C09B  F0A4         	movff	?_read_adc_voltage,___ftmul@f1
  1787  000D1C  C09C  F0A5         	movff	?_read_adc_voltage+1,___ftmul@f1+1
  1788  000D20  C09D  F0A6         	movff	?_read_adc_voltage+2,___ftmul@f1+2
  1789  000D24  0E00               	movlw	0
  1790  000D26  6FA7               	movwf	___ftmul@f2& (0+255),b
  1791  000D28  0EA0               	movlw	160
  1792  000D2A  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  1793  000D2C  0E41               	movlw	65
  1794  000D2E  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  1795  000D30  ECE6  F011         	call	___ftmul	;wreg free
  1796  000D34  C0A4  F185         	movff	?___ftmul,_OT
  1797  000D38  C0A5  F186         	movff	?___ftmul+1,_OT+1
  1798  000D3C  C0A6  F187         	movff	?___ftmul+2,_OT+2
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;Main.c: 567: RT = read_adc_voltage(2) * 100.0;
  1802  000D40  0E02               	movlw	2
  1803  000D42  EC0A  F017         	call	_read_adc_voltage
  1804  000D46  C09B  F0A4         	movff	?_read_adc_voltage,___ftmul@f1
  1805  000D4A  C09C  F0A5         	movff	?_read_adc_voltage+1,___ftmul@f1+1
  1806  000D4E  C09D  F0A6         	movff	?_read_adc_voltage+2,___ftmul@f1+2
  1807  000D52  0E00               	movlw	0
  1808  000D54  6FA7               	movwf	___ftmul@f2& (0+255),b
  1809  000D56  0EC8               	movlw	200
  1810  000D58  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  1811  000D5A  0E42               	movlw	66
  1812  000D5C  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  1813  000D5E  ECE6  F011         	call	___ftmul	;wreg free
  1814  000D62  C0A4  F050         	movff	?___ftmul,_RT
  1815  000D66  C0A5  F051         	movff	?___ftmul+1,_RT+1
  1816  000D6A  C0A6  F052         	movff	?___ftmul+2,_RT+2
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;Main.c: 569: lcd_gotoxy(1, 1);
  1820  000D6E  0E01               	movlw	1
  1821  000D70  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1822  000D72  0E01               	movlw	1
  1823  000D74  ECA3  F018         	call	_lcd_gotoxy
  1824                           
  1825                           ;Main.c: 570: sprintf(Buffer, "RT:%4.2fC ", RT);
  1826  000D78  0E25               	movlw	low main@Buffer
  1827  000D7A  0100               	movlb	0	; () banked
  1828  000D7C  6FD9               	movwf	sprintf@sp& (0+255),b
  1829  000D7E  0E01               	movlw	high main@Buffer
  1830  000D80  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  1831  000D82  0EA6               	movlw	low STR_5
  1832  000D84  6FDB               	movwf	sprintf@f& (0+255),b
  1833  000D86  0EFF               	movlw	high STR_5
  1834  000D88  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  1835  000D8A  C050  F0DD         	movff	_RT,?_sprintf+4
  1836  000D8E  C051  F0DE         	movff	_RT+1,?_sprintf+5
  1837  000D92  C052  F0DF         	movff	_RT+2,?_sprintf+6
  1838  000D96  EC09  F000         	call	_sprintf	;wreg free
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;Main.c: 571: lcd_puts(Buffer);
  1842  000D9A  0E25               	movlw	low main@Buffer
  1843  000D9C  0100               	movlb	0	; () banked
  1844  000D9E  6F8E               	movwf	lcd_puts@s& (0+255),b
  1845  000DA0  0E01               	movlw	high main@Buffer
  1846  000DA2  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1847  000DA4  EC29  F018         	call	_lcd_puts	;wreg free
  1848                           
  1849                           ;Main.c: 573: lcd_gotoxy(14, 1);
  1850  000DA8  0E01               	movlw	1
  1851  000DAA  0100               	movlb	0	; () banked
  1852  000DAC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1853  000DAE  0E0E               	movlw	14
  1854  000DB0  ECA3  F018         	call	_lcd_gotoxy
  1855                           
  1856                           ;Main.c: 574: lcd_puts("H C");
  1857  000DB4  0EE5               	movlw	low STR_6
  1858  000DB6  0100               	movlb	0	; () banked
  1859  000DB8  6F8E               	movwf	lcd_puts@s& (0+255),b
  1860  000DBA  0EFF               	movlw	high STR_6
  1861  000DBC  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1862  000DBE  EC29  F018         	call	_lcd_puts	;wreg free
  1863                           
  1864                           ;Main.c: 576: lcd_gotoxy(1, 2);
  1865  000DC2  0E02               	movlw	2
  1866  000DC4  0100               	movlb	0	; () banked
  1867  000DC6  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1868  000DC8  0E01               	movlw	1
  1869  000DCA  ECA3  F018         	call	_lcd_gotoxy
  1870                           
  1871                           ;Main.c: 577: sprintf(Buffer, "SP:%4.2fC ", SP);
  1872  000DCE  0E25               	movlw	low main@Buffer
  1873  000DD0  0100               	movlb	0	; () banked
  1874  000DD2  6FD9               	movwf	sprintf@sp& (0+255),b
  1875  000DD4  0E01               	movlw	high main@Buffer
  1876  000DD6  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  1877  000DD8  0E9B               	movlw	low STR_7
  1878  000DDA  6FDB               	movwf	sprintf@f& (0+255),b
  1879  000DDC  0EFF               	movlw	high STR_7
  1880  000DDE  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  1881  000DE0  C053  F0DD         	movff	_SP,?_sprintf+4
  1882  000DE4  C054  F0DE         	movff	_SP+1,?_sprintf+5
  1883  000DE8  C055  F0DF         	movff	_SP+2,?_sprintf+6
  1884  000DEC  EC09  F000         	call	_sprintf	;wreg free
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;Main.c: 578: lcd_puts(Buffer);
  1888  000DF0  0E25               	movlw	low main@Buffer
  1889  000DF2  0100               	movlb	0	; () banked
  1890  000DF4  6F8E               	movwf	lcd_puts@s& (0+255),b
  1891  000DF6  0E01               	movlw	high main@Buffer
  1892  000DF8  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1893  000DFA  EC29  F018         	call	_lcd_puts	;wreg free
  1894                           
  1895                           ;Main.c: 580: lcd_gotoxy(14, 2);
  1896  000DFE  0E02               	movlw	2
  1897  000E00  0100               	movlb	0	; () banked
  1898  000E02  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1899  000E04  0E0E               	movlw	14
  1900  000E06  ECA3  F018         	call	_lcd_gotoxy
  1901                           
  1902                           ;Main.c: 581: lcd_puts(PORTCbits.RC5 ? "Y" : "N");
  1903  000E0A  BA82               	btfsc	130,5,c	;volatile
  1904  000E0C  D005               	goto	l6893
  1905  000E0E  0EFA               	movlw	low STR_9
  1906  000E10  0101               	movlb	1	; () banked
  1907  000E12  6F4C               	movwf	_main$1317& (0+255),b
  1908  000E14  0EFF               	movlw	high STR_9
  1909  000E16  D004               	goto	L1
  1910  000E18                     l6893:
  1911  000E18  0EFC               	movlw	low STR_8
  1912  000E1A  0101               	movlb	1	; () banked
  1913  000E1C  6F4C               	movwf	_main$1317& (0+255),b
  1914  000E1E  0EFF               	movlw	high STR_8
  1915  000E20                     L1:
  1916  000E20  6F4D               	movwf	(_main$1317+1)& (0+255),b
  1917                           
  1918                           ; BSR set to: 1
  1919  000E22  C14C  F08E         	movff	_main$1317,lcd_puts@s
  1920  000E26  C14D  F08F         	movff	_main$1317+1,lcd_puts@s+1
  1921  000E2A  EC29  F018         	call	_lcd_puts	;wreg free
  1922                           
  1923                           ;Main.c: 583: lcd_gotoxy(16, 2);
  1924  000E2E  0E02               	movlw	2
  1925  000E30  0100               	movlb	0	; () banked
  1926  000E32  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1927  000E34  0E10               	movlw	16
  1928  000E36  ECA3  F018         	call	_lcd_gotoxy
  1929                           
  1930                           ;Main.c: 584: lcd_puts(PORTCbits.RC2 ? "Y" : "N");
  1931  000E3A  B482               	btfsc	130,2,c	;volatile
  1932  000E3C  D005               	goto	l6903
  1933  000E3E  0EFA               	movlw	low STR_9
  1934  000E40  0101               	movlb	1	; () banked
  1935  000E42  6F4E               	movwf	_main$1321& (0+255),b
  1936  000E44  0EFF               	movlw	high STR_9
  1937  000E46  D004               	goto	L2
  1938  000E48                     l6903:
  1939  000E48  0EFC               	movlw	low STR_8
  1940  000E4A  0101               	movlb	1	; () banked
  1941  000E4C  6F4E               	movwf	_main$1321& (0+255),b
  1942  000E4E  0EFF               	movlw	high STR_8
  1943  000E50                     L2:
  1944  000E50  6F4F               	movwf	(_main$1321+1)& (0+255),b
  1945                           
  1946                           ; BSR set to: 1
  1947  000E52  C14E  F08E         	movff	_main$1321,lcd_puts@s
  1948  000E56  C14F  F08F         	movff	_main$1321+1,lcd_puts@s+1
  1949  000E5A  EC29  F018         	call	_lcd_puts	;wreg free
  1950                           
  1951                           ;Main.c: 586: if (operationMode != 2) {
  1952  000E5E  0E02               	movlw	2
  1953  000E60  1849               	xorwf	_operationMode^0,w,c
  1954  000E62  104A               	iorwf	(_operationMode+1)^0,w,c
  1955  000E64  B4D8               	btfsc	status,2,c
  1956  000E66  D054               	goto	l6927
  1957                           
  1958                           ;Main.c: 587: lcd_gotoxy(1, 3);
  1959  000E68  0E03               	movlw	3
  1960  000E6A  0100               	movlb	0	; () banked
  1961  000E6C  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1962  000E6E  0E01               	movlw	1
  1963  000E70  ECA3  F018         	call	_lcd_gotoxy
  1964                           
  1965                           ;Main.c: 588: sprintf(Buffer, "OT:%4.2fC %s:%0d%% ", OT,;Main.c: 589: operationMode == 0
      +                           ? "H" : "C",;Main.c: 590: operationMode == 0 ? percentHeatCounter * 5 : percentCoolCoun
      +                          ter * 5);
  1966  000E74  5049               	movf	_operationMode^0,w,c
  1967  000E76  104A               	iorwf	(_operationMode+1)^0,w,c
  1968  000E78  B4D8               	btfsc	status,2,c
  1969  000E7A  D00C               	goto	l6915
  1970  000E7C  C045  F080         	movff	_percentCoolCounter,___wmul@multiplier
  1971  000E80  C046  F081         	movff	_percentCoolCounter+1,___wmul@multiplier+1
  1972  000E84  0E00               	movlw	0
  1973  000E86  0100               	movlb	0	; () banked
  1974  000E88  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1975  000E8A  0E05               	movlw	5
  1976  000E8C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1977  000E8E  ECD1  F019         	call	___wmul	;wreg free
  1978  000E92  D00B               	goto	L3
  1979  000E94                     l6915:
  1980  000E94  C0F3  F080         	movff	_percentHeatCounter,___wmul@multiplier
  1981  000E98  C0F4  F081         	movff	_percentHeatCounter+1,___wmul@multiplier+1
  1982  000E9C  0E00               	movlw	0
  1983  000E9E  0100               	movlb	0	; () banked
  1984  000EA0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1985  000EA2  0E05               	movlw	5
  1986  000EA4  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1987  000EA6  ECD1  F019         	call	___wmul	;wreg free
  1988  000EAA                     L3:
  1989  000EAA  C080  F150         	movff	?___wmul,_main$1326
  1990  000EAE  C081  F151         	movff	?___wmul+1,_main$1326+1
  1991                           
  1992                           ; BSR set to: 0
  1993  000EB2  5049               	movf	_operationMode^0,w,c
  1994  000EB4  104A               	iorwf	(_operationMode+1)^0,w,c
  1995  000EB6  B4D8               	btfsc	status,2,c
  1996  000EB8  D005               	goto	l6921
  1997                           
  1998                           ; BSR set to: 0
  1999  000EBA  0EE7               	movlw	low (STR_6+2)
  2000  000EBC  0101               	movlb	1	; () banked
  2001  000EBE  6F52               	movwf	_main$1327& (0+255),b
  2002  000EC0  0EFF               	movlw	high (STR_6+2)
  2003  000EC2  D004               	goto	L4
  2004  000EC4                     l6921:
  2005                           
  2006                           ; BSR set to: 0
  2007  000EC4  0EF8               	movlw	low STR_13
  2008  000EC6  0101               	movlb	1	; () banked
  2009  000EC8  6F52               	movwf	_main$1327& (0+255),b
  2010  000ECA  0EFF               	movlw	high STR_13
  2011  000ECC                     L4:
  2012  000ECC  6F53               	movwf	(_main$1327+1)& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015  000ECE  0E25               	movlw	low main@Buffer
  2016  000ED0  0100               	movlb	0	; () banked
  2017  000ED2  6FD9               	movwf	sprintf@sp& (0+255),b
  2018  000ED4  0E01               	movlw	high main@Buffer
  2019  000ED6  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2020  000ED8  0E7B               	movlw	low STR_12
  2021  000EDA  6FDB               	movwf	sprintf@f& (0+255),b
  2022  000EDC  0EFF               	movlw	high STR_12
  2023  000EDE  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2024  000EE0  C185  F0DD         	movff	_OT,?_sprintf+4
  2025  000EE4  C186  F0DE         	movff	_OT+1,?_sprintf+5
  2026  000EE8  C187  F0DF         	movff	_OT+2,?_sprintf+6
  2027  000EEC  C152  F0E0         	movff	_main$1327,?_sprintf+7
  2028  000EF0  C153  F0E1         	movff	_main$1327+1,?_sprintf+8
  2029  000EF4  C150  F0E2         	movff	_main$1326,?_sprintf+9
  2030  000EF8  C151  F0E3         	movff	_main$1326+1,?_sprintf+10
  2031  000EFC  EC09  F000         	call	_sprintf	;wreg free
  2032  000F00                     l6925:
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;Main.c: 591: lcd_puts(Buffer);
  2036  000F00  0E25               	movlw	low main@Buffer
  2037  000F02  0100               	movlb	0	; () banked
  2038  000F04  6F8E               	movwf	lcd_puts@s& (0+255),b
  2039  000F06  0E01               	movlw	high main@Buffer
  2040  000F08  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2041  000F0A  EC29  F018         	call	_lcd_puts	;wreg free
  2042                           
  2043                           ;Main.c: 592: } else {
  2044  000F0E  D018               	goto	l6933
  2045  000F10                     l6927:
  2046                           
  2047                           ;Main.c: 593: lcd_gotoxy(1, 3);
  2048  000F10  0E03               	movlw	3
  2049  000F12  0100               	movlb	0	; () banked
  2050  000F14  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2051  000F16  0E01               	movlw	1
  2052  000F18  ECA3  F018         	call	_lcd_gotoxy
  2053                           
  2054                           ;Main.c: 594: sprintf(Buffer, "OT:%4.2fC", OT);
  2055  000F1C  0E25               	movlw	low main@Buffer
  2056  000F1E  0100               	movlb	0	; () banked
  2057  000F20  6FD9               	movwf	sprintf@sp& (0+255),b
  2058  000F22  0E01               	movlw	high main@Buffer
  2059  000F24  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2060  000F26  0EB1               	movlw	low STR_15
  2061  000F28  6FDB               	movwf	sprintf@f& (0+255),b
  2062  000F2A  0EFF               	movlw	high STR_15
  2063  000F2C  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2064  000F2E  C185  F0DD         	movff	_OT,?_sprintf+4
  2065  000F32  C186  F0DE         	movff	_OT+1,?_sprintf+5
  2066  000F36  C187  F0DF         	movff	_OT+2,?_sprintf+6
  2067  000F3A  EC09  F000         	call	_sprintf	;wreg free
  2068  000F3E  D7E0               	goto	l6925
  2069  000F40                     l6933:
  2070                           
  2071                           ;Main.c: 596: };Main.c: 598: lcd_gotoxy(1, 4);
  2072  000F40  0E04               	movlw	4
  2073  000F42  0100               	movlb	0	; () banked
  2074  000F44  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2075  000F46  0E01               	movlw	1
  2076  000F48  ECA3  F018         	call	_lcd_gotoxy
  2077                           
  2078                           ;Main.c: 599: sprintf(Buffer, "MD:%s", operationMode == 0 ? "Heat" : operationMode == 1 
      +                          ? "Cool" : "Auto");
  2079  000F4C  5049               	movf	_operationMode^0,w,c
  2080  000F4E  104A               	iorwf	(_operationMode+1)^0,w,c
  2081  000F50  B4D8               	btfsc	status,2,c
  2082  000F52  D013               	goto	l6943
  2083  000F54  0449               	decf	_operationMode^0,w,c
  2084  000F56  104A               	iorwf	(_operationMode+1)^0,w,c
  2085  000F58  B4D8               	btfsc	status,2,c
  2086  000F5A  D005               	goto	l6941
  2087  000F5C  0EDB               	movlw	low STR_19
  2088  000F5E  0101               	movlb	1	; () banked
  2089  000F60  6F56               	movwf	_main$1336& (0+255),b
  2090  000F62  0EFF               	movlw	high STR_19
  2091  000F64  D004               	goto	L5
  2092  000F66                     l6941:
  2093  000F66  0ED6               	movlw	low STR_18
  2094  000F68  0101               	movlb	1	; () banked
  2095  000F6A  6F56               	movwf	_main$1336& (0+255),b
  2096  000F6C  0EFF               	movlw	high STR_18
  2097  000F6E                     L5:
  2098  000F6E  6F57               	movwf	(_main$1336+1)& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101  000F70  C156  F154         	movff	_main$1336,_main$1335
  2102  000F74  C157  F155         	movff	_main$1336+1,_main$1335+1
  2103  000F78  D005               	goto	l6945
  2104  000F7A                     l6943:
  2105  000F7A  0EE0               	movlw	low STR_17
  2106  000F7C  0101               	movlb	1	; () banked
  2107  000F7E  6F54               	movwf	_main$1335& (0+255),b
  2108  000F80  0EFF               	movlw	high STR_17
  2109  000F82  6F55               	movwf	(_main$1335+1)& (0+255),b
  2110  000F84                     l6945:
  2111                           
  2112                           ; BSR set to: 1
  2113  000F84  0E25               	movlw	low main@Buffer
  2114  000F86  0100               	movlb	0	; () banked
  2115  000F88  6FD9               	movwf	sprintf@sp& (0+255),b
  2116  000F8A  0E01               	movlw	high main@Buffer
  2117  000F8C  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2118  000F8E  0ED0               	movlw	low STR_16
  2119  000F90  6FDB               	movwf	sprintf@f& (0+255),b
  2120  000F92  0EFF               	movlw	high STR_16
  2121  000F94  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2122  000F96  C154  F0DD         	movff	_main$1335,?_sprintf+4
  2123  000F9A  C155  F0DE         	movff	_main$1335+1,?_sprintf+5
  2124  000F9E  EC09  F000         	call	_sprintf	;wreg free
  2125                           
  2126                           ; BSR set to: 1
  2127                           ;Main.c: 600: lcd_puts(Buffer);
  2128  000FA2  0E25               	movlw	low main@Buffer
  2129  000FA4  0100               	movlb	0	; () banked
  2130  000FA6  6F8E               	movwf	lcd_puts@s& (0+255),b
  2131  000FA8  0E01               	movlw	high main@Buffer
  2132  000FAA  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2133  000FAC  EC29  F018         	call	_lcd_puts	;wreg free
  2134                           
  2135                           ;Main.c: 602: lcd_gotoxy(13, 4);
  2136  000FB0  0E04               	movlw	4
  2137  000FB2  0100               	movlb	0	; () banked
  2138  000FB4  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2139  000FB6  0E0D               	movlw	13
  2140  000FB8  ECA3  F018         	call	_lcd_gotoxy
  2141                           
  2142                           ;Main.c: 607: if (operationMode == 2) autoMode = OT > 60 ? 0 : OT < 40 ? 1 : 2;
  2143  000FBC  0E02               	movlw	2
  2144  000FBE  1849               	xorwf	_operationMode^0,w,c
  2145  000FC0  104A               	iorwf	(_operationMode+1)^0,w,c
  2146  000FC2  A4D8               	btfss	status,2,c
  2147  000FC4  D034               	goto	l6965
  2148  000FC6  0E00               	movlw	0
  2149  000FC8  0100               	movlb	0	; () banked
  2150  000FCA  6FD0               	movwf	___ftge@ff1& (0+255),b
  2151  000FCC  0E70               	movlw	112
  2152  000FCE  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  2153  000FD0  0E42               	movlw	66
  2154  000FD2  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  2155  000FD4  C185  F0D3         	movff	_OT,___ftge@ff2
  2156  000FD8  C186  F0D4         	movff	_OT+1,___ftge@ff2+1
  2157  000FDC  C187  F0D5         	movff	_OT+2,___ftge@ff2+2
  2158  000FE0  EC5E  F016         	call	___ftge	;wreg free
  2159  000FE4  A0D8               	btfss	status,0,c
  2160  000FE6  D01F               	goto	l6963
  2161                           
  2162                           ; BSR set to: 0
  2163  000FE8  C185  F0D0         	movff	_OT,___ftge@ff1
  2164  000FEC  C186  F0D1         	movff	_OT+1,___ftge@ff1+1
  2165  000FF0  C187  F0D2         	movff	_OT+2,___ftge@ff1+2
  2166  000FF4  0E00               	movlw	0
  2167  000FF6  6FD3               	movwf	___ftge@ff2& (0+255),b
  2168  000FF8  0E20               	movlw	32
  2169  000FFA  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  2170  000FFC  0E42               	movlw	66
  2171  000FFE  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  2172  001000  EC5E  F016         	call	___ftge	;wreg free
  2173  001004  A0D8               	btfss	status,0,c
  2174  001006  D005               	goto	l6959
  2175                           
  2176                           ; BSR set to: 0
  2177  001008  0E00               	movlw	0
  2178  00100A  0101               	movlb	1	; () banked
  2179  00100C  6F59               	movwf	(_main$1337+1)& (0+255),b
  2180  00100E  0E02               	movlw	2
  2181  001010  D004               	goto	L6
  2182  001012                     l6959:
  2183                           
  2184                           ; BSR set to: 0
  2185  001012  0E00               	movlw	0
  2186  001014  0101               	movlb	1	; () banked
  2187  001016  6F59               	movwf	(_main$1337+1)& (0+255),b
  2188  001018  0E01               	movlw	1
  2189  00101A                     L6:
  2190  00101A  6F58               	movwf	_main$1337& (0+255),b
  2191                           
  2192                           ; BSR set to: 1
  2193  00101C  C158  F047         	movff	_main$1337,_autoMode
  2194  001020  C159  F048         	movff	_main$1337+1,_autoMode+1
  2195  001024  D004               	goto	l6965
  2196  001026                     l6963:
  2197                           
  2198                           ; BSR set to: 0
  2199  001026  0E00               	movlw	0
  2200  001028  6E48               	movwf	(_autoMode+1)^0,c
  2201  00102A  0E00               	movlw	0
  2202  00102C  6E47               	movwf	_autoMode^0,c
  2203  00102E                     l6965:
  2204                           
  2205                           ;Main.c: 609: lcd_gotoxy(9, 4);
  2206  00102E  0E04               	movlw	4
  2207  001030  0100               	movlb	0	; () banked
  2208  001032  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2209  001034  0E09               	movlw	9
  2210  001036  ECA3  F018         	call	_lcd_gotoxy
  2211                           
  2212                           ;Main.c: 610: if (operationMode == 2)sprintf(Buffer, "%s", autoMode == 0 ? "CL" : autoMo
      +                          de == 1 ? "HT" : "HC");
  2213  00103A  0E02               	movlw	2
  2214  00103C  1849               	xorwf	_operationMode^0,w,c
  2215  00103E  104A               	iorwf	(_operationMode+1)^0,w,c
  2216  001040  A4D8               	btfss	status,2,c
  2217  001042  D02C               	goto	l6981
  2218  001044  5047               	movf	_autoMode^0,w,c
  2219  001046  1048               	iorwf	(_autoMode+1)^0,w,c
  2220  001048  B4D8               	btfsc	status,2,c
  2221  00104A  D013               	goto	l6977
  2222  00104C  0447               	decf	_autoMode^0,w,c
  2223  00104E  1048               	iorwf	(_autoMode+1)^0,w,c
  2224  001050  B4D8               	btfsc	status,2,c
  2225  001052  D005               	goto	l6975
  2226  001054  0EEC               	movlw	low STR_23
  2227  001056  0101               	movlb	1	; () banked
  2228  001058  6F5C               	movwf	_main$1345& (0+255),b
  2229  00105A  0EFF               	movlw	high STR_23
  2230  00105C  D004               	goto	L7
  2231  00105E                     l6975:
  2232  00105E  0EF2               	movlw	low STR_22
  2233  001060  0101               	movlb	1	; () banked
  2234  001062  6F5C               	movwf	_main$1345& (0+255),b
  2235  001064  0EFF               	movlw	high STR_22
  2236  001066                     L7:
  2237  001066  6F5D               	movwf	(_main$1345+1)& (0+255),b
  2238                           
  2239                           ; BSR set to: 1
  2240  001068  C15C  F15A         	movff	_main$1345,_main$1344
  2241  00106C  C15D  F15B         	movff	_main$1345+1,_main$1344+1
  2242  001070  D005               	goto	l6979
  2243  001072                     l6977:
  2244  001072  0EEF               	movlw	low STR_21
  2245  001074  0101               	movlb	1	; () banked
  2246  001076  6F5A               	movwf	_main$1344& (0+255),b
  2247  001078  0EFF               	movlw	high STR_21
  2248  00107A  6F5B               	movwf	(_main$1344+1)& (0+255),b
  2249  00107C                     l6979:
  2250                           
  2251                           ; BSR set to: 1
  2252  00107C  0E25               	movlw	low main@Buffer
  2253  00107E  0100               	movlb	0	; () banked
  2254  001080  6FD9               	movwf	sprintf@sp& (0+255),b
  2255  001082  0E01               	movlw	high main@Buffer
  2256  001084  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2257  001086  0ED3               	movlw	low (STR_16+3)
  2258  001088  6FDB               	movwf	sprintf@f& (0+255),b
  2259  00108A  0EFF               	movlw	high (STR_16+3)
  2260  00108C  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2261  00108E  C15A  F0DD         	movff	_main$1344,?_sprintf+4
  2262  001092  C15B  F0DE         	movff	_main$1344+1,?_sprintf+5
  2263  001096  EC09  F000         	call	_sprintf	;wreg free
  2264  00109A  D00B               	goto	l6983
  2265  00109C                     l6981:
  2266                           
  2267                           ;Main.c: 611: else sprintf(Buffer, "  ");
  2268  00109C  0E25               	movlw	low main@Buffer
  2269  00109E  0100               	movlb	0	; () banked
  2270  0010A0  6FD9               	movwf	sprintf@sp& (0+255),b
  2271  0010A2  0E01               	movlw	high main@Buffer
  2272  0010A4  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2273  0010A6  0EE9               	movlw	low STR_2
  2274  0010A8  6FDB               	movwf	sprintf@f& (0+255),b
  2275  0010AA  0EFF               	movlw	high STR_2
  2276  0010AC  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2277  0010AE  EC09  F000         	call	_sprintf	;wreg free
  2278  0010B2                     l6983:
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;Main.c: 612: lcd_puts(Buffer);
  2282  0010B2  0E25               	movlw	low main@Buffer
  2283  0010B4  0100               	movlb	0	; () banked
  2284  0010B6  6F8E               	movwf	lcd_puts@s& (0+255),b
  2285  0010B8  0E01               	movlw	high main@Buffer
  2286  0010BA  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2287  0010BC  EC29  F018         	call	_lcd_puts	;wreg free
  2288                           
  2289                           ;Main.c: 614: if (operationMode == 2) {
  2290  0010C0  0E02               	movlw	2
  2291  0010C2  1849               	xorwf	_operationMode^0,w,c
  2292  0010C4  104A               	iorwf	(_operationMode+1)^0,w,c
  2293  0010C6  A4D8               	btfss	status,2,c
  2294  0010C8  D02E               	goto	l7001
  2295                           
  2296                           ;Main.c: 615: if (autoMode == 0) autoCool();
  2297  0010CA  5047               	movf	_autoMode^0,w,c
  2298  0010CC  1048               	iorwf	(_autoMode+1)^0,w,c
  2299  0010CE  A4D8               	btfss	status,2,c
  2300  0010D0  D003               	goto	l6991
  2301  0010D2                     u8130:
  2302  0010D2  ECA0  F00F         	call	_autoCool	;wreg free
  2303  0010D6  D027               	goto	l7001
  2304  0010D8                     l6991:
  2305                           
  2306                           ;Main.c: 616: else if (autoMode == 1) autoHeat();
  2307  0010D8  0447               	decf	_autoMode^0,w,c
  2308  0010DA  1048               	iorwf	(_autoMode+1)^0,w,c
  2309  0010DC  A4D8               	btfss	status,2,c
  2310  0010DE  D003               	goto	l6995
  2311  0010E0                     u8140:
  2312  0010E0  EC21  F00D         	call	_autoHeat	;wreg free
  2313  0010E4  D020               	goto	l7001
  2314  0010E6                     l6995:
  2315                           
  2316                           ;Main.c: 617: else (SP - RT) > 0 ? autoHeat() : autoCool();
  2317  0010E6  0E00               	movlw	0
  2318  0010E8  0100               	movlb	0	; () banked
  2319  0010EA  6FD0               	movwf	___ftge@ff1& (0+255),b
  2320  0010EC  0E00               	movlw	0
  2321  0010EE  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  2322  0010F0  0E00               	movlw	0
  2323  0010F2  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  2324  0010F4  C050  F0CD         	movff	_RT,___ftsub@f2
  2325  0010F8  C051  F0CE         	movff	_RT+1,___ftsub@f2+1
  2326  0010FC  C052  F0CF         	movff	_RT+2,___ftsub@f2+2
  2327  001100  C053  F0CA         	movff	_SP,___ftsub@f1
  2328  001104  C054  F0CB         	movff	_SP+1,___ftsub@f1+1
  2329  001108  C055  F0CC         	movff	_SP+2,___ftsub@f1+2
  2330  00110C  ECC5  F018         	call	___ftsub	;wreg free
  2331  001110  C0CA  F0D3         	movff	?___ftsub,___ftge@ff2
  2332  001114  C0CB  F0D4         	movff	?___ftsub+1,___ftge@ff2+1
  2333  001118  C0CC  F0D5         	movff	?___ftsub+2,___ftge@ff2+2
  2334  00111C  EC5E  F016         	call	___ftge	;wreg free
  2335  001120  A0D8               	btfss	status,0,c
  2336  001122  D7DE               	goto	u8140
  2337  001124  D7D6               	goto	u8130
  2338  001126                     l7001:
  2339                           
  2340                           ;Main.c: 618: };Main.c: 619: for (channel = 0; channel < 3; channel++) {
  2341  001126  0E00               	movlw	0
  2342  001128  0101               	movlb	1	; () banked
  2343  00112A  6F64               	movwf	main@channel& (0+255),b
  2344  00112C                     l7003:
  2345                           
  2346                           ; BSR set to: 1
  2347  00112C  0E02               	movlw	2
  2348  00112E  6564               	cpfsgt	main@channel& (0+255),b
  2349  001130  D001               	goto	l7007
  2350  001132  D5D7               	goto	l353
  2351  001134                     l7007:
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;Main.c: 621: voltage = read_adc_voltage((unsigned char) channel);
  2355  001134  5164               	movf	main@channel& (0+255),w,b
  2356  001136  EC0A  F017         	call	_read_adc_voltage
  2357  00113A  C09B  F145         	movff	?_read_adc_voltage,main@voltage
  2358  00113E  C09C  F146         	movff	?_read_adc_voltage+1,main@voltage+1
  2359  001142  C09D  F147         	movff	?_read_adc_voltage+2,main@voltage+2
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;Main.c: 622: AN[channel] = voltage;
  2363  001146  0101               	movlb	1	; () banked
  2364  001148  5164               	movf	main@channel& (0+255),w,b
  2365  00114A  0D03               	mullw	3
  2366  00114C  0E1C               	movlw	low main@AN
  2367  00114E  24F3               	addwf	243,w,c
  2368  001150  6ED9               	movwf	fsr2l,c
  2369  001152  0E01               	movlw	high main@AN
  2370  001154  20F4               	addwfc	prodh,w,c
  2371  001156  6EDA               	movwf	fsr2h,c
  2372  001158  C145  FFDE         	movff	main@voltage,postinc2
  2373  00115C  C146  FFDE         	movff	main@voltage+1,postinc2
  2374  001160  C147  FFDE         	movff	main@voltage+2,postinc2
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;Main.c: 623: if (is_byte_available()) {
  2378  001164  EC6D  F01A         	call	_is_byte_available	;wreg free
  2379  001168  0900               	iorlw	0
  2380  00116A  B4D8               	btfsc	status,2,c
  2381  00116C  D010               	goto	l412
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;Main.c: 624: RecvedChar = read_byte_no_lib();
  2385  00116E  ECCE  F01A         	call	_read_byte_no_lib	;wreg free
  2386  001172  0101               	movlb	1	; () banked
  2387  001174  6F63               	movwf	main@RecvedChar& (0+255),b
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;Main.c: 625: if (RecvedChar == 'S') SendToSerial = 1;
  2391  001176  0E53               	movlw	83
  2392  001178  1963               	xorwf	main@RecvedChar& (0+255),w,b
  2393  00117A  A4D8               	btfss	status,2,c
  2394  00117C  D002               	goto	l7019
  2395                           
  2396                           ; BSR set to: 1
  2397  00117E  0E01               	movlw	1
  2398  001180  D005               	goto	L9
  2399  001182                     l7019:
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;Main.c: 626: else if (RecvedChar == 'N') SendToSerial = 0;
  2403  001182  0E4E               	movlw	78
  2404  001184  1963               	xorwf	main@RecvedChar& (0+255),w,b
  2405  001186  A4D8               	btfss	status,2,c
  2406  001188  D002               	goto	l412
  2407                           
  2408                           ; BSR set to: 1
  2409  00118A  0E00               	movlw	0
  2410  00118C                     L9:
  2411  00118C  6F62               	movwf	main@SendToSerial& (0+255),b
  2412  00118E                     l412:
  2413                           
  2414                           ; BSR set to: 1
  2415                           ;Main.c: 629: };Main.c: 630: };Main.c: 631: if (SendToSerial) {
  2416                           
  2417                           ; BSR set to: 1
  2418  00118E  5162               	movf	main@SendToSerial& (0+255),w,b
  2419  001190  B4D8               	btfsc	status,2,c
  2420  001192  D09E               	goto	l7053
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;Main.c: 633: sprintf(Buffer, "SP:%4.2fC  OT:%4.2fC\r\n", SP,OT);
  2424  001194  0E25               	movlw	low main@Buffer
  2425  001196  0100               	movlb	0	; () banked
  2426  001198  6FD9               	movwf	sprintf@sp& (0+255),b
  2427  00119A  0E01               	movlw	high main@Buffer
  2428  00119C  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2429  00119E  0E3C               	movlw	low STR_25
  2430  0011A0  6FDB               	movwf	sprintf@f& (0+255),b
  2431  0011A2  0EFF               	movlw	high STR_25
  2432  0011A4  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2433  0011A6  C053  F0DD         	movff	_SP,?_sprintf+4
  2434  0011AA  C054  F0DE         	movff	_SP+1,?_sprintf+5
  2435  0011AE  C055  F0DF         	movff	_SP+2,?_sprintf+6
  2436  0011B2  C185  F0E0         	movff	_OT,?_sprintf+7
  2437  0011B6  C186  F0E1         	movff	_OT+1,?_sprintf+8
  2438  0011BA  C187  F0E2         	movff	_OT+2,?_sprintf+9
  2439  0011BE  EC09  F000         	call	_sprintf	;wreg free
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;Main.c: 634: send_string_no_lib(Buffer);
  2443  0011C2  0E25               	movlw	low main@Buffer
  2444  0011C4  0100               	movlb	0	; () banked
  2445  0011C6  6F81               	movwf	send_string_no_lib@p& (0+255),b
  2446  0011C8  0E01               	movlw	high main@Buffer
  2447  0011CA  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  2448  0011CC  ECFD  F017         	call	_send_string_no_lib	;wreg free
  2449                           
  2450                           ;Main.c: 637: sprintf(Buffer, "RT:%4.2fC\r\n",RT);
  2451  0011D0  0E25               	movlw	low main@Buffer
  2452  0011D2  0100               	movlb	0	; () banked
  2453  0011D4  6FD9               	movwf	sprintf@sp& (0+255),b
  2454  0011D6  0E01               	movlw	high main@Buffer
  2455  0011D8  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2456  0011DA  0E8F               	movlw	low STR_26
  2457  0011DC  6FDB               	movwf	sprintf@f& (0+255),b
  2458  0011DE  0EFF               	movlw	high STR_26
  2459  0011E0  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2460  0011E2  C050  F0DD         	movff	_RT,?_sprintf+4
  2461  0011E6  C051  F0DE         	movff	_RT+1,?_sprintf+5
  2462  0011EA  C052  F0DF         	movff	_RT+2,?_sprintf+6
  2463  0011EE  EC09  F000         	call	_sprintf	;wreg free
  2464                           
  2465                           ;Main.c: 638: send_string_no_lib(Buffer);
  2466  0011F2  0E25               	movlw	low main@Buffer
  2467  0011F4  0100               	movlb	0	; () banked
  2468  0011F6  6F81               	movwf	send_string_no_lib@p& (0+255),b
  2469  0011F8  0E01               	movlw	high main@Buffer
  2470  0011FA  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  2471  0011FC  ECFD  F017         	call	_send_string_no_lib	;wreg free
  2472                           
  2473                           ;Main.c: 639: sprintf(Buffer, "percentHeatCounter:%0d%% percentCoolCounter:%0d%%\r\n",pe
      +                          rcentHeatCounter*5,percentCoolCounter*5);
  2474  001200  C0F3  F080         	movff	_percentHeatCounter,___wmul@multiplier
  2475  001204  C0F4  F081         	movff	_percentHeatCounter+1,___wmul@multiplier+1
  2476  001208  0E00               	movlw	0
  2477  00120A  0100               	movlb	0	; () banked
  2478  00120C  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2479  00120E  0E05               	movlw	5
  2480  001210  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2481  001212  ECD1  F019         	call	___wmul	;wreg free
  2482  001216  C080  F148         	movff	?___wmul,_main$2115
  2483  00121A  C081  F149         	movff	?___wmul+1,_main$2115+1
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;Main.c: 639: sprintf(Buffer, "percentHeatCounter:%0d%% percentCoolCounter:%0d%%\r\n",pe
      +                          rcentHeatCounter*5,percentCoolCounter*5);
  2487  00121E  C045  F080         	movff	_percentCoolCounter,___wmul@multiplier
  2488  001222  C046  F081         	movff	_percentCoolCounter+1,___wmul@multiplier+1
  2489  001226  0E00               	movlw	0
  2490  001228  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2491  00122A  0E05               	movlw	5
  2492  00122C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2493  00122E  ECD1  F019         	call	___wmul	;wreg free
  2494  001232  C080  F14A         	movff	?___wmul,_main$2116
  2495  001236  C081  F14B         	movff	?___wmul+1,_main$2116+1
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;Main.c: 639: sprintf(Buffer, "percentHeatCounter:%0d%% percentCoolCounter:%0d%%\r\n",pe
      +                          rcentHeatCounter*5,percentCoolCounter*5);
  2499  00123A  0E25               	movlw	low main@Buffer
  2500  00123C  6FD9               	movwf	sprintf@sp& (0+255),b
  2501  00123E  0E01               	movlw	high main@Buffer
  2502  001240  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2503  001242  0EDF               	movlw	low STR_27
  2504  001244  6FDB               	movwf	sprintf@f& (0+255),b
  2505  001246  0EFE               	movlw	high STR_27
  2506  001248  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2507  00124A  C148  F0DD         	movff	_main$2115,?_sprintf+4
  2508  00124E  C149  F0DE         	movff	_main$2115+1,?_sprintf+5
  2509  001252  C14A  F0DF         	movff	_main$2116,?_sprintf+6
  2510  001256  C14B  F0E0         	movff	_main$2116+1,?_sprintf+7
  2511  00125A  EC09  F000         	call	_sprintf	;wreg free
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;Main.c: 640: send_string_no_lib(Buffer);
  2515  00125E  0E25               	movlw	low main@Buffer
  2516  001260  0100               	movlb	0	; () banked
  2517  001262  6F81               	movwf	send_string_no_lib@p& (0+255),b
  2518  001264  0E01               	movlw	high main@Buffer
  2519  001266  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  2520  001268  ECFD  F017         	call	_send_string_no_lib	;wreg free
  2521                           
  2522                           ;Main.c: 643: sprintf(Buffer, "MD:%s", operationMode == 0 ? "Heat:ON Cool :OFF\r\n" : op
      +                          erationMode == 1 ? "Cool:ON Heat :OFF\r\n" : "Auto\n");
  2523  00126C  5049               	movf	_operationMode^0,w,c
  2524  00126E  104A               	iorwf	(_operationMode+1)^0,w,c
  2525  001270  B4D8               	btfsc	status,2,c
  2526  001272  D013               	goto	l7047
  2527  001274  0449               	decf	_operationMode^0,w,c
  2528  001276  104A               	iorwf	(_operationMode+1)^0,w,c
  2529  001278  B4D8               	btfsc	status,2,c
  2530  00127A  D005               	goto	l7045
  2531  00127C  0ECA               	movlw	low STR_31
  2532  00127E  0101               	movlb	1	; () banked
  2533  001280  6F60               	movwf	_main$1361& (0+255),b
  2534  001282  0EFF               	movlw	high STR_31
  2535  001284  D004               	goto	L8
  2536  001286                     l7045:
  2537  001286  0E67               	movlw	low STR_30
  2538  001288  0101               	movlb	1	; () banked
  2539  00128A  6F60               	movwf	_main$1361& (0+255),b
  2540  00128C  0EFF               	movlw	high STR_30
  2541  00128E                     L8:
  2542  00128E  6F61               	movwf	(_main$1361+1)& (0+255),b
  2543                           
  2544                           ; BSR set to: 1
  2545  001290  C160  F15E         	movff	_main$1361,_main$1360
  2546  001294  C161  F15F         	movff	_main$1361+1,_main$1360+1
  2547  001298  D005               	goto	l7049
  2548  00129A                     l7047:
  2549  00129A  0E53               	movlw	low STR_29
  2550  00129C  0101               	movlb	1	; () banked
  2551  00129E  6F5E               	movwf	_main$1360& (0+255),b
  2552  0012A0  0EFF               	movlw	high STR_29
  2553  0012A2  6F5F               	movwf	(_main$1360+1)& (0+255),b
  2554  0012A4                     l7049:
  2555                           
  2556                           ; BSR set to: 1
  2557  0012A4  0E25               	movlw	low main@Buffer
  2558  0012A6  0100               	movlb	0	; () banked
  2559  0012A8  6FD9               	movwf	sprintf@sp& (0+255),b
  2560  0012AA  0E01               	movlw	high main@Buffer
  2561  0012AC  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  2562  0012AE  0ED0               	movlw	low STR_16
  2563  0012B0  6FDB               	movwf	sprintf@f& (0+255),b
  2564  0012B2  0EFF               	movlw	high STR_16
  2565  0012B4  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  2566  0012B6  C15E  F0DD         	movff	_main$1360,?_sprintf+4
  2567  0012BA  C15F  F0DE         	movff	_main$1360+1,?_sprintf+5
  2568  0012BE  EC09  F000         	call	_sprintf	;wreg free
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;Main.c: 644: send_string_no_lib(Buffer);
  2572  0012C2  0E25               	movlw	low main@Buffer
  2573  0012C4  0100               	movlb	0	; () banked
  2574  0012C6  6F81               	movwf	send_string_no_lib@p& (0+255),b
  2575  0012C8  0E01               	movlw	high main@Buffer
  2576  0012CA  6F82               	movwf	(send_string_no_lib@p+1)& (0+255),b
  2577  0012CC  ECFD  F017         	call	_send_string_no_lib	;wreg free
  2578  0012D0                     l7053:
  2579  0012D0  0101               	movlb	1	; () banked
  2580  0012D2  2B64               	incf	main@channel& (0+255),f,b
  2581  0012D4  D72B               	goto	l7003
  2582  0012D6                     __end_of_main:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _setupSerial *****************
  2586 ;; Defined at:
  2587 ;;		line 441 in file "Main.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  dummy           1    0        unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    4
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text1
  2616  003480                     __ptext1:
  2617                           	callstack 0
  2618  003480                     _setupSerial:
  2619                           	callstack 26
  2620                           
  2621                           ;Main.c: 442: unsigned char dummy;;Main.c: 443: BAUDCONbits.BRG16 = 0;
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;incstack = 0
  2625  003480  96B8               	bcf	184,3,c	;volatile
  2626                           
  2627                           ;Main.c: 444: TXSTA = 0;
  2628  003482  0E00               	movlw	0
  2629  003484  6EAC               	movwf	172,c	;volatile
  2630                           
  2631                           ;Main.c: 445: SPBRG = 25;
  2632  003486  0E19               	movlw	25
  2633  003488  6EAF               	movwf	175,c	;volatile
  2634                           
  2635                           ;Main.c: 446: SPBRGH = 0;
  2636  00348A  0E00               	movlw	0
  2637  00348C  6EB0               	movwf	176,c	;volatile
  2638                           
  2639                           ;Main.c: 447: TXSTAbits.BRGH = 1;
  2640  00348E  84AC               	bsf	172,2,c	;volatile
  2641                           
  2642                           ;Main.c: 448: TXSTAbits.TXEN = 1;
  2643  003490  8AAC               	bsf	172,5,c	;volatile
  2644                           
  2645                           ;Main.c: 450: RCSTA = 0;
  2646  003492  0E00               	movlw	0
  2647  003494  6EAB               	movwf	171,c	;volatile
  2648                           
  2649                           ;Main.c: 451: RCSTAbits.CREN = 1;
  2650  003496  88AB               	bsf	171,4,c	;volatile
  2651                           
  2652                           ;Main.c: 452: RCSTAbits.SPEN = 1;
  2653  003498  8EAB               	bsf	171,7,c	;volatile
  2654  00349A  50AE               	movf	174,w,c	;volatile
  2655  00349C  50AE               	movf	174,w,c	;volatile
  2656  00349E  0012               	return		;funcret
  2657  0034A0                     __end_of_setupSerial:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _setupPorts *****************
  2661 ;; Defined at:
  2662 ;;		line 458 in file "Main.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    4
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text2
  2691  0034C0                     __ptext2:
  2692                           	callstack 0
  2693  0034C0                     _setupPorts:
  2694                           	callstack 26
  2695                           
  2696                           ;Main.c: 459: ADCON0 = 0;
  2697                           
  2698                           ;incstack = 0
  2699  0034C0  0E00               	movlw	0
  2700  0034C2  6EC2               	movwf	194,c	;volatile
  2701                           
  2702                           ;Main.c: 460: ADCON1 = 0b00001100;
  2703  0034C4  0E0C               	movlw	12
  2704  0034C6  6EC1               	movwf	193,c	;volatile
  2705                           
  2706                           ;Main.c: 462: TRISB = 0xFF;
  2707  0034C8  6893               	setf	147,c	;volatile
  2708                           
  2709                           ;Main.c: 463: TRISC = 0x80;
  2710  0034CA  0E80               	movlw	128
  2711  0034CC  6E94               	movwf	148,c	;volatile
  2712                           
  2713                           ;Main.c: 464: TRISA = 0xFF;
  2714  0034CE  6892               	setf	146,c	;volatile
  2715                           
  2716                           ;Main.c: 465: TRISD = 0x00;
  2717  0034D0  0E00               	movlw	0
  2718  0034D2  6E95               	movwf	149,c	;volatile
  2719                           
  2720                           ;Main.c: 466: TRISE = 0x00;
  2721  0034D4  0E00               	movlw	0
  2722  0034D6  6E96               	movwf	150,c	;volatile
  2723  0034D8  0012               	return		;funcret
  2724  0034DA                     __end_of_setupPorts:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _send_string_no_lib *****************
  2728 ;; Defined at:
  2729 ;;		line 494 in file "Main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  p               2    1[BANK0 ] PTR unsigned char 
  2732 ;;		 -> main@Buffer(32), STR_4(41), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 3F/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    5
  2751 ;; This function calls:
  2752 ;;		_send_byte_no_lib
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text3
  2759  002FFA                     __ptext3:
  2760                           	callstack 0
  2761  002FFA                     _send_string_no_lib:
  2762                           	callstack 25
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;Main.c: 495: while (*p) {
  2766                           
  2767                           ;incstack = 0
  2768  002FFA  D016               	goto	l6805
  2769  002FFC                     l6801:
  2770                           
  2771                           ;Main.c: 496: send_byte_no_lib(*p);
  2772  002FFC  C081  FFF6         	movff	send_string_no_lib@p,tblptrl
  2773  003000  C082  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2774  003004  0E00               	movlw	low (__mediumconst shr (0+16))
  2775  003006  6EF8               	movwf	tblptru,c
  2776  003008  0E0F               	movlw	(high __ramtop+-1)
  2777  00300A  64F7               	cpfsgt	tblptrh,c
  2778  00300C  D003               	bra	u7937
  2779  00300E  0008               	tblrd		*
  2780  003010  50F5               	movf	tablat,w,c
  2781  003012  D005               	bra	u7930
  2782  003014                     u7937:
  2783  003014  CFF6 FFE9          	movff	tblptrl,fsr0l
  2784  003018  CFF7 FFEA          	movff	tblptrh,fsr0h
  2785  00301C  50EF               	movf	indf0,w,c
  2786  00301E                     u7930:
  2787  00301E  EC83  F01A         	call	_send_byte_no_lib
  2788                           
  2789                           ;Main.c: 497: p++;
  2790  003022  0100               	movlb	0	; () banked
  2791  003024  4B81               	infsnz	send_string_no_lib@p& (0+255),f,b
  2792  003026  2B82               	incf	(send_string_no_lib@p+1)& (0+255),f,b
  2793  003028                     l6805:
  2794                           
  2795                           ; BSR set to: 0
  2796  003028  C081  FFF6         	movff	send_string_no_lib@p,tblptrl
  2797  00302C  C082  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2798  003030  0E00               	movlw	low (__mediumconst shr (0+16))
  2799  003032  6EF8               	movwf	tblptru,c
  2800  003034  0E0F               	movlw	(high __ramtop+-1)
  2801  003036  64F7               	cpfsgt	tblptrh,c
  2802  003038  D003               	bra	u7947
  2803  00303A  0008               	tblrd		*
  2804  00303C  50F5               	movf	tablat,w,c
  2805  00303E  D005               	bra	u7940
  2806  003040                     u7947:
  2807  003040  CFF6 FFE9          	movff	tblptrl,fsr0l
  2808  003044  CFF7 FFEA          	movff	tblptrh,fsr0h
  2809  003048  50EF               	movf	indf0,w,c
  2810  00304A                     u7940:
  2811  00304A  0900               	iorlw	0
  2812  00304C  B4D8               	btfsc	status,2,c
  2813  00304E  0012               	return	
  2814  003050  D7D5               	goto	l6801
  2815  003052                     __end_of_send_string_no_lib:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _send_byte_no_lib *****************
  2819 ;; Defined at:
  2820 ;;		line 500 in file "Main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  c               1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  c               1    0[BANK0 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;Total ram usage:        1 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_send_string_no_lib
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text4
  2849  003506                     __ptext4:
  2850                           	callstack 0
  2851  003506                     _send_byte_no_lib:
  2852                           	callstack 25
  2853                           
  2854                           ;incstack = 0
  2855                           ;send_byte_no_lib@c stored from wreg
  2856  003506  0100               	movlb	0	; () banked
  2857  003508  6F80               	movwf	send_byte_no_lib@c& (0+255),b
  2858                           
  2859                           ;Main.c: 501: while (!TXSTAbits.TRMT)
  2860  00350A  D001               	goto	l334
  2861  00350C                     l335:
  2862  00350C  0004               	clrwdt		;# 
  2863  00350E                     l334:
  2864  00350E  A2AC               	btfss	172,1,c	;volatile
  2865  003510  D7FD               	goto	l335
  2866                           
  2867                           ;Main.c: 504: };Main.c: 505: TXREG = c;
  2868  003512  C080  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  2869  003516  0012               	return		;funcret
  2870  003518                     __end_of_send_byte_no_lib:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _read_byte_no_lib *****************
  2874 ;; Defined at:
  2875 ;;		line 521 in file "Main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  c               1    0[BANK0 ] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      unsigned char 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2
  2884 ;; Tracked objects:
  2885 ;;		On entry : 3F/1
  2886 ;;		On exit  : 3F/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        1 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    4
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text5
  2904  00359C                     __ptext5:
  2905                           	callstack 0
  2906  00359C                     _read_byte_no_lib:
  2907                           	callstack 26
  2908                           
  2909                           ; BSR set to: 1
  2910                           ;Main.c: 522: unsigned char c;;Main.c: 523: c = RCREG;
  2911                           
  2912                           ;incstack = 0
  2913  00359C  CFAE F080          	movff	4014,read_byte_no_lib@c	;volatile
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;Main.c: 524: return c;
  2917  0035A0  0100               	movlb	0	; () banked
  2918  0035A2  5180               	movf	read_byte_no_lib@c& (0+255),w,b
  2919                           
  2920                           ; BSR set to: 0
  2921  0035A4  0012               	return		;funcret
  2922  0035A6                     __end_of_read_byte_no_lib:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _read_adc_voltage *****************
  2926 ;; Defined at:
  2927 ;;		line 141 in file "Main.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  channel         1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  channel         1   33[BANK0 ] unsigned char 
  2932 ;;  voltage         3   30[BANK0 ] float 
  2933 ;;  raw_value       2   34[BANK0 ] int 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  3   27[BANK0 ] float 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 3F/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2943 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;Total ram usage:        9 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    6
  2950 ;; This function calls:
  2951 ;;		___awtoft
  2952 ;;		___ftdiv
  2953 ;;		___wmul
  2954 ;;		_read_adc_raw_no_lib
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text6
  2961  002E14                     __ptext6:
  2962                           	callstack 0
  2963  002E14                     _read_adc_voltage:
  2964                           	callstack 24
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;incstack = 0
  2968                           ;read_adc_voltage@channel stored from wreg
  2969  002E14  0100               	movlb	0	; () banked
  2970  002E16  6FA1               	movwf	read_adc_voltage@channel& (0+255),b
  2971                           
  2972                           ;Main.c: 142: int raw_value;;Main.c: 143: float voltage;;Main.c: 144: raw_value = read_a
      +                          dc_raw_no_lib(channel);
  2973  002E18  0100               	movlb	0	; () banked
  2974  002E1A  51A1               	movf	read_adc_voltage@channel& (0+255),w,b
  2975  002E1C  EC06  F019         	call	_read_adc_raw_no_lib
  2976  002E20  C080  F0A2         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  2977  002E24  C081  F0A3         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;Main.c: 145: voltage = (raw_value * 5) / 1023.0;
  2981  002E28  C0A2  F080         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  2982  002E2C  C0A3  F081         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  2983  002E30  0E00               	movlw	0
  2984  002E32  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2985  002E34  0E05               	movlw	5
  2986  002E36  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2987  002E38  ECD1  F019         	call	___wmul	;wreg free
  2988  002E3C  C080  F088         	movff	?___wmul,___awtoft@c
  2989  002E40  C081  F089         	movff	?___wmul+1,___awtoft@c+1
  2990  002E44  EC43  F019         	call	___awtoft	;wreg free
  2991  002E48  C088  F08C         	movff	?___awtoft,___ftdiv@f1
  2992  002E4C  C089  F08D         	movff	?___awtoft+1,___ftdiv@f1+1
  2993  002E50  C08A  F08E         	movff	?___awtoft+2,___ftdiv@f1+2
  2994  002E54  0EC0               	movlw	192
  2995  002E56  6F8F               	movwf	___ftdiv@f2& (0+255),b
  2996  002E58  0E7F               	movlw	127
  2997  002E5A  6F90               	movwf	(___ftdiv@f2+1)& (0+255),b
  2998  002E5C  0E44               	movlw	68
  2999  002E5E  6F91               	movwf	(___ftdiv@f2+2)& (0+255),b
  3000  002E60  ECDA  F012         	call	___ftdiv	;wreg free
  3001  002E64  C08C  F09E         	movff	?___ftdiv,read_adc_voltage@voltage
  3002  002E68  C08D  F09F         	movff	?___ftdiv+1,read_adc_voltage@voltage+1
  3003  002E6C  C08E  F0A0         	movff	?___ftdiv+2,read_adc_voltage@voltage+2
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;Main.c: 146: return voltage;
  3007  002E70  C09E  F09B         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  3008  002E74  C09F  F09C         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  3009  002E78  C0A0  F09D         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  3010                           
  3011                           ; BSR set to: 0
  3012  002E7C  0012               	return		;funcret
  3013  002E7E                     __end_of_read_adc_voltage:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _read_adc_raw_no_lib *****************
  3017 ;; Defined at:
  3018 ;;		line 132 in file "Main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  channel         1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  channel         1    4[BANK0 ] unsigned char 
  3023 ;;  raw_value       2    5[BANK0 ] int 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    0[BANK0 ] int 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 3F/0
  3030 ;;		On exit  : 3F/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:        7 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    4
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_read_adc_voltage
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text7
  3048  00320C                     __ptext7:
  3049                           	callstack 0
  3050  00320C                     _read_adc_raw_no_lib:
  3051                           	callstack 25
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;incstack = 0
  3055                           ;read_adc_raw_no_lib@channel stored from wreg
  3056  00320C  6F84               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  3057                           
  3058                           ;Main.c: 133: int raw_value;;Main.c: 134: ADCON0bits.CHS = channel;
  3059  00320E  C084  F082         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  3060  003212  0100               	movlb	0	; () banked
  3061  003214  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3062  003216  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  3063  003218  50C2               	movf	194,w,c	;volatile
  3064  00321A  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3065  00321C  0BC3               	andlw	-61
  3066  00321E  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3067  003220  6EC2               	movwf	194,c	;volatile
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;Main.c: 135: ADCON0bits.GO = 1;
  3071  003222  82C2               	bsf	194,1,c	;volatile
  3072  003224                     l165:
  3073  003224  B2C2               	btfsc	194,1,c	;volatile
  3074  003226  D7FE               	goto	l165
  3075                           
  3076                           ;Main.c: 137: raw_value = ADRESH << 8 | ADRESL;
  3077  003228  50C3               	movf	195,w,c	;volatile
  3078  00322A  CFC4 F082          	movff	4036,??_read_adc_raw_no_lib	;volatile
  3079  00322E  0100               	movlb	0	; () banked
  3080  003230  6B83               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  3081  003232  C082  F083         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  3082  003236  6B82               	clrf	??_read_adc_raw_no_lib& (0+255),b
  3083  003238  1182               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  3084  00323A  6F85               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  3085  00323C  5183               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  3086  00323E  6F86               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;Main.c: 138: return raw_value;
  3090  003240  C085  F080         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  3091  003244  C086  F081         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  3092                           
  3093                           ; BSR set to: 0
  3094  003248  0012               	return		;funcret
  3095  00324A                     __end_of_read_adc_raw_no_lib:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function ___awtoft *****************
  3099 ;; Defined at:
  3100 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awtoft.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  c               2    8[BANK0 ] int 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  sign            1   11[BANK0 ] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  3    8[BANK0 ] float 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 3F/0
  3111 ;;		On exit  : 3F/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        4 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    5
  3121 ;; This function calls:
  3122 ;;		___ftpack
  3123 ;; This function is called by:
  3124 ;;		_read_adc_voltage
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text8
  3129  003286                     __ptext8:
  3130                           	callstack 0
  3131  003286                     ___awtoft:
  3132                           	callstack 24
  3133                           
  3134                           ; BSR set to: 0
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;incstack = 0
  3138  003286  0E00               	movlw	0
  3139  003288  6F8B               	movwf	___awtoft@sign& (0+255),b
  3140                           
  3141                           ; BSR set to: 0
  3142  00328A  AF89               	btfss	(___awtoft@c+1)& (0+255),7,b
  3143  00328C  D006               	goto	l6583
  3144                           
  3145                           ; BSR set to: 0
  3146  00328E  6D88               	negf	___awtoft@c& (0+255),b
  3147  003290  1F89               	comf	(___awtoft@c+1)& (0+255),f,b
  3148  003292  B0D8               	btfsc	status,0,c
  3149  003294  2B89               	incf	(___awtoft@c+1)& (0+255),f,b
  3150                           
  3151                           ; BSR set to: 0
  3152  003296  0E01               	movlw	1
  3153  003298  6F8B               	movwf	___awtoft@sign& (0+255),b
  3154  00329A                     l6583:
  3155                           
  3156                           ; BSR set to: 0
  3157  00329A  C088  F080         	movff	___awtoft@c,___ftpack@arg
  3158  00329E  C089  F081         	movff	___awtoft@c+1,___ftpack@arg+1
  3159  0032A2  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
  3160  0032A4  0E8E               	movlw	142
  3161  0032A6  6F83               	movwf	___ftpack@exp& (0+255),b
  3162  0032A8  C08B  F084         	movff	___awtoft@sign,___ftpack@sign
  3163  0032AC  EC94  F014         	call	___ftpack	;wreg free
  3164  0032B0  C080  F088         	movff	?___ftpack,?___awtoft
  3165  0032B4  C081  F089         	movff	?___ftpack+1,?___awtoft+1
  3166  0032B8  C082  F08A         	movff	?___ftpack+2,?___awtoft+2
  3167                           
  3168                           ; BSR set to: 0
  3169  0032BC  0012               	return		;funcret
  3170  0032BE                     __end_of___awtoft:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _lcd_init *****************
  3174 ;; Defined at:
  3175 ;;		line 173 in file "Main.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  i               1   10[BANK0 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 3F/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    7
  3196 ;; This function calls:
  3197 ;;		_delay_ms
  3198 ;;		_lcd_send_byte
  3199 ;;		_lcd_send_nibble
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text9
  3206  002EE6                     __ptext9:
  3207                           	callstack 0
  3208  002EE6                     _lcd_init:
  3209                           	callstack 23
  3210                           
  3211                           ;Main.c: 174: unsigned char i;;Main.c: 175: PORTEbits.RE2 = 0;
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;incstack = 0
  3215  002EE6  9484               	bcf	132,2,c	;volatile
  3216                           
  3217                           ;Main.c: 176: PORTEbits.RE1 = 0;
  3218  002EE8  9284               	bcf	132,1,c	;volatile
  3219                           
  3220                           ;Main.c: 178: delay_ms(25);
  3221  002EEA  0E00               	movlw	0
  3222  002EEC  0100               	movlb	0	; () banked
  3223  002EEE  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  3224  002EF0  0E19               	movlw	25
  3225  002EF2  6F80               	movwf	delay_ms@n& (0+255),b
  3226  002EF4  ECBD  F019         	call	_delay_ms	;wreg free
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;Main.c: 179: for (i = 1; i <= 3; ++i) {
  3230  002EF8  0E01               	movlw	1
  3231  002EFA  6F8A               	movwf	lcd_init@i& (0+255),b
  3232  002EFC                     l6613:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;Main.c: 180: lcd_send_nibble(3);
  3236  002EFC  0E03               	movlw	3
  3237  002EFE  ECF7  F019         	call	_lcd_send_nibble
  3238                           
  3239                           ;Main.c: 181: delay_ms(6);
  3240  002F02  0E00               	movlw	0
  3241  002F04  0100               	movlb	0	; () banked
  3242  002F06  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  3243  002F08  0E06               	movlw	6
  3244  002F0A  6F80               	movwf	delay_ms@n& (0+255),b
  3245  002F0C  ECBD  F019         	call	_delay_ms	;wreg free
  3246                           
  3247                           ; BSR set to: 0
  3248  002F10  2B8A               	incf	lcd_init@i& (0+255),f,b
  3249                           
  3250                           ; BSR set to: 0
  3251  002F12  0E03               	movlw	3
  3252  002F14  658A               	cpfsgt	lcd_init@i& (0+255),b
  3253  002F16  D7F2               	goto	l6613
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;Main.c: 182: };Main.c: 184: lcd_send_nibble(2);
  3257  002F18  0E02               	movlw	2
  3258  002F1A  ECF7  F019         	call	_lcd_send_nibble
  3259                           
  3260                           ;Main.c: 185: for (i = 0; i <= 3; ++i) lcd_send_byte(0, LCD_INIT_STRING[i]);
  3261  002F1E  0E00               	movlw	0
  3262  002F20  0100               	movlb	0	; () banked
  3263  002F22  6F8A               	movwf	lcd_init@i& (0+255),b
  3264  002F24                     l6627:
  3265                           
  3266                           ; BSR set to: 0
  3267  002F24  518A               	movf	lcd_init@i& (0+255),w,b
  3268  002F26  0F59               	addlw	low _LCD_INIT_STRING
  3269  002F28  6ED9               	movwf	fsr2l,c
  3270  002F2A  6ADA               	clrf	fsr2h,c
  3271  002F2C  50DF               	movf	indf2,w,c
  3272  002F2E  6F88               	movwf	lcd_send_byte@n& (0+255),b
  3273  002F30  0E00               	movlw	0
  3274  002F32  EC55  F018         	call	_lcd_send_byte
  3275  002F36  0100               	movlb	0	; () banked
  3276  002F38  2B8A               	incf	lcd_init@i& (0+255),f,b
  3277                           
  3278                           ; BSR set to: 0
  3279  002F3A  0E03               	movlw	3
  3280  002F3C  658A               	cpfsgt	lcd_init@i& (0+255),b
  3281  002F3E  D7F2               	goto	l6627
  3282  002F40  0012               	return	
  3283  002F42                     __end_of_lcd_init:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _is_byte_available *****************
  3287 ;; Defined at:
  3288 ;;		line 508 in file "Main.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg
  3297 ;; Tracked objects:
  3298 ;;		On entry : 3F/1
  3299 ;;		On exit  : 3F/1
  3300 ;;		Unchanged: 3F/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    4
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text10
  3317  0034DA                     __ptext10:
  3318                           	callstack 0
  3319  0034DA                     _is_byte_available:
  3320                           	callstack 26
  3321                           
  3322                           ; BSR set to: 1
  3323                           ;Main.c: 510: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;incstack = 0
  3327  0034DA  B4AB               	btfsc	171,2,c	;volatile
  3328  0034DC  D002               	goto	u7970
  3329                           
  3330                           ; BSR set to: 1
  3331  0034DE  A2AB               	btfss	171,1,c	;volatile
  3332  0034E0  D002               	goto	l340
  3333  0034E2                     u7970:
  3334                           
  3335                           ; BSR set to: 1
  3336                           ;Main.c: 511: {;Main.c: 512: RCSTAbits.CREN = 0;
  3337  0034E2  98AB               	bcf	171,4,c	;volatile
  3338                           
  3339                           ;Main.c: 513: RCSTAbits.CREN = 1;
  3340  0034E4  88AB               	bsf	171,4,c	;volatile
  3341  0034E6                     l340:
  3342                           
  3343                           ; BSR set to: 1
  3344                           ;Main.c: 514: };Main.c: 516: if (PIR1bits.RCIF) return 1;
  3345  0034E6  AA9E               	btfss	158,5,c	;volatile
  3346  0034E8  D002               	goto	l6817
  3347                           
  3348                           ; BSR set to: 1
  3349  0034EA  0E01               	movlw	1
  3350  0034EC  0012               	return	
  3351  0034EE                     l6817:
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;Main.c: 517: else return 0;
  3355  0034EE  0E00               	movlw	0
  3356                           
  3357                           ; BSR set to: 1
  3358  0034F0  0012               	return		;funcret
  3359  0034F2                     __end_of_is_byte_available:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _init_adc_no_lib *****************
  3363 ;; Defined at:
  3364 ;;		line 126 in file "Main.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2
  3373 ;; Tracked objects:
  3374 ;;		On entry : 3F/0
  3375 ;;		On exit  : 3F/0
  3376 ;;		Unchanged: 3F/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    4
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text11
  3393  003590                     __ptext11:
  3394                           	callstack 0
  3395  003590                     _init_adc_no_lib:
  3396                           	callstack 26
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;Main.c: 127: ADCON0 = 0;
  3400                           
  3401                           ; BSR set to: 1
  3402                           ;incstack = 0
  3403  003590  0E00               	movlw	0
  3404  003592  6EC2               	movwf	194,c	;volatile
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;Main.c: 128: ADCON0bits.ADON = 1;
  3408  003594  80C2               	bsf	194,0,c	;volatile
  3409                           
  3410                           ;Main.c: 129: ADCON2 = 0b10001001;
  3411  003596  0E89               	movlw	137
  3412  003598  6EC0               	movwf	192,c	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415  00359A  0012               	return		;funcret
  3416  00359C                     __end_of_init_adc_no_lib:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _init *****************
  3420 ;; Defined at:
  3421 ;;		line 357 in file "Main.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  dummy           1    0        unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		_init_pwm1
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text12
  3450  0020D6                     __ptext12:
  3451                           	callstack 0
  3452  0020D6                     _init:
  3453                           	callstack 25
  3454                           
  3455                           ;Main.c: 359: ADCON0 = 0x00 ;
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;incstack = 0
  3459  0020D6  0E00               	movlw	0
  3460  0020D8  6EC2               	movwf	194,c	;volatile
  3461                           
  3462                           ;Main.c: 360: ADCON1 = 0x0C ;
  3463  0020DA  0E0C               	movlw	12
  3464  0020DC  6EC1               	movwf	193,c	;volatile
  3465                           
  3466                           ;Main.c: 361: TRISA = 0xFF ;
  3467  0020DE  6892               	setf	146,c	;volatile
  3468                           
  3469                           ;Main.c: 362: TRISB = 0xFF ;
  3470  0020E0  6893               	setf	147,c	;volatile
  3471                           
  3472                           ;Main.c: 363: TRISC = 0x80 ;
  3473  0020E2  0E80               	movlw	128
  3474  0020E4  6E94               	movwf	148,c	;volatile
  3475                           
  3476                           ;Main.c: 364: TRISD = 0x00 ;
  3477  0020E6  0E00               	movlw	0
  3478  0020E8  6E95               	movwf	149,c	;volatile
  3479                           
  3480                           ;Main.c: 365: TRISE = 0x00 ;
  3481  0020EA  0E00               	movlw	0
  3482  0020EC  6E96               	movwf	150,c	;volatile
  3483                           
  3484                           ;Main.c: 366: PORTD = 0 ;
  3485  0020EE  0E00               	movlw	0
  3486  0020F0  6E83               	movwf	131,c	;volatile
  3487                           
  3488                           ;Main.c: 367: PIE1 = 0 ;
  3489  0020F2  0E00               	movlw	0
  3490  0020F4  6E9D               	movwf	157,c	;volatile
  3491  0020F6  50AE               	movf	174,w,c	;volatile
  3492                           
  3493                           ;Main.c: 372: BAUDCONbits.BRG16 = 0;
  3494  0020F8  96B8               	bcf	184,3,c	;volatile
  3495                           
  3496                           ;Main.c: 373: TXSTA = 0;
  3497  0020FA  0E00               	movlw	0
  3498  0020FC  6EAC               	movwf	172,c	;volatile
  3499                           
  3500                           ;Main.c: 374: SPBRG = 25;
  3501  0020FE  0E19               	movlw	25
  3502  002100  6EAF               	movwf	175,c	;volatile
  3503                           
  3504                           ;Main.c: 375: TXSTAbits.BRGH = 1;
  3505  002102  84AC               	bsf	172,2,c	;volatile
  3506                           
  3507                           ;Main.c: 376: TXSTAbits.TXEN = 1;
  3508  002104  8AAC               	bsf	172,5,c	;volatile
  3509                           
  3510                           ;Main.c: 377: RCSTA = 0;
  3511  002106  0E00               	movlw	0
  3512  002108  6EAB               	movwf	171,c	;volatile
  3513                           
  3514                           ;Main.c: 378: RCSTAbits.CREN = 1;
  3515  00210A  88AB               	bsf	171,4,c	;volatile
  3516                           
  3517                           ;Main.c: 379: RCSTAbits.SPEN = 1;
  3518  00210C  8EAB               	bsf	171,7,c	;volatile
  3519                           
  3520                           ;Main.c: 381: T1CONbits.TMR1CS = 1;
  3521  00210E  82CD               	bsf	205,1,c	;volatile
  3522                           
  3523                           ;Main.c: 382: T1CONbits.TMR1ON = 1;
  3524  002110  80CD               	bsf	205,0,c	;volatile
  3525                           
  3526                           ;Main.c: 383: T1CONbits.T1CKPS1 = 0;
  3527  002112  9ACD               	bcf	205,5,c	;volatile
  3528                           
  3529                           ;Main.c: 384: T1CONbits.T1CKPS0 = 0;
  3530  002114  98CD               	bcf	205,4,c	;volatile
  3531                           
  3532                           ;Main.c: 386: T3CONbits.T3CKPS1 = 0;
  3533  002116  9AB1               	bcf	177,5,c	;volatile
  3534                           
  3535                           ;Main.c: 387: T3CONbits.T3CKPS0 = 0;
  3536  002118  98B1               	bcf	177,4,c	;volatile
  3537                           
  3538                           ;Main.c: 388: T3CONbits.T3SYNC = 1;
  3539  00211A  84B1               	bsf	177,2,c	;volatile
  3540                           
  3541                           ;Main.c: 389: T3CONbits.T3CKPS0 = 0;
  3542  00211C  98B1               	bcf	177,4,c	;volatile
  3543                           
  3544                           ;Main.c: 390: T3CONbits.T3CKPS1 = 0;
  3545  00211E  9AB1               	bcf	177,5,c	;volatile
  3546                           
  3547                           ;Main.c: 391: T3CONbits.RD16 = 1;
  3548  002120  8EB1               	bsf	177,7,c	;volatile
  3549                           
  3550                           ;Main.c: 393: TMR1H = 0;
  3551  002122  0E00               	movlw	0
  3552  002124  6ECF               	movwf	207,c	;volatile
  3553                           
  3554                           ;Main.c: 394: TMR1L = 0;
  3555  002126  0E00               	movlw	0
  3556  002128  6ECE               	movwf	206,c	;volatile
  3557                           
  3558                           ;Main.c: 395: TMR3H = 0x40;
  3559  00212A  0E40               	movlw	64
  3560  00212C  6EB3               	movwf	179,c	;volatile
  3561                           
  3562                           ;Main.c: 396: TMR3L = 0x00;
  3563  00212E  0E00               	movlw	0
  3564  002130  6EB2               	movwf	178,c	;volatile
  3565                           
  3566                           ;Main.c: 398: T3CONbits.TMR3ON = 1;
  3567  002132  80B1               	bsf	177,0,c	;volatile
  3568                           
  3569                           ;Main.c: 399: T3CONbits.TMR3CS = 0;
  3570  002134  92B1               	bcf	177,1,c	;volatile
  3571                           
  3572                           ;Main.c: 401: PIE2bits.TMR3IE = 1;
  3573  002136  82A0               	bsf	160,1,c	;volatile
  3574                           
  3575                           ;Main.c: 402: IPR2bits.TMR3IP = 1;
  3576  002138  82A2               	bsf	162,1,c	;volatile
  3577                           
  3578                           ;Main.c: 404: RCONbits.IPEN = 1;
  3579  00213A  8ED0               	bsf	208,7,c	;volatile
  3580                           
  3581                           ;Main.c: 405: INTCONbits.PEIE = 1;
  3582  00213C  8CF2               	bsf	242,6,c	;volatile
  3583                           
  3584                           ;Main.c: 406: INTCONbits.GIE = 1;
  3585  00213E  8EF2               	bsf	242,7,c	;volatile
  3586                           
  3587                           ;Main.c: 408: INTCONbits.GIEH = 1;
  3588  002140  8EF2               	bsf	242,7,c	;volatile
  3589                           
  3590                           ;Main.c: 409: INTCONbits.GIEL = 1;
  3591  002142  8CF2               	bsf	242,6,c	;volatile
  3592                           
  3593                           ;Main.c: 410: INTCONbits.T0IE = 1;
  3594  002144  8AF2               	bsf	242,5,c	;volatile
  3595                           
  3596                           ;Main.c: 411: INTCON2 = 0;
  3597  002146  0E00               	movlw	0
  3598  002148  6EF1               	movwf	241,c	;volatile
  3599                           
  3600                           ;Main.c: 412: INTCON3 = 0;
  3601  00214A  0E00               	movlw	0
  3602  00214C  6EF0               	movwf	240,c	;volatile
  3603                           
  3604                           ;Main.c: 413: INTCON2bits.INTEDG0 = 1;
  3605  00214E  8CF1               	bsf	241,6,c	;volatile
  3606                           
  3607                           ;Main.c: 414: INTCON2bits.INTEDG1 = 1;
  3608  002150  8AF1               	bsf	241,5,c	;volatile
  3609                           
  3610                           ;Main.c: 415: INTCON3bits.INT1IE = 1;
  3611  002152  86F0               	bsf	240,3,c	;volatile
  3612                           
  3613                           ;Main.c: 416: INTCON3bits.INT2IE = 1;
  3614  002154  88F0               	bsf	240,4,c	;volatile
  3615                           
  3616                           ;Main.c: 418: TRISCbits.RC0 = 1;
  3617  002156  8094               	bsf	148,0,c	;volatile
  3618                           
  3619                           ;Main.c: 419: PORTCbits.RC2 = 0;
  3620  002158  9482               	bcf	130,2,c	;volatile
  3621                           
  3622                           ;Main.c: 420: PORTCbits.RC5 = 0;
  3623  00215A  9A82               	bcf	130,5,c	;volatile
  3624                           
  3625                           ;Main.c: 422: HS = 0;
  3626  00215C  0E00               	movlw	0
  3627  00215E  6E4C               	movwf	(_HS+1)^0,c
  3628  002160  0E00               	movlw	0
  3629  002162  6E4B               	movwf	_HS^0,c
  3630                           
  3631                           ;Main.c: 423: SP = 0;
  3632  002164  0E00               	movlw	0
  3633  002166  6E53               	movwf	_SP^0,c
  3634  002168  0E00               	movlw	0
  3635  00216A  6E54               	movwf	(_SP+1)^0,c
  3636  00216C  0E00               	movlw	0
  3637  00216E  6E55               	movwf	(_SP+2)^0,c
  3638                           
  3639                           ;Main.c: 424: OT = 0;
  3640  002170  0E00               	movlw	0
  3641  002172  0101               	movlb	1	; () banked
  3642  002174  6F85               	movwf	_OT& (0+255),b
  3643  002176  0E00               	movlw	0
  3644  002178  6F86               	movwf	(_OT+1)& (0+255),b
  3645  00217A  0E00               	movlw	0
  3646  00217C  6F87               	movwf	(_OT+2)& (0+255),b
  3647                           
  3648                           ;Main.c: 425: RT = 0.0;
  3649  00217E  0E00               	movlw	0
  3650  002180  6E50               	movwf	_RT^0,c
  3651  002182  0E00               	movlw	0
  3652  002184  6E51               	movwf	(_RT+1)^0,c
  3653  002186  0E00               	movlw	0
  3654  002188  6E52               	movwf	(_RT+2)^0,c
  3655                           
  3656                           ;Main.c: 426: coolError = 0;
  3657  00218A  0E00               	movlw	0
  3658  00218C  6E4D               	movwf	_coolError^0,c
  3659  00218E  0E00               	movlw	0
  3660  002190  6E4E               	movwf	(_coolError+1)^0,c
  3661  002192  0E00               	movlw	0
  3662  002194  6E4F               	movwf	(_coolError+2)^0,c
  3663                           
  3664                           ;Main.c: 427: heatError = 0;
  3665  002196  0E00               	movlw	0
  3666  002198  6E56               	movwf	_heatError^0,c
  3667  00219A  0E00               	movlw	0
  3668  00219C  6E57               	movwf	(_heatError+1)^0,c
  3669  00219E  0E00               	movlw	0
  3670  0021A0  6E58               	movwf	(_heatError+2)^0,c
  3671                           
  3672                           ;Main.c: 428: operationMode = 0;
  3673  0021A2  0E00               	movlw	0
  3674  0021A4  6E4A               	movwf	(_operationMode+1)^0,c
  3675  0021A6  0E00               	movlw	0
  3676  0021A8  6E49               	movwf	_operationMode^0,c
  3677                           
  3678                           ;Main.c: 429: autoMode = 0;
  3679  0021AA  0E00               	movlw	0
  3680  0021AC  6E48               	movwf	(_autoMode+1)^0,c
  3681  0021AE  0E00               	movlw	0
  3682  0021B0  6E47               	movwf	_autoMode^0,c
  3683                           
  3684                           ;Main.c: 430: percentHeatCounter = 0;
  3685  0021B2  0E00               	movlw	0
  3686  0021B4  0100               	movlb	0	; () banked
  3687  0021B6  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  3688  0021B8  0E00               	movlw	0
  3689  0021BA  6FF3               	movwf	_percentHeatCounter& (0+255),b
  3690                           
  3691                           ;Main.c: 431: percentCoolCounter = 0;
  3692  0021BC  0E00               	movlw	0
  3693  0021BE  6E46               	movwf	(_percentCoolCounter+1)^0,c
  3694  0021C0  0E00               	movlw	0
  3695  0021C2  6E45               	movwf	_percentCoolCounter^0,c
  3696                           
  3697                           ;Main.c: 432: timerCounter = 0;
  3698  0021C4  0E00               	movlw	0
  3699  0021C6  6E44               	movwf	(_timerCounter+1)^0,c
  3700  0021C8  0E00               	movlw	0
  3701  0021CA  6E43               	movwf	_timerCounter^0,c
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;Main.c: 434: RCONbits.IPEN = 0;
  3705  0021CC  9ED0               	bcf	208,7,c	;volatile
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;Main.c: 435: INTCONbits.TMR0IE = 1;
  3709  0021CE  8AF2               	bsf	242,5,c	;volatile
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;Main.c: 436: INTCONbits.INT0IE = 1;
  3713  0021D0  88F2               	bsf	242,4,c	;volatile
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;Main.c: 438: init_pwm1();
  3717  0021D2  ECB0  F01A         	call	_init_pwm1	;wreg free
  3718  0021D6  0012               	return		;funcret
  3719  0021D8                     __end_of_init:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _init_pwm1 *****************
  3723 ;; Defined at:
  3724 ;;		line 231 in file "Main.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    4
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_init
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text13
  3754  003560                     __ptext13:
  3755                           	callstack 0
  3756  003560                     _init_pwm1:
  3757                           	callstack 26
  3758                           
  3759                           ;Main.c: 232: PR2 = 255;
  3760                           
  3761                           ;incstack = 0
  3762  003560  68CB               	setf	203,c	;volatile
  3763                           
  3764                           ;Main.c: 233: T2CON = 0;
  3765  003562  0E00               	movlw	0
  3766  003564  6ECA               	movwf	202,c	;volatile
  3767                           
  3768                           ;Main.c: 234: CCP1CON = 0x0C;
  3769  003566  0E0C               	movlw	12
  3770  003568  6EBD               	movwf	189,c	;volatile
  3771                           
  3772                           ;Main.c: 235: T2CONbits.TMR2ON = 1;
  3773  00356A  84CA               	bsf	202,2,c	;volatile
  3774                           
  3775                           ;Main.c: 236: TRISCbits.RC2 =0;
  3776  00356C  9494               	bcf	148,2,c	;volatile
  3777  00356E  0012               	return		;funcret
  3778  003570                     __end_of_init_pwm1:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _autoHeat *****************
  3782 ;; Defined at:
  3783 ;;		line 265 in file "Main.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/1
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   10
  3804 ;; This function calls:
  3805 ;;		___ftadd
  3806 ;;		___ftge
  3807 ;;		___ftmul
  3808 ;;		___ftsub
  3809 ;;		___fttol
  3810 ;;		___lwtoft
  3811 ;;		___wmul
  3812 ;;		_lcd_gotoxy
  3813 ;;		_lcd_putc
  3814 ;;		_lcd_puts
  3815 ;;		_set_pwm1_percent
  3816 ;;		_sprintf
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text14
  3823  001A42                     __ptext14:
  3824                           	callstack 0
  3825  001A42                     _autoHeat:
  3826                           	callstack 20
  3827                           
  3828                           ;Main.c: 266: set_pwm1_percent(0);
  3829                           
  3830                           ;incstack = 0
  3831  001A42  0E00               	movlw	0
  3832  001A44  0100               	movlb	0	; () banked
  3833  001A46  6FD9               	movwf	set_pwm1_percent@value& (0+255),b
  3834  001A48  0E00               	movlw	0
  3835  001A4A  6FDA               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  3836  001A4C  0E00               	movlw	0
  3837  001A4E  6FDB               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  3838  001A50  EC42  F015         	call	_set_pwm1_percent	;wreg free
  3839                           
  3840                           ;Main.c: 268: heatError = SP - RT;
  3841  001A54  C053  F0CA         	movff	_SP,___ftsub@f1
  3842  001A58  C054  F0CB         	movff	_SP+1,___ftsub@f1+1
  3843  001A5C  C055  F0CC         	movff	_SP+2,___ftsub@f1+2
  3844  001A60  C050  F0CD         	movff	_RT,___ftsub@f2
  3845  001A64  C051  F0CE         	movff	_RT+1,___ftsub@f2+1
  3846  001A68  C052  F0CF         	movff	_RT+2,___ftsub@f2+2
  3847  001A6C  ECC5  F018         	call	___ftsub	;wreg free
  3848  001A70  C0CA  F056         	movff	?___ftsub,_heatError
  3849  001A74  C0CB  F057         	movff	?___ftsub+1,_heatError+1
  3850  001A78  C0CC  F058         	movff	?___ftsub+2,_heatError+2
  3851                           
  3852                           ;Main.c: 270: if (heatError > 0) {
  3853  001A7C  0E00               	movlw	0
  3854  001A7E  6FD0               	movwf	___ftge@ff1& (0+255),b
  3855  001A80  0E00               	movlw	0
  3856  001A82  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  3857  001A84  0E00               	movlw	0
  3858  001A86  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  3859  001A88  C056  F0D3         	movff	_heatError,___ftge@ff2
  3860  001A8C  C057  F0D4         	movff	_heatError+1,___ftge@ff2+1
  3861  001A90  C058  F0D5         	movff	_heatError+2,___ftge@ff2+2
  3862  001A94  EC5E  F016         	call	___ftge	;wreg free
  3863  001A98  B0D8               	btfsc	status,0,c
  3864  001A9A  D042               	goto	l6675
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;Main.c: 271: percentHeatCounter = 2*heatError;
  3868  001A9C  0E00               	movlw	0
  3869  001A9E  6FA7               	movwf	___ftmul@f2& (0+255),b
  3870  001AA0  0E00               	movlw	0
  3871  001AA2  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  3872  001AA4  0E40               	movlw	64
  3873  001AA6  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  3874  001AA8  C056  F0A4         	movff	_heatError,___ftmul@f1
  3875  001AAC  C057  F0A5         	movff	_heatError+1,___ftmul@f1+1
  3876  001AB0  C058  F0A6         	movff	_heatError+2,___ftmul@f1+2
  3877  001AB4  ECE6  F011         	call	___ftmul	;wreg free
  3878  001AB8  C0A4  F0CA         	movff	?___ftmul,___fttol@f1
  3879  001ABC  C0A5  F0CB         	movff	?___ftmul+1,___fttol@f1+1
  3880  001AC0  C0A6  F0CC         	movff	?___ftmul+2,___fttol@f1+2
  3881  001AC4  ECC0  F013         	call	___fttol	;wreg free
  3882  001AC8  C0CA  F0F3         	movff	?___fttol,_percentHeatCounter
  3883  001ACC  C0CB  F0F4         	movff	?___fttol+1,_percentHeatCounter+1
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;Main.c: 272: if (percentHeatCounter>20)percentHeatCounter=20;
  3887  001AD0  51F4               	movf	(_percentHeatCounter+1)& (0+255),w,b
  3888  001AD2  E104               	bnz	u7890
  3889  001AD4  0E15               	movlw	21
  3890  001AD6  5DF3               	subwf	_percentHeatCounter& (0+255),w,b
  3891  001AD8  A0D8               	btfss	status,0,c
  3892  001ADA  D004               	goto	l6667
  3893  001ADC                     u7890:
  3894                           
  3895                           ; BSR set to: 0
  3896  001ADC  0E00               	movlw	0
  3897  001ADE  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  3898  001AE0  0E14               	movlw	20
  3899  001AE2  6FF3               	movwf	_percentHeatCounter& (0+255),b
  3900  001AE4                     l6667:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;Main.c: 273: if (percentHeatCounter < 10)percentHeatCounter = 10;
  3904  001AE4  51F4               	movf	(_percentHeatCounter+1)& (0+255),w,b
  3905  001AE6  E108               	bnz	l6671
  3906  001AE8  0E0A               	movlw	10
  3907  001AEA  5DF3               	subwf	_percentHeatCounter& (0+255),w,b
  3908  001AEC  B0D8               	btfsc	status,0,c
  3909  001AEE  D004               	goto	l6671
  3910                           
  3911                           ; BSR set to: 0
  3912  001AF0  0E00               	movlw	0
  3913  001AF2  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  3914  001AF4  0E0A               	movlw	10
  3915  001AF6  6FF3               	movwf	_percentHeatCounter& (0+255),b
  3916  001AF8                     l6671:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;Main.c: 274: if ( SP > 52)percentHeatCounter = 10;
  3920  001AF8  0E00               	movlw	0
  3921  001AFA  6FD0               	movwf	___ftge@ff1& (0+255),b
  3922  001AFC  0E50               	movlw	80
  3923  001AFE  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  3924  001B00  0E42               	movlw	66
  3925  001B02  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  3926  001B04  C053  F0D3         	movff	_SP,___ftge@ff2
  3927  001B08  C054  F0D4         	movff	_SP+1,___ftge@ff2+1
  3928  001B0C  C055  F0D5         	movff	_SP+2,___ftge@ff2+2
  3929  001B10  EC5E  F016         	call	___ftge	;wreg free
  3930  001B14  B0D8               	btfsc	status,0,c
  3931  001B16  D02C               	goto	l6679
  3932                           
  3933                           ; BSR set to: 0
  3934  001B18  0E00               	movlw	0
  3935  001B1A  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  3936  001B1C  0E0A               	movlw	10
  3937  001B1E  D027               	goto	L10
  3938  001B20                     l6675:
  3939                           
  3940                           ; BSR set to: 0
  3941  001B20  C053  F0C1         	movff	_SP,___ftadd@f2
  3942  001B24  C054  F0C2         	movff	_SP+1,___ftadd@f2+1
  3943  001B28  C055  F0C3         	movff	_SP+2,___ftadd@f2+2
  3944  001B2C  C04B  F088         	movff	_HS,___lwtoft@c
  3945  001B30  C04C  F089         	movff	_HS+1,___lwtoft@c+1
  3946  001B34  EC0A  F01A         	call	___lwtoft	;wreg free
  3947  001B38  C088  F0BE         	movff	?___lwtoft,___ftadd@f1
  3948  001B3C  C089  F0BF         	movff	?___lwtoft+1,___ftadd@f1+1
  3949  001B40  C08A  F0C0         	movff	?___lwtoft+2,___ftadd@f1+2
  3950  001B44  ECF8  F00D         	call	___ftadd	;wreg free
  3951  001B48  C0BE  F0D0         	movff	?___ftadd,___ftge@ff1
  3952  001B4C  C0BF  F0D1         	movff	?___ftadd+1,___ftge@ff1+1
  3953  001B50  C0C0  F0D2         	movff	?___ftadd+2,___ftge@ff1+2
  3954  001B54  C050  F0D3         	movff	_RT,___ftge@ff2
  3955  001B58  C051  F0D4         	movff	_RT+1,___ftge@ff2+1
  3956  001B5C  C052  F0D5         	movff	_RT+2,___ftge@ff2+2
  3957  001B60  EC5E  F016         	call	___ftge	;wreg free
  3958  001B64  B0D8               	btfsc	status,0,c
  3959  001B66  D004               	goto	l6679
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;Main.c: 276: percentHeatCounter = 0;
  3963  001B68  0E00               	movlw	0
  3964  001B6A  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  3965  001B6C  0E00               	movlw	0
  3966  001B6E                     L10:
  3967  001B6E  6FF3               	movwf	_percentHeatCounter& (0+255),b
  3968  001B70                     l6679:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;Main.c: 277: };Main.c: 279: lcd_gotoxy(11, 3);
  3972  001B70  0E03               	movlw	3
  3973  001B72  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3974  001B74  0E0B               	movlw	11
  3975  001B76  ECA3  F018         	call	_lcd_gotoxy
  3976                           
  3977                           ;Main.c: 280: lcd_putc('H');
  3978  001B7A  0E48               	movlw	72
  3979  001B7C  ECCF  F017         	call	_lcd_putc
  3980                           
  3981                           ;Main.c: 282: lcd_gotoxy(15, 3);
  3982  001B80  0E03               	movlw	3
  3983  001B82  0100               	movlb	0	; () banked
  3984  001B84  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3985  001B86  0E0F               	movlw	15
  3986  001B88  ECA3  F018         	call	_lcd_gotoxy
  3987                           
  3988                           ;Main.c: 283: lcd_puts("  ");
  3989  001B8C  0EE9               	movlw	low STR_2
  3990  001B8E  0100               	movlb	0	; () banked
  3991  001B90  6F8E               	movwf	lcd_puts@s& (0+255),b
  3992  001B92  0EFF               	movlw	high STR_2
  3993  001B94  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  3994  001B96  EC29  F018         	call	_lcd_puts	;wreg free
  3995                           
  3996                           ;Main.c: 285: lcd_gotoxy(13, 3);
  3997  001B9A  0E03               	movlw	3
  3998  001B9C  0100               	movlb	0	; () banked
  3999  001B9E  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4000  001BA0  0E0D               	movlw	13
  4001  001BA2  ECA3  F018         	call	_lcd_gotoxy
  4002                           
  4003                           ;Main.c: 286: sprintf(Buffer, "%d", percentHeatCounter * 10);
  4004  001BA6  C0F3  F080         	movff	_percentHeatCounter,___wmul@multiplier
  4005  001BAA  C0F4  F081         	movff	_percentHeatCounter+1,___wmul@multiplier+1
  4006  001BAE  0E00               	movlw	0
  4007  001BB0  0100               	movlb	0	; () banked
  4008  001BB2  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4009  001BB4  0E0A               	movlw	10
  4010  001BB6  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4011  001BB8  ECD1  F019         	call	___wmul	;wreg free
  4012  001BBC  C080  F0EA         	movff	?___wmul,_autoHeat$2113
  4013  001BC0  C081  F0EB         	movff	?___wmul+1,_autoHeat$2113+1
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;Main.c: 286: sprintf(Buffer, "%d", percentHeatCounter * 10);
  4017  001BC4  0E65               	movlw	low _Buffer
  4018  001BC6  6FD9               	movwf	sprintf@sp& (0+255),b
  4019  001BC8  0E01               	movlw	high _Buffer
  4020  001BCA  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  4021  001BCC  0EF5               	movlw	low STR_3
  4022  001BCE  6FDB               	movwf	sprintf@f& (0+255),b
  4023  001BD0  0EFF               	movlw	high STR_3
  4024  001BD2  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  4025  001BD4  C0EA  F0DD         	movff	_autoHeat$2113,?_sprintf+4
  4026  001BD8  C0EB  F0DE         	movff	_autoHeat$2113+1,?_sprintf+5
  4027  001BDC  EC09  F000         	call	_sprintf	;wreg free
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;Main.c: 287: lcd_puts(Buffer);
  4031  001BE0  0E65               	movlw	low _Buffer
  4032  001BE2  0100               	movlb	0	; () banked
  4033  001BE4  6F8E               	movwf	lcd_puts@s& (0+255),b
  4034  001BE6  0E01               	movlw	high _Buffer
  4035  001BE8  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4036  001BEA  EC29  F018         	call	_lcd_puts	;wreg free
  4037  001BEE  0012               	return		;funcret
  4038  001BF0                     __end_of_autoHeat:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _autoCool *****************
  4042 ;; Defined at:
  4043 ;;		line 251 in file "Main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  value           3  112[BANK0 ] float 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/1
  4054 ;;		On exit  : 3F/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;Total ram usage:        9 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:   10
  4064 ;; This function calls:
  4065 ;;		___ftdiv
  4066 ;;		___ftge
  4067 ;;		___ftmul
  4068 ;;		___ftsub
  4069 ;;		___lwtoft
  4070 ;;		___wmul
  4071 ;;		_lcd_gotoxy
  4072 ;;		_lcd_puts
  4073 ;;		_set_pwm1_percent
  4074 ;;		_sprintf
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text15
  4081  001F40                     __ptext15:
  4082                           	callstack 0
  4083  001F40                     _autoCool:
  4084                           	callstack 20
  4085                           
  4086                           ;Main.c: 252: coolError = RT - SP;
  4087                           
  4088                           ;incstack = 0
  4089  001F40  C050  F0CA         	movff	_RT,___ftsub@f1
  4090  001F44  C051  F0CB         	movff	_RT+1,___ftsub@f1+1
  4091  001F48  C052  F0CC         	movff	_RT+2,___ftsub@f1+2
  4092  001F4C  C053  F0CD         	movff	_SP,___ftsub@f2
  4093  001F50  C054  F0CE         	movff	_SP+1,___ftsub@f2+1
  4094  001F54  C055  F0CF         	movff	_SP+2,___ftsub@f2+2
  4095  001F58  ECC5  F018         	call	___ftsub	;wreg free
  4096  001F5C  C0CA  F04D         	movff	?___ftsub,_coolError
  4097  001F60  C0CB  F04E         	movff	?___ftsub+1,_coolError+1
  4098  001F64  C0CC  F04F         	movff	?___ftsub+2,_coolError+2
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;Main.c: 253: percentHeatCounter = 0;
  4102  001F68  0E00               	movlw	0
  4103  001F6A  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  4104  001F6C  0E00               	movlw	0
  4105  001F6E  6FF3               	movwf	_percentHeatCounter& (0+255),b
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;Main.c: 254: if (coolError > 0) {
  4109  001F70  0E00               	movlw	0
  4110  001F72  6FD0               	movwf	___ftge@ff1& (0+255),b
  4111  001F74  0E00               	movlw	0
  4112  001F76  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  4113  001F78  0E00               	movlw	0
  4114  001F7A  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  4115  001F7C  C04D  F0D3         	movff	_coolError,___ftge@ff2
  4116  001F80  C04E  F0D4         	movff	_coolError+1,___ftge@ff2+1
  4117  001F84  C04F  F0D5         	movff	_coolError+2,___ftge@ff2+2
  4118  001F88  EC5E  F016         	call	___ftge	;wreg free
  4119  001F8C  B0D8               	btfsc	status,0,c
  4120  001F8E  D07A               	goto	l6655
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;Main.c: 256: float value = coolError * 10;
  4124  001F90  C04D  F0A4         	movff	_coolError,___ftmul@f1
  4125  001F94  C04E  F0A5         	movff	_coolError+1,___ftmul@f1+1
  4126  001F98  C04F  F0A6         	movff	_coolError+2,___ftmul@f1+2
  4127  001F9C  0E00               	movlw	0
  4128  001F9E  6FA7               	movwf	___ftmul@f2& (0+255),b
  4129  001FA0  0E20               	movlw	32
  4130  001FA2  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  4131  001FA4  0E41               	movlw	65
  4132  001FA6  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  4133  001FA8  ECE6  F011         	call	___ftmul	;wreg free
  4134  001FAC  C0A4  F0F0         	movff	?___ftmul,autoCool@value
  4135  001FB0  C0A5  F0F1         	movff	?___ftmul+1,autoCool@value+1
  4136  001FB4  C0A6  F0F2         	movff	?___ftmul+2,autoCool@value+2
  4137                           
  4138                           ;Main.c: 257: set_pwm1_percent(value < 25 ? 25 : value);
  4139  001FB8  C0F0  F0D0         	movff	autoCool@value,___ftge@ff1
  4140  001FBC  C0F1  F0D1         	movff	autoCool@value+1,___ftge@ff1+1
  4141  001FC0  C0F2  F0D2         	movff	autoCool@value+2,___ftge@ff1+2
  4142  001FC4  0E00               	movlw	0
  4143  001FC6  6FD3               	movwf	___ftge@ff2& (0+255),b
  4144  001FC8  0EC8               	movlw	200
  4145  001FCA  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  4146  001FCC  0E41               	movlw	65
  4147  001FCE  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  4148  001FD0  EC5E  F016         	call	___ftge	;wreg free
  4149  001FD4  A0D8               	btfss	status,0,c
  4150  001FD6  D007               	goto	l6643
  4151                           
  4152                           ; BSR set to: 0
  4153  001FD8  C0F0  F0ED         	movff	autoCool@value,_autoCool$1109
  4154  001FDC  C0F1  F0EE         	movff	autoCool@value+1,_autoCool$1109+1
  4155  001FE0  C0F2  F0EF         	movff	autoCool@value+2,_autoCool$1109+2
  4156  001FE4  D006               	goto	l6645
  4157  001FE6                     l6643:
  4158                           
  4159                           ; BSR set to: 0
  4160  001FE6  0E00               	movlw	0
  4161  001FE8  6FED               	movwf	_autoCool$1109& (0+255),b
  4162  001FEA  0EC8               	movlw	200
  4163  001FEC  6FEE               	movwf	(_autoCool$1109+1)& (0+255),b
  4164  001FEE  0E41               	movlw	65
  4165  001FF0  6FEF               	movwf	(_autoCool$1109+2)& (0+255),b
  4166  001FF2                     l6645:
  4167                           
  4168                           ; BSR set to: 0
  4169  001FF2  C0ED  F0D9         	movff	_autoCool$1109,set_pwm1_percent@value
  4170  001FF6  C0EE  F0DA         	movff	_autoCool$1109+1,set_pwm1_percent@value+1
  4171  001FFA  C0EF  F0DB         	movff	_autoCool$1109+2,set_pwm1_percent@value+2
  4172  001FFE  EC42  F015         	call	_set_pwm1_percent	;wreg free
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;Main.c: 258: lcd_gotoxy(11, 3);
  4176  002002  0E03               	movlw	3
  4177  002004  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  4178  002006  0E0B               	movlw	11
  4179  002008  ECA3  F018         	call	_lcd_gotoxy
  4180                           
  4181                           ;Main.c: 259: sprintf(Buffer, "R:%4.2f", RPS_count * 40 / 7.0);
  4182  00200C  C041  F080         	movff	_RPS_count,___wmul@multiplier
  4183  002010  C042  F081         	movff	_RPS_count+1,___wmul@multiplier+1
  4184  002014  0E00               	movlw	0
  4185  002016  0100               	movlb	0	; () banked
  4186  002018  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4187  00201A  0E28               	movlw	40
  4188  00201C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4189  00201E  ECD1  F019         	call	___wmul	;wreg free
  4190  002022  C080  F088         	movff	?___wmul,___lwtoft@c
  4191  002026  C081  F089         	movff	?___wmul+1,___lwtoft@c+1
  4192  00202A  EC0A  F01A         	call	___lwtoft	;wreg free
  4193  00202E  C088  F08C         	movff	?___lwtoft,___ftdiv@f1
  4194  002032  C089  F08D         	movff	?___lwtoft+1,___ftdiv@f1+1
  4195  002036  C08A  F08E         	movff	?___lwtoft+2,___ftdiv@f1+2
  4196  00203A  0E00               	movlw	0
  4197  00203C  6F8F               	movwf	___ftdiv@f2& (0+255),b
  4198  00203E  0EE0               	movlw	224
  4199  002040  6F90               	movwf	(___ftdiv@f2+1)& (0+255),b
  4200  002042  0E40               	movlw	64
  4201  002044  6F91               	movwf	(___ftdiv@f2+2)& (0+255),b
  4202  002046  ECDA  F012         	call	___ftdiv	;wreg free
  4203  00204A  C08C  F0EA         	movff	?___ftdiv,_autoCool$2112
  4204  00204E  C08D  F0EB         	movff	?___ftdiv+1,_autoCool$2112+1
  4205  002052  C08E  F0EC         	movff	?___ftdiv+2,_autoCool$2112+2
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;Main.c: 259: sprintf(Buffer, "R:%4.2f", RPS_count * 40 / 7.0);
  4209  002056  0E65               	movlw	low _Buffer
  4210  002058  6FD9               	movwf	sprintf@sp& (0+255),b
  4211  00205A  0E01               	movlw	high _Buffer
  4212  00205C  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
  4213  00205E  0EBB               	movlw	low STR_1
  4214  002060  6FDB               	movwf	sprintf@f& (0+255),b
  4215  002062  0EFF               	movlw	high STR_1
  4216  002064  6FDC               	movwf	(sprintf@f+1)& (0+255),b
  4217  002066  C0EA  F0DD         	movff	_autoCool$2112,?_sprintf+4
  4218  00206A  C0EB  F0DE         	movff	_autoCool$2112+1,?_sprintf+5
  4219  00206E  C0EC  F0DF         	movff	_autoCool$2112+2,?_sprintf+6
  4220  002072  EC09  F000         	call	_sprintf	;wreg free
  4221                           
  4222                           ; BSR set to: 1
  4223                           ;Main.c: 260: lcd_puts(Buffer);
  4224  002076  0E65               	movlw	low _Buffer
  4225  002078  0100               	movlb	0	; () banked
  4226  00207A  6F8E               	movwf	lcd_puts@s& (0+255),b
  4227  00207C  0E01               	movlw	high _Buffer
  4228  00207E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  4229  002080  EC29  F018         	call	_lcd_puts	;wreg free
  4230  002084                     l6655:
  4231                           
  4232                           ;Main.c: 261: };Main.c: 262: if (RT < (SP - HS)) percentHeatCounter = 5;
  4233  002084  C050  F0D0         	movff	_RT,___ftge@ff1
  4234  002088  C051  F0D1         	movff	_RT+1,___ftge@ff1+1
  4235  00208C  C052  F0D2         	movff	_RT+2,___ftge@ff1+2
  4236  002090  C04B  F088         	movff	_HS,___lwtoft@c
  4237  002094  C04C  F089         	movff	_HS+1,___lwtoft@c+1
  4238  002098  EC0A  F01A         	call	___lwtoft	;wreg free
  4239  00209C  C088  F0CD         	movff	?___lwtoft,___ftsub@f2
  4240  0020A0  C089  F0CE         	movff	?___lwtoft+1,___ftsub@f2+1
  4241  0020A4  C08A  F0CF         	movff	?___lwtoft+2,___ftsub@f2+2
  4242  0020A8  C053  F0CA         	movff	_SP,___ftsub@f1
  4243  0020AC  C054  F0CB         	movff	_SP+1,___ftsub@f1+1
  4244  0020B0  C055  F0CC         	movff	_SP+2,___ftsub@f1+2
  4245  0020B4  ECC5  F018         	call	___ftsub	;wreg free
  4246  0020B8  C0CA  F0D3         	movff	?___ftsub,___ftge@ff2
  4247  0020BC  C0CB  F0D4         	movff	?___ftsub+1,___ftge@ff2+1
  4248  0020C0  C0CC  F0D5         	movff	?___ftsub+2,___ftge@ff2+2
  4249  0020C4  EC5E  F016         	call	___ftge	;wreg free
  4250  0020C8  B0D8               	btfsc	status,0,c
  4251  0020CA  0012               	return	
  4252                           
  4253                           ; BSR set to: 0
  4254  0020CC  0E00               	movlw	0
  4255  0020CE  6FF4               	movwf	(_percentHeatCounter+1)& (0+255),b
  4256  0020D0  0E05               	movlw	5
  4257  0020D2  6FF3               	movwf	_percentHeatCounter& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260  0020D4  0012               	return		;funcret
  4261  0020D6                     __end_of_autoCool:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _sprintf *****************
  4265 ;; Defined at:
  4266 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  sp              2   89[BANK0 ] PTR unsigned char 
  4269 ;;		 -> main@Buffer(32), Buffer(32), 
  4270 ;;  f               2   91[BANK0 ] PTR const unsigned char 
  4271 ;;		 -> STR_28(6), STR_27(52), STR_26(12), STR_25(23), 
  4272 ;;		 -> STR_24(3), STR_20(3), STR_16(6), STR_15(10), 
  4273 ;;		 -> STR_12(20), STR_7(11), STR_5(11), STR_3(3), 
  4274 ;;		 -> STR_1(8), 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  val             4   12[BANK1 ] unsigned long 
  4277 ;;  tmpval          4    8[BANK1 ] struct .
  4278 ;;  fval            3   20[BANK1 ] struct .
  4279 ;;  prec            2   25[BANK1 ] int 
  4280 ;;  width           2   23[BANK1 ] int 
  4281 ;;  flag            2   18[BANK1 ] unsigned short 
  4282 ;;  eexp            2   16[BANK1 ] int 
  4283 ;;  len             2    6[BANK1 ] unsigned int 
  4284 ;;  cp              2    3[BANK1 ] PTR const unsigned char 
  4285 ;;		 -> STR_32(7), sprintf@c(1), ?_sprintf(2), STR_31(6), 
  4286 ;;		 -> STR_30(20), STR_29(20), STR_23(3), STR_22(3), 
  4287 ;;		 -> STR_21(3), STR_19(5), STR_18(5), STR_17(5), 
  4288 ;;		 -> STR_14(2), STR_13(2), heatError(3), 
  4289 ;;  c               1   27[BANK1 ] unsigned char 
  4290 ;;  ap              1    5[BANK1 ] PTR void [1]
  4291 ;;		 -> ?_sprintf(2), 
  4292 ;;  d               1    0        unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2   89[BANK0 ] int 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 3F/0
  4299 ;;		On exit  : 3F/1
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         0      17      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:       45 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    7
  4309 ;; This function calls:
  4310 ;;		___awdiv
  4311 ;;		___ftadd
  4312 ;;		___ftge
  4313 ;;		___ftmul
  4314 ;;		___ftneg
  4315 ;;		___ftsub
  4316 ;;		___fttol
  4317 ;;		___lldiv
  4318 ;;		___llmod
  4319 ;;		___lltoft
  4320 ;;		___wmul
  4321 ;;		__div_to_l_
  4322 ;;		__tdiv_to_l_
  4323 ;;		_fround
  4324 ;;		_isdigit
  4325 ;;		_scale
  4326 ;; This function is called by:
  4327 ;;		_autoCool
  4328 ;;		_autoHeat
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text16
  4334  000012                     __ptext16:
  4335                           	callstack 0
  4336  000012                     _sprintf:
  4337                           	callstack 23
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;incstack = 0
  4344  000012  0EDD               	movlw	low (?_sprintf+4)
  4345  000014  0101               	movlb	1	; () banked
  4346  000016  6F05               	movwf	sprintf@ap& (0+255),b
  4347                           
  4348                           ;doprnt.c: 553: while((c = *f++)) {
  4349  000018  EF0B  F006         	goto	u7790
  4350  00001C                     l6195:
  4351                           
  4352                           ; BSR set to: 1
  4353                           ;doprnt.c: 555: if(c != '%')
  4354  00001C  0E25               	movlw	37
  4355  00001E  191B               	xorwf	sprintf@c& (0+255),w,b
  4356  000020  B4D8               	btfsc	status,2,c
  4357  000022  D00B               	goto	l6201
  4358                           
  4359                           ; BSR set to: 1
  4360                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4361  000024  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  4362  000028  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  4363  00002C  C11B  FFDF         	movff	sprintf@c,indf2
  4364                           
  4365                           ; BSR set to: 1
  4366  000030  0100               	movlb	0	; () banked
  4367  000032  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  4368  000034  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  4369                           
  4370                           ;doprnt.c: 559: continue;
  4371  000036  EF0B  F006         	goto	u7790
  4372  00003A                     l6201:
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  4376  00003A  0E00               	movlw	0
  4377  00003C  6F18               	movwf	(sprintf@width+1)& (0+255),b
  4378  00003E  0E00               	movlw	0
  4379  000040  6F17               	movwf	sprintf@width& (0+255),b
  4380                           
  4381                           ;doprnt.c: 565: flag = 0;
  4382  000042  0E00               	movlw	0
  4383  000044  6F13               	movwf	(sprintf@flag+1)& (0+255),b
  4384  000046  0E00               	movlw	0
  4385  000048  6F12               	movwf	sprintf@flag& (0+255),b
  4386  00004A  D005               	goto	l6207
  4387  00004C                     l6203:
  4388                           
  4389                           ;doprnt.c: 597: flag |= 0x04;
  4390  00004C  0101               	movlb	1	; () banked
  4391  00004E  8512               	bsf	sprintf@flag& (0+255),2,b
  4392                           
  4393                           ;doprnt.c: 598: f++;
  4394  000050  0100               	movlb	0	; () banked
  4395  000052  4BDB               	infsnz	sprintf@f& (0+255),f,b
  4396  000054  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  4397  000056                     l6207:
  4398  000056  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4399  00005A  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4400  00005E                     	if	0	;tblptru may be non-zero
  4401  00005E                     	endif
  4402  00005E                     	if	0	;tblptru may be non-zero
  4403  00005E                     	endif
  4404  00005E  0008               	tblrd		*
  4405  000060  50F5               	movf	tablat,w,c
  4406                           
  4407                           ; Switch size 1, requested type "simple"
  4408                           ; Number of cases is 1, Range of values is 48 to 48
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte            4     3 (average)
  4412                           ;	Chosen strategy is simple_byte
  4413  000062  0A30               	xorlw	48	; case 48
  4414  000064  B4D8               	btfsc	status,2,c
  4415  000066  D7F2               	goto	l6203
  4416                           
  4417                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  4418  000068  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4419  00006C  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4420  000070                     	if	0	;tblptru may be non-zero
  4421  000070                     	endif
  4422  000070                     	if	0	;tblptru may be non-zero
  4423  000070                     	endif
  4424  000070  0008               	tblrd		*
  4425  000072  50F5               	movf	tablat,w,c
  4426  000074  EC2F  F01A         	call	_isdigit
  4427  000078  A0D8               	btfss	status,0,c
  4428  00007A  D038               	goto	u7190
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;doprnt.c: 615: width = 0;
  4432  00007C  0E00               	movlw	0
  4433  00007E  0101               	movlb	1	; () banked
  4434  000080  6F18               	movwf	(sprintf@width+1)& (0+255),b
  4435  000082  0E00               	movlw	0
  4436  000084  6F17               	movwf	sprintf@width& (0+255),b
  4437  000086                     l6213:
  4438                           
  4439                           ;doprnt.c: 617: width *= 10;
  4440  000086  C117  F080         	movff	sprintf@width,___wmul@multiplier
  4441  00008A  C118  F081         	movff	sprintf@width+1,___wmul@multiplier+1
  4442  00008E  0E00               	movlw	0
  4443  000090  0100               	movlb	0	; () banked
  4444  000092  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4445  000094  0E0A               	movlw	10
  4446  000096  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4447  000098  ECD1  F019         	call	___wmul	;wreg free
  4448  00009C  C080  F117         	movff	?___wmul,sprintf@width
  4449  0000A0  C081  F118         	movff	?___wmul+1,sprintf@width+1
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;doprnt.c: 618: width += *f++ - '0';
  4453  0000A4  0ED0               	movlw	208
  4454  0000A6  6FE4               	movwf	??_sprintf& (0+255),b
  4455  0000A8  0EFF               	movlw	255
  4456  0000AA  6FE5               	movwf	(??_sprintf+1)& (0+255),b
  4457  0000AC  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4458  0000B0  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4459  0000B4                     	if	0	;tblptru may be non-zero
  4460  0000B4                     	endif
  4461  0000B4                     	if	0	;tblptru may be non-zero
  4462  0000B4                     	endif
  4463  0000B4  0008               	tblrd		*
  4464  0000B6  50F5               	movf	tablat,w,c
  4465  0000B8  6FE6               	movwf	(??_sprintf+2)& (0+255),b
  4466  0000BA  6BE7               	clrf	(??_sprintf+3)& (0+255),b
  4467  0000BC  51E4               	movf	??_sprintf& (0+255),w,b
  4468  0000BE  27E6               	addwf	(??_sprintf+2)& (0+255),f,b
  4469  0000C0  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  4470  0000C2  23E7               	addwfc	(??_sprintf+3)& (0+255),f,b
  4471  0000C4  51E6               	movf	(??_sprintf+2)& (0+255),w,b
  4472  0000C6  0101               	movlb	1	; () banked
  4473  0000C8  2717               	addwf	sprintf@width& (0+255),f,b
  4474  0000CA  0100               	movlb	0	; () banked
  4475  0000CC  51E7               	movf	(??_sprintf+3)& (0+255),w,b
  4476  0000CE  0101               	movlb	1	; () banked
  4477  0000D0  2318               	addwfc	(sprintf@width+1)& (0+255),f,b
  4478                           
  4479                           ; BSR set to: 1
  4480  0000D2  0100               	movlb	0	; () banked
  4481  0000D4  4BDB               	infsnz	sprintf@f& (0+255),f,b
  4482  0000D6  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  4486  0000D8  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4487  0000DC  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4488  0000E0                     	if	0	;tblptru may be non-zero
  4489  0000E0                     	endif
  4490  0000E0                     	if	0	;tblptru may be non-zero
  4491  0000E0                     	endif
  4492  0000E0  0008               	tblrd		*
  4493  0000E2  50F5               	movf	tablat,w,c
  4494  0000E4  EC2F  F01A         	call	_isdigit
  4495  0000E8  B0D8               	btfsc	status,0,c
  4496  0000EA  D7CD               	goto	l6213
  4497  0000EC                     u7190:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  4501  0000EC  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4502  0000F0  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4503  0000F4                     	if	0	;tblptru may be non-zero
  4504  0000F4                     	endif
  4505  0000F4                     	if	0	;tblptru may be non-zero
  4506  0000F4                     	endif
  4507  0000F4  0008               	tblrd		*
  4508  0000F6  50F5               	movf	tablat,w,c
  4509  0000F8  0A2E               	xorlw	46
  4510  0000FA  A4D8               	btfss	status,2,c
  4511  0000FC  D03E               	goto	l6235
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;doprnt.c: 629: flag |= 0x4000;
  4515  0000FE  0101               	movlb	1	; () banked
  4516  000100  8D13               	bsf	(sprintf@flag+1)& (0+255),6,b
  4517                           
  4518                           ;doprnt.c: 630: f++;
  4519  000102  0100               	movlb	0	; () banked
  4520  000104  4BDB               	infsnz	sprintf@f& (0+255),f,b
  4521  000106  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4525  000108  0E00               	movlw	0
  4526  00010A  0101               	movlb	1	; () banked
  4527  00010C  6F1A               	movwf	(sprintf@prec+1)& (0+255),b
  4528  00010E  0E00               	movlw	0
  4529  000110  6F19               	movwf	sprintf@prec& (0+255),b
  4530                           
  4531                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4532  000112  D028               	goto	l6233
  4533  000114                     l6227:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;doprnt.c: 647: prec *= 10;
  4537  000114  C119  F080         	movff	sprintf@prec,___wmul@multiplier
  4538  000118  C11A  F081         	movff	sprintf@prec+1,___wmul@multiplier+1
  4539  00011C  0E00               	movlw	0
  4540  00011E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4541  000120  0E0A               	movlw	10
  4542  000122  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4543  000124  ECD1  F019         	call	___wmul	;wreg free
  4544  000128  C080  F119         	movff	?___wmul,sprintf@prec
  4545  00012C  C081  F11A         	movff	?___wmul+1,sprintf@prec+1
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;doprnt.c: 648: prec += *f++ - '0';
  4549  000130  0ED0               	movlw	208
  4550  000132  6FE4               	movwf	??_sprintf& (0+255),b
  4551  000134  0EFF               	movlw	255
  4552  000136  6FE5               	movwf	(??_sprintf+1)& (0+255),b
  4553  000138  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4554  00013C  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4555  000140                     	if	0	;tblptru may be non-zero
  4556  000140                     	endif
  4557  000140                     	if	0	;tblptru may be non-zero
  4558  000140                     	endif
  4559  000140  0008               	tblrd		*
  4560  000142  50F5               	movf	tablat,w,c
  4561  000144  6FE6               	movwf	(??_sprintf+2)& (0+255),b
  4562  000146  6BE7               	clrf	(??_sprintf+3)& (0+255),b
  4563  000148  51E4               	movf	??_sprintf& (0+255),w,b
  4564  00014A  27E6               	addwf	(??_sprintf+2)& (0+255),f,b
  4565  00014C  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  4566  00014E  23E7               	addwfc	(??_sprintf+3)& (0+255),f,b
  4567  000150  51E6               	movf	(??_sprintf+2)& (0+255),w,b
  4568  000152  0101               	movlb	1	; () banked
  4569  000154  2719               	addwf	sprintf@prec& (0+255),f,b
  4570  000156  0100               	movlb	0	; () banked
  4571  000158  51E7               	movf	(??_sprintf+3)& (0+255),w,b
  4572  00015A  0101               	movlb	1	; () banked
  4573  00015C  231A               	addwfc	(sprintf@prec+1)& (0+255),f,b
  4574                           
  4575                           ; BSR set to: 1
  4576  00015E  0100               	movlb	0	; () banked
  4577  000160  4BDB               	infsnz	sprintf@f& (0+255),f,b
  4578  000162  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  4579  000164                     l6233:
  4580  000164  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4581  000168  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4582  00016C                     	if	0	;tblptru may be non-zero
  4583  00016C                     	endif
  4584  00016C                     	if	0	;tblptru may be non-zero
  4585  00016C                     	endif
  4586  00016C  0008               	tblrd		*
  4587  00016E  50F5               	movf	tablat,w,c
  4588  000170  EC2F  F01A         	call	_isdigit
  4589  000174  A0D8               	btfss	status,0,c
  4590  000176  D0AA               	goto	l6287
  4591  000178  D7CD               	goto	l6227
  4592  00017A                     l6235:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;doprnt.c: 652: prec = 0;
  4596  00017A  0E00               	movlw	0
  4597  00017C  0101               	movlb	1	; () banked
  4598  00017E  6F1A               	movwf	(sprintf@prec+1)& (0+255),b
  4599  000180  0E00               	movlw	0
  4600  000182  6F19               	movwf	sprintf@prec& (0+255),b
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;doprnt.c: 654: flag |= 0x1000;
  4604  000184  8913               	bsf	(sprintf@flag+1)& (0+255),4,b
  4605  000186  D0A2               	goto	l6287
  4606  000188                     l6239:
  4607                           
  4608                           ; BSR set to: 1
  4609                           ;doprnt.c: 689: flag |= 0x400;
  4610  000188  8513               	bsf	(sprintf@flag+1)& (0+255),2,b
  4611                           
  4612                           ;doprnt.c: 690: break;
  4613  00018A  D0BD               	goto	l6289
  4614  00018C                     l6241:
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4618  00018C  5105               	movf	sprintf@ap& (0+255),w,b
  4619  00018E  6ED9               	movwf	fsr2l,c
  4620  000190  6ADA               	clrf	fsr2h,c
  4621  000192  CFDE F103          	movff	postinc2,sprintf@cp
  4622  000196  CFDD F104          	movff	postdec2,sprintf@cp+1
  4623                           
  4624                           ; BSR set to: 1
  4625  00019A  0E02               	movlw	2
  4626  00019C  2705               	addwf	sprintf@ap& (0+255),f,b
  4627                           
  4628                           ; BSR set to: 1
  4629                           ;doprnt.c: 766: if(!cp)
  4630  00019E  5103               	movf	sprintf@cp& (0+255),w,b
  4631  0001A0  1104               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4632  0001A2  A4D8               	btfss	status,2,c
  4633  0001A4  D004               	goto	l6249
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;doprnt.c: 767: cp = "(null)";
  4637  0001A6  0EC3               	movlw	low STR_32
  4638  0001A8  6F03               	movwf	sprintf@cp& (0+255),b
  4639  0001AA  0EFF               	movlw	high STR_32
  4640  0001AC  6F04               	movwf	(sprintf@cp+1)& (0+255),b
  4641  0001AE                     l6249:
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;doprnt.c: 771: len = 0;
  4645  0001AE  0E00               	movlw	0
  4646  0001B0  6F07               	movwf	(sprintf@len+1)& (0+255),b
  4647  0001B2  0E00               	movlw	0
  4648  0001B4  6F06               	movwf	sprintf@len& (0+255),b
  4649                           
  4650                           ;doprnt.c: 772: while(cp[len])
  4651  0001B6  D003               	goto	l6253
  4652  0001B8                     l6251:
  4653                           
  4654                           ;doprnt.c: 773: len++;
  4655  0001B8  0101               	movlb	1	; () banked
  4656  0001BA  4B06               	infsnz	sprintf@len& (0+255),f,b
  4657  0001BC  2B07               	incf	(sprintf@len+1)& (0+255),f,b
  4658  0001BE                     l6253:
  4659                           
  4660                           ; BSR set to: 1
  4661  0001BE  5106               	movf	sprintf@len& (0+255),w,b
  4662  0001C0  2503               	addwf	sprintf@cp& (0+255),w,b
  4663  0001C2  0100               	movlb	0	; () banked
  4664  0001C4  6FE4               	movwf	??_sprintf& (0+255),b
  4665  0001C6  0101               	movlb	1	; () banked
  4666  0001C8  5107               	movf	(sprintf@len+1)& (0+255),w,b
  4667  0001CA  2104               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4668  0001CC  0100               	movlb	0	; () banked
  4669  0001CE  6FE5               	movwf	(??_sprintf+1)& (0+255),b
  4670  0001D0  C0E4  FFF6         	movff	??_sprintf,tblptrl
  4671  0001D4  C0E5  FFF7         	movff	??_sprintf+1,tblptrh
  4672  0001D8  0E00               	movlw	low (__mediumconst shr (0+16))
  4673  0001DA  6EF8               	movwf	tblptru,c
  4674  0001DC  0E0F               	movlw	(high __ramtop+-1)
  4675  0001DE  64F7               	cpfsgt	tblptrh,c
  4676  0001E0  D003               	bra	u7237
  4677  0001E2  0008               	tblrd		*
  4678  0001E4  50F5               	movf	tablat,w,c
  4679  0001E6  D005               	bra	u7230
  4680  0001E8                     u7237:
  4681  0001E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4682  0001EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4683  0001F0  50EF               	movf	indf0,w,c
  4684  0001F2                     u7230:
  4685  0001F2  0900               	iorlw	0
  4686  0001F4  A4D8               	btfss	status,2,c
  4687  0001F6  D7E0               	goto	l6251
  4688  0001F8                     u7240:
  4689                           
  4690                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  4691  0001F8  0101               	movlb	1	; () banked
  4692  0001FA  5119               	movf	sprintf@prec& (0+255),w,b
  4693  0001FC  111A               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4694  0001FE  B4D8               	btfsc	status,2,c
  4695  000200  D011               	goto	l6261
  4696                           
  4697                           ; BSR set to: 1
  4698  000202  5106               	movf	sprintf@len& (0+255),w,b
  4699  000204  5D19               	subwf	sprintf@prec& (0+255),w,b
  4700  000206  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  4701  000208  0A80               	xorlw	128
  4702  00020A  0100               	movlb	0	; () banked
  4703  00020C  6FE4               	movwf	??_sprintf& (0+255),b
  4704  00020E  0101               	movlb	1	; () banked
  4705  000210  5107               	movf	(sprintf@len+1)& (0+255),w,b
  4706  000212  0A80               	xorlw	128
  4707  000214  0100               	movlb	0	; () banked
  4708  000216  59E4               	subwfb	??_sprintf& (0+255),w,b
  4709  000218  B0D8               	btfsc	status,0,c
  4710  00021A  D004               	goto	l6261
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;doprnt.c: 780: len = (unsigned int)prec;
  4714  00021C  C119  F106         	movff	sprintf@prec,sprintf@len
  4715  000220  C11A  F107         	movff	sprintf@prec+1,sprintf@len+1
  4716  000224                     l6261:
  4717                           
  4718                           ;doprnt.c: 783: if(((unsigned)width) > len)
  4719  000224  0101               	movlb	1	; () banked
  4720  000226  5117               	movf	sprintf@width& (0+255),w,b
  4721  000228  5D06               	subwf	sprintf@len& (0+255),w,b
  4722  00022A  5118               	movf	(sprintf@width+1)& (0+255),w,b
  4723  00022C  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
  4724  00022E  B0D8               	btfsc	status,0,c
  4725  000230  D005               	goto	l6265
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;doprnt.c: 784: width -= len;
  4729  000232  5106               	movf	sprintf@len& (0+255),w,b
  4730  000234  5F17               	subwf	sprintf@width& (0+255),f,b
  4731  000236  5107               	movf	(sprintf@len+1)& (0+255),w,b
  4732  000238  5B18               	subwfb	(sprintf@width+1)& (0+255),f,b
  4733  00023A  D00E               	goto	l6271
  4734  00023C                     l6265:
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  4738  00023C  0E00               	movlw	0
  4739  00023E  6F18               	movwf	(sprintf@width+1)& (0+255),b
  4740  000240  0E00               	movlw	0
  4741  000242  6F17               	movwf	sprintf@width& (0+255),b
  4742  000244  D009               	goto	l6271
  4743  000246                     l6267:
  4744                           
  4745                           ; BSR set to: 1
  4746                           ;doprnt.c: 791: ((*sp++ = (' ')));
  4747  000246  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  4748  00024A  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  4749  00024E  0E20               	movlw	32
  4750  000250  6EDF               	movwf	indf2,c
  4751                           
  4752                           ; BSR set to: 1
  4753  000252  0100               	movlb	0	; () banked
  4754  000254  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  4755  000256  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  4756  000258                     l6271:
  4757  000258  0101               	movlb	1	; () banked
  4758  00025A  0717               	decf	sprintf@width& (0+255),f,b
  4759  00025C  A0D8               	btfss	status,0,c
  4760  00025E  0718               	decf	(sprintf@width+1)& (0+255),f,b
  4761  000260  2917               	incf	sprintf@width& (0+255),w,b
  4762  000262  E1F1               	bnz	l6267
  4763  000264  2918               	incf	(sprintf@width+1)& (0+255),w,b
  4764  000266  B4D8               	btfsc	status,2,c
  4765  000268  D01D               	goto	l6279
  4766  00026A  D7ED               	goto	l6267
  4767  00026C                     l6273:
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  4771  00026C  C103  FFF6         	movff	sprintf@cp,tblptrl
  4772  000270  C104  FFF7         	movff	sprintf@cp+1,tblptrh
  4773  000274  0E00               	movlw	low (__mediumconst shr (0+16))
  4774  000276  6EF8               	movwf	tblptru,c
  4775  000278  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  4776  00027C  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  4777  000280  0E0F               	movlw	(high __ramtop+-1)
  4778  000282  64F7               	cpfsgt	tblptrh,c
  4779  000284  D003               	bra	u7297
  4780  000286  0008               	tblrd		*
  4781  000288  50F5               	movf	tablat,w,c
  4782  00028A  D005               	bra	u7290
  4783  00028C                     u7297:
  4784  00028C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4785  000290  CFF7 FFEA          	movff	tblptrh,fsr0h
  4786  000294  50EF               	movf	indf0,w,c
  4787  000296                     u7290:
  4788  000296  6EDF               	movwf	indf2,c
  4789  000298  0101               	movlb	1	; () banked
  4790  00029A  4B03               	infsnz	sprintf@cp& (0+255),f,b
  4791  00029C  2B04               	incf	(sprintf@cp+1)& (0+255),f,b
  4792                           
  4793                           ; BSR set to: 1
  4794  00029E  0100               	movlb	0	; () banked
  4795  0002A0  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  4796  0002A2  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  4797  0002A4                     l6279:
  4798  0002A4  0101               	movlb	1	; () banked
  4799  0002A6  0706               	decf	sprintf@len& (0+255),f,b
  4800  0002A8  A0D8               	btfss	status,0,c
  4801  0002AA  0707               	decf	(sprintf@len+1)& (0+255),f,b
  4802  0002AC  2906               	incf	sprintf@len& (0+255),w,b
  4803  0002AE  E1DE               	bnz	l6273
  4804  0002B0  2907               	incf	(sprintf@len+1)& (0+255),w,b
  4805  0002B2  B4D8               	btfsc	status,2,c
  4806  0002B4  EF0B  F006         	goto	u7790
  4807  0002B8  D7D9               	goto	l6273
  4808  0002BA                     l6281:
  4809                           
  4810                           ; BSR set to: 1
  4811                           ;doprnt.c: 831: cp = (char *)&c;
  4812  0002BA  0E1B               	movlw	low sprintf@c
  4813  0002BC  6F03               	movwf	sprintf@cp& (0+255),b
  4814  0002BE  0E01               	movlw	high sprintf@c
  4815  0002C0  6F04               	movwf	(sprintf@cp+1)& (0+255),b
  4816                           
  4817                           ; BSR set to: 1
  4818                           ;doprnt.c: 832: len = 1;
  4819  0002C2  0E00               	movlw	0
  4820  0002C4  6F07               	movwf	(sprintf@len+1)& (0+255),b
  4821  0002C6  0E01               	movlw	1
  4822  0002C8  6F06               	movwf	sprintf@len& (0+255),b
  4823                           
  4824                           ;doprnt.c: 833: goto dostring;
  4825  0002CA  D796               	goto	u7240
  4826  0002CC                     l6287:
  4827  0002CC  C0DB  FFF6         	movff	sprintf@f,tblptrl
  4828  0002D0  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  4829  0002D4  0100               	movlb	0	; () banked
  4830  0002D6  4BDB               	infsnz	sprintf@f& (0+255),f,b
  4831  0002D8  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  4832  0002DA                     	if	0	;tblptru may be non-zero
  4833  0002DA                     	endif
  4834  0002DA                     	if	0	;tblptru may be non-zero
  4835  0002DA                     	endif
  4836  0002DA  0008               	tblrd		*
  4837  0002DC  CFF5 F11B          	movff	tablat,sprintf@c
  4838  0002E0  0101               	movlb	1	; () banked
  4839  0002E2  511B               	movf	sprintf@c& (0+255),w,b
  4840                           
  4841                           ; Switch size 1, requested type "simple"
  4842                           ; Number of cases is 5, Range of values is 0 to 115
  4843                           ; switch strategies available:
  4844                           ; Name         Instructions Cycles
  4845                           ; simple_byte           16     9 (average)
  4846                           ;	Chosen strategy is simple_byte
  4847  0002E4  0A00               	xorlw	0	; case 0
  4848  0002E6  B4D8               	btfsc	status,2,c
  4849  0002E8  EF1A  F006         	goto	u7800
  4850  0002EC  0A64               	xorlw	100	; case 100
  4851  0002EE  B4D8               	btfsc	status,2,c
  4852  0002F0  D00A               	goto	l6289
  4853  0002F2  0A02               	xorlw	2	; case 102
  4854  0002F4  B4D8               	btfsc	status,2,c
  4855  0002F6  D748               	goto	l6239
  4856  0002F8  0A0F               	xorlw	15	; case 105
  4857  0002FA  B4D8               	btfsc	status,2,c
  4858  0002FC  D004               	goto	l6289
  4859  0002FE  0A1A               	xorlw	26	; case 115
  4860  000300  B4D8               	btfsc	status,2,c
  4861  000302  D744               	goto	l6241
  4862  000304  D7DA               	goto	l6281
  4863  000306                     l6289:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;doprnt.c: 851: if(flag & (0x700)) {
  4867  000306  0E07               	movlw	7
  4868  000308  1513               	andwf	(sprintf@flag+1)& (0+255),w,b
  4869  00030A  B4D8               	btfsc	status,2,c
  4870  00030C  D338               	goto	l6469
  4871                           
  4872                           ; BSR set to: 1
  4873                           ;doprnt.c: 853: if(flag & 0x1000)
  4874  00030E  A913               	btfss	(sprintf@flag+1)& (0+255),4,b
  4875  000310  D004               	goto	l6295
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;doprnt.c: 855: prec = 6;
  4879  000312  0E00               	movlw	0
  4880  000314  6F1A               	movwf	(sprintf@prec+1)& (0+255),b
  4881  000316  0E06               	movlw	6
  4882  000318  6F19               	movwf	sprintf@prec& (0+255),b
  4883  00031A                     l6295:
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4887  00031A  5105               	movf	sprintf@ap& (0+255),w,b
  4888  00031C  6ED9               	movwf	fsr2l,c
  4889  00031E  6ADA               	clrf	fsr2h,c
  4890  000320  CFDE F114          	movff	postinc2,sprintf@fval
  4891  000324  CFDE F115          	movff	postinc2,sprintf@fval+1
  4892  000328  CFDD F116          	movff	postdec2,sprintf@fval+2
  4893                           
  4894                           ; BSR set to: 1
  4895  00032C  0E03               	movlw	3
  4896  00032E  2705               	addwf	sprintf@ap& (0+255),f,b
  4897                           
  4898                           ; BSR set to: 1
  4899                           ;doprnt.c: 857: if(fval < 0.0) {
  4900  000330  AF16               	btfss	(sprintf@fval+2)& (0+255),7,b
  4901  000332  D011               	goto	l6305
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;doprnt.c: 858: fval = -fval;
  4905  000334  C114  F080         	movff	sprintf@fval,___ftneg@f1
  4906  000338  C115  F081         	movff	sprintf@fval+1,___ftneg@f1+1
  4907  00033C  C116  F082         	movff	sprintf@fval+2,___ftneg@f1+2
  4908  000340  ECE4  F019         	call	___ftneg	;wreg free
  4909  000344  C080  F114         	movff	?___ftneg,sprintf@fval
  4910  000348  C081  F115         	movff	?___ftneg+1,sprintf@fval+1
  4911  00034C  C082  F116         	movff	?___ftneg+2,sprintf@fval+2
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;doprnt.c: 859: flag |= 0x03;
  4915  000350  0E03               	movlw	3
  4916  000352  0101               	movlb	1	; () banked
  4917  000354  1312               	iorwf	sprintf@flag& (0+255),f,b
  4918  000356                     l6305:
  4919                           
  4920                           ; BSR set to: 1
  4921                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4922  000356  0E00               	movlw	0
  4923  000358  6F11               	movwf	(sprintf@eexp+1)& (0+255),b
  4924  00035A  0E00               	movlw	0
  4925  00035C  6F10               	movwf	sprintf@eexp& (0+255),b
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;doprnt.c: 862: if( fval!=0) {
  4929  00035E  5114               	movf	sprintf@fval& (0+255),w,b
  4930  000360  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4931  000362  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4932  000364  B4D8               	btfsc	status,2,c
  4933  000366  D08B               	goto	l6333
  4934                           
  4935                           ; BSR set to: 1
  4936                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4937  000368  0E82               	movlw	130
  4938  00036A  0100               	movlb	0	; () banked
  4939  00036C  6FE4               	movwf	??_sprintf& (0+255),b
  4940  00036E  0EFF               	movlw	255
  4941  000370  6FE5               	movwf	(??_sprintf+1)& (0+255),b
  4942  000372  C114  F0E6         	movff	sprintf@fval,??_sprintf+2
  4943  000376  C115  F0E7         	movff	sprintf@fval+1,??_sprintf+3
  4944  00037A  C116  F0E8         	movff	sprintf@fval+2,??_sprintf+4
  4945  00037E  C117  F0E9         	movff	sprintf@fval+3,??_sprintf+5
  4946  000382  0E10               	movlw	16
  4947  000384  D005               	goto	u7350
  4948  000386                     u7355:
  4949  000386  90D8               	bcf	status,0,c
  4950  000388  33E9               	rrcf	(??_sprintf+5)& (0+255),f,b
  4951  00038A  33E8               	rrcf	(??_sprintf+4)& (0+255),f,b
  4952  00038C  33E7               	rrcf	(??_sprintf+3)& (0+255),f,b
  4953  00038E  33E6               	rrcf	(??_sprintf+2)& (0+255),f,b
  4954  000390                     u7350:
  4955  000390  2EE8               	decfsz	wreg,f,c
  4956  000392  D7F9               	goto	u7355
  4957  000394  51E6               	movf	(??_sprintf+2)& (0+255),w,b
  4958  000396  25E4               	addwf	??_sprintf& (0+255),w,b
  4959  000398  0101               	movlb	1	; () banked
  4960  00039A  6F10               	movwf	sprintf@eexp& (0+255),b
  4961  00039C  0E00               	movlw	0
  4962  00039E  0100               	movlb	0	; () banked
  4963  0003A0  21E5               	addwfc	(??_sprintf+1)& (0+255),w,b
  4964  0003A2  0101               	movlb	1	; () banked
  4965  0003A4  6F11               	movwf	(sprintf@eexp+1)& (0+255),b
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;doprnt.c: 864: eexp--;
  4969  0003A6  0710               	decf	sprintf@eexp& (0+255),f,b
  4970  0003A8  A0D8               	btfss	status,0,c
  4971  0003AA  0711               	decf	(sprintf@eexp+1)& (0+255),f,b
  4972                           
  4973                           ; BSR set to: 1
  4974                           ;doprnt.c: 865: eexp *= 3;
  4975  0003AC  C110  F080         	movff	sprintf@eexp,___wmul@multiplier
  4976  0003B0  C111  F081         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4977  0003B4  0E00               	movlw	0
  4978  0003B6  0100               	movlb	0	; () banked
  4979  0003B8  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4980  0003BA  0E03               	movlw	3
  4981  0003BC  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4982  0003BE  ECD1  F019         	call	___wmul	;wreg free
  4983  0003C2  C080  F110         	movff	?___wmul,sprintf@eexp
  4984  0003C6  C081  F111         	movff	?___wmul+1,sprintf@eexp+1
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;doprnt.c: 866: eexp /= 10;
  4988  0003CA  C110  F086         	movff	sprintf@eexp,___awdiv@dividend
  4989  0003CE  C111  F087         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4990  0003D2  0E00               	movlw	0
  4991  0003D4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4992  0003D6  0E0A               	movlw	10
  4993  0003D8  6F88               	movwf	___awdiv@divisor& (0+255),b
  4994  0003DA  ECDA  F015         	call	___awdiv	;wreg free
  4995  0003DE  C086  F110         	movff	?___awdiv,sprintf@eexp
  4996  0003E2  C087  F111         	movff	?___awdiv+1,sprintf@eexp+1
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 867: if(eexp < 0)
  5000  0003E6  0101               	movlb	1	; () banked
  5001  0003E8  AF11               	btfss	(sprintf@eexp+1)& (0+255),7,b
  5002  0003EA  D003               	goto	l6321
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;doprnt.c: 868: eexp--;
  5006  0003EC  0710               	decf	sprintf@eexp& (0+255),f,b
  5007  0003EE  A0D8               	btfss	status,0,c
  5008  0003F0  0711               	decf	(sprintf@eexp+1)& (0+255),f,b
  5009  0003F2                     l6321:
  5010                           
  5011                           ; BSR set to: 1
  5012                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  5013  0003F2  5110               	movf	sprintf@eexp& (0+255),w,b
  5014  0003F4  0800               	sublw	0
  5015  0003F6  EC6B  F009         	call	_scale
  5016  0003FA  C0B3  F108         	movff	?_scale,sprintf@tmpval
  5017  0003FE  C0B4  F109         	movff	?_scale+1,sprintf@tmpval+1
  5018  000402  C0B5  F10A         	movff	?_scale+2,sprintf@tmpval+2
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;doprnt.c: 873: tmpval.integ *= fval;
  5022  000406  C108  F0A4         	movff	sprintf@tmpval,___ftmul@f1
  5023  00040A  C109  F0A5         	movff	sprintf@tmpval+1,___ftmul@f1+1
  5024  00040E  C10A  F0A6         	movff	sprintf@tmpval+2,___ftmul@f1+2
  5025  000412  C114  F0A7         	movff	sprintf@fval,___ftmul@f2
  5026  000416  C115  F0A8         	movff	sprintf@fval+1,___ftmul@f2+1
  5027  00041A  C116  F0A9         	movff	sprintf@fval+2,___ftmul@f2+2
  5028  00041E  ECE6  F011         	call	___ftmul	;wreg free
  5029  000422  C0A4  F108         	movff	?___ftmul,sprintf@tmpval
  5030  000426  C0A5  F109         	movff	?___ftmul+1,sprintf@tmpval+1
  5031  00042A  C0A6  F10A         	movff	?___ftmul+2,sprintf@tmpval+2
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  5035  00042E  C108  F0D0         	movff	sprintf@tmpval,___ftge@ff1
  5036  000432  C109  F0D1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5037  000436  C10A  F0D2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5038  00043A  0E00               	movlw	0
  5039  00043C  6FD3               	movwf	___ftge@ff2& (0+255),b
  5040  00043E  0E80               	movlw	128
  5041  000440  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  5042  000442  0E3F               	movlw	63
  5043  000444  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  5044  000446  EC5E  F016         	call	___ftge	;wreg free
  5045  00044A  B0D8               	btfsc	status,0,c
  5046  00044C  D005               	goto	l6329
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;doprnt.c: 875: eexp--;
  5050  00044E  0101               	movlb	1	; () banked
  5051  000450  0710               	decf	sprintf@eexp& (0+255),f,b
  5052  000452  A0D8               	btfss	status,0,c
  5053  000454  0711               	decf	(sprintf@eexp+1)& (0+255),f,b
  5054  000456  D013               	goto	l6333
  5055  000458                     l6329:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  5059  000458  C108  F0D0         	movff	sprintf@tmpval,___ftge@ff1
  5060  00045C  C109  F0D1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5061  000460  C10A  F0D2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5062  000464  0E00               	movlw	0
  5063  000466  6FD3               	movwf	___ftge@ff2& (0+255),b
  5064  000468  0E20               	movlw	32
  5065  00046A  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  5066  00046C  0E41               	movlw	65
  5067  00046E  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  5068  000470  EC5E  F016         	call	___ftge	;wreg free
  5069  000474  A0D8               	btfss	status,0,c
  5070  000476  D003               	goto	l6333
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;doprnt.c: 877: eexp++;
  5074  000478  0101               	movlb	1	; () banked
  5075  00047A  4B10               	infsnz	sprintf@eexp& (0+255),f,b
  5076  00047C  2B11               	incf	(sprintf@eexp+1)& (0+255),f,b
  5077  00047E                     l6333:
  5078                           
  5079                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  5080  00047E  0101               	movlb	1	; () banked
  5081  000480  BF1A               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5082  000482  D006               	goto	u7390
  5083  000484  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5084  000486  E11B               	bnz	l6337
  5085  000488  0E0D               	movlw	13
  5086  00048A  5D19               	subwf	sprintf@prec& (0+255),w,b
  5087  00048C  B0D8               	btfsc	status,0,c
  5088  00048E  D017               	goto	l6337
  5089  000490                     u7390:
  5090                           
  5091                           ; BSR set to: 1
  5092                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  5093  000490  C114  F0BE         	movff	sprintf@fval,___ftadd@f1
  5094  000494  C115  F0BF         	movff	sprintf@fval+1,___ftadd@f1+1
  5095  000498  C116  F0C0         	movff	sprintf@fval+2,___ftadd@f1+2
  5096  00049C  5119               	movf	sprintf@prec& (0+255),w,b
  5097  00049E  EC2D  F00C         	call	_fround
  5098  0004A2  C0B3  F0C1         	movff	?_fround,___ftadd@f2
  5099  0004A6  C0B4  F0C2         	movff	?_fround+1,___ftadd@f2+1
  5100  0004AA  C0B5  F0C3         	movff	?_fround+2,___ftadd@f2+2
  5101  0004AE  ECF8  F00D         	call	___ftadd	;wreg free
  5102  0004B2  C0BE  F114         	movff	?___ftadd,sprintf@fval
  5103  0004B6  C0BF  F115         	movff	?___ftadd+1,sprintf@fval+1
  5104  0004BA  C0C0  F116         	movff	?___ftadd+2,sprintf@fval+2
  5105  0004BE                     l6337:
  5106                           
  5107                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  5108  0004BE  0101               	movlb	1	; () banked
  5109  0004C0  BF11               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5110  0004C2  D006               	goto	u7400
  5111  0004C4  5111               	movf	(sprintf@eexp+1)& (0+255),w,b
  5112  0004C6  E120               	bnz	l6345
  5113  0004C8  0E0A               	movlw	10
  5114  0004CA  5D10               	subwf	sprintf@eexp& (0+255),w,b
  5115  0004CC  B0D8               	btfsc	status,0,c
  5116  0004CE  D01C               	goto	u7430
  5117  0004D0                     u7400:
  5118                           
  5119                           ; BSR set to: 1
  5120  0004D0  5114               	movf	sprintf@fval& (0+255),w,b
  5121  0004D2  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5122  0004D4  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  5123  0004D6  B4D8               	btfsc	status,2,c
  5124  0004D8  D057               	goto	l6359
  5125                           
  5126                           ; BSR set to: 1
  5127  0004DA  C114  F0CA         	movff	sprintf@fval,___fttol@f1
  5128  0004DE  C115  F0CB         	movff	sprintf@fval+1,___fttol@f1+1
  5129  0004E2  C116  F0CC         	movff	sprintf@fval+2,___fttol@f1+2
  5130  0004E6  ECC0  F013         	call	___fttol	;wreg free
  5131  0004EA  51CA               	movf	?___fttol& (0+255),w,b
  5132  0004EC  11CB               	iorwf	(?___fttol+1)& (0+255),w,b
  5133  0004EE  11CC               	iorwf	(?___fttol+2)& (0+255),w,b
  5134  0004F0  11CD               	iorwf	(?___fttol+3)& (0+255),w,b
  5135  0004F2  A4D8               	btfss	status,2,c
  5136  0004F4  D049               	goto	l6359
  5137                           
  5138                           ; BSR set to: 0
  5139  0004F6  0101               	movlb	1	; () banked
  5140  0004F8  BF11               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5141  0004FA  D046               	goto	l6359
  5142  0004FC  5111               	movf	(sprintf@eexp+1)& (0+255),w,b
  5143  0004FE  E104               	bnz	u7430
  5144  000500  0E02               	movlw	2
  5145  000502  5D10               	subwf	sprintf@eexp& (0+255),w,b
  5146  000504  A0D8               	btfss	status,0,c
  5147  000506  D040               	goto	l6359
  5148  000508                     u7430:
  5149  000508                     l6345:
  5150                           
  5151                           ; BSR set to: 1
  5152                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  5153  000508  C108  F0D0         	movff	sprintf@tmpval,___ftge@ff1
  5154  00050C  C109  F0D1         	movff	sprintf@tmpval+1,___ftge@ff1+1
  5155  000510  C10A  F0D2         	movff	sprintf@tmpval+2,___ftge@ff1+2
  5156  000514  0E70               	movlw	112
  5157  000516  0100               	movlb	0	; () banked
  5158  000518  6FD3               	movwf	___ftge@ff2& (0+255),b
  5159  00051A  0E89               	movlw	137
  5160  00051C  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  5161  00051E  0E40               	movlw	64
  5162  000520  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  5163  000522  EC5E  F016         	call	___ftge	;wreg free
  5164  000526  B0D8               	btfsc	status,0,c
  5165  000528  D003               	goto	l6349
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5169  00052A  0101               	movlb	1	; () banked
  5170  00052C  0EF7               	movlw	247
  5171  00052E  D002               	goto	L11
  5172  000530                     l6349:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5176  000530  0101               	movlb	1	; () banked
  5177  000532  0EF8               	movlw	248
  5178  000534                     L11:
  5179  000534  2710               	addwf	sprintf@eexp& (0+255),f,b
  5180  000536  0EFF               	movlw	255
  5181  000538  2311               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5182                           
  5183                           ; BSR set to: 1
  5184                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  5185  00053A  5110               	movf	sprintf@eexp& (0+255),w,b
  5186  00053C  EC6B  F009         	call	_scale
  5187  000540  C0B3  F108         	movff	?_scale,sprintf@tmpval
  5188  000544  C0B4  F109         	movff	?_scale+1,sprintf@tmpval+1
  5189  000548  C0B5  F10A         	movff	?_scale+2,sprintf@tmpval+2
  5190                           
  5191                           ; BSR set to: 0
  5192                           
  5193                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5194  00054C  C114  F080         	movff	sprintf@fval,__tdiv_to_l_@f1
  5195  000550  C115  F081         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  5196  000554  C116  F082         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  5197  000558  C108  F083         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  5198  00055C  C109  F084         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  5199  000560  C10A  F085         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  5200  000564  ECEC  F010         	call	__tdiv_to_l_	;wreg free
  5201  000568  C080  F10C         	movff	?__tdiv_to_l_,sprintf@val
  5202  00056C  C081  F10D         	movff	?__tdiv_to_l_+1,sprintf@val+1
  5203  000570  C082  F10E         	movff	?__tdiv_to_l_+2,sprintf@val+2
  5204  000574  C083  F10F         	movff	?__tdiv_to_l_+3,sprintf@val+3
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;doprnt.c: 1155: fval = 0.0;
  5208  000578  0E00               	movlw	0
  5209  00057A  0101               	movlb	1	; () banked
  5210  00057C  6F14               	movwf	sprintf@fval& (0+255),b
  5211  00057E  0E00               	movlw	0
  5212  000580  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  5213  000582  0E00               	movlw	0
  5214  000584  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  5215                           
  5216                           ;doprnt.c: 1156: } else {
  5217  000586  D033               	goto	l6363
  5218  000588                     l6359:
  5219                           
  5220                           ;doprnt.c: 1157: val = (unsigned long)fval;
  5221  000588  C114  F0CA         	movff	sprintf@fval,___fttol@f1
  5222  00058C  C115  F0CB         	movff	sprintf@fval+1,___fttol@f1+1
  5223  000590  C116  F0CC         	movff	sprintf@fval+2,___fttol@f1+2
  5224  000594  ECC0  F013         	call	___fttol	;wreg free
  5225  000598  C0CA  F10C         	movff	?___fttol,sprintf@val
  5226  00059C  C0CB  F10D         	movff	?___fttol+1,sprintf@val+1
  5227  0005A0  C0CC  F10E         	movff	?___fttol+2,sprintf@val+2
  5228  0005A4  C0CD  F10F         	movff	?___fttol+3,sprintf@val+3
  5229                           
  5230                           ;doprnt.c: 1158: fval -= (double)val;
  5231  0005A8  C114  F0CA         	movff	sprintf@fval,___ftsub@f1
  5232  0005AC  C115  F0CB         	movff	sprintf@fval+1,___ftsub@f1+1
  5233  0005B0  C116  F0CC         	movff	sprintf@fval+2,___ftsub@f1+2
  5234  0005B4  C10C  F088         	movff	sprintf@val,___lltoft@c
  5235  0005B8  C10D  F089         	movff	sprintf@val+1,___lltoft@c+1
  5236  0005BC  C10E  F08A         	movff	sprintf@val+2,___lltoft@c+2
  5237  0005C0  C10F  F08B         	movff	sprintf@val+3,___lltoft@c+3
  5238  0005C4  ECA1  F017         	call	___lltoft	;wreg free
  5239  0005C8  C088  F0CD         	movff	?___lltoft,___ftsub@f2
  5240  0005CC  C089  F0CE         	movff	?___lltoft+1,___ftsub@f2+1
  5241  0005D0  C08A  F0CF         	movff	?___lltoft+2,___ftsub@f2+2
  5242  0005D4  ECC5  F018         	call	___ftsub	;wreg free
  5243  0005D8  C0CA  F114         	movff	?___ftsub,sprintf@fval
  5244  0005DC  C0CB  F115         	movff	?___ftsub+1,sprintf@fval+1
  5245  0005E0  C0CC  F116         	movff	?___ftsub+2,sprintf@fval+2
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;doprnt.c: 1159: eexp = 0;
  5249  0005E4  0E00               	movlw	0
  5250  0005E6  0101               	movlb	1	; () banked
  5251  0005E8  6F11               	movwf	(sprintf@eexp+1)& (0+255),b
  5252  0005EA  0E00               	movlw	0
  5253  0005EC  6F10               	movwf	sprintf@eexp& (0+255),b
  5254  0005EE                     l6363:
  5255                           
  5256                           ; BSR set to: 1
  5257                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5258  0005EE  0E01               	movlw	1
  5259  0005F0  6F1B               	movwf	sprintf@c& (0+255),b
  5260  0005F2                     l6365:
  5261                           
  5262                           ; BSR set to: 1
  5263  0005F2  0E0A               	movlw	10
  5264  0005F4  191B               	xorwf	sprintf@c& (0+255),w,b
  5265  0005F6  B4D8               	btfsc	status,2,c
  5266  0005F8  D018               	goto	l6377
  5267                           
  5268                           ; BSR set to: 1
  5269                           ;doprnt.c: 1163: if(val < dpowers[c])
  5270  0005FA  511B               	movf	sprintf@c& (0+255),w,b
  5271  0005FC  0D04               	mullw	4
  5272  0005FE  0EB7               	movlw	low _dpowers
  5273  000600  24F3               	addwf	243,w,c
  5274  000602  6EF6               	movwf	tblptrl,c
  5275  000604  0EFE               	movlw	high _dpowers
  5276  000606  20F4               	addwfc	244,w,c
  5277  000608  6EF7               	movwf	tblptrh,c
  5278  00060A                     	if	0	;There are less than 3 active tblptr bytes
  5279  00060A                     	endif
  5280  00060A  0009               	tblrd		*+
  5281  00060C  50F5               	movf	tablat,w,c
  5282  00060E  5D0C               	subwf	sprintf@val& (0+255),w,b
  5283  000610  0009               	tblrd		*+
  5284  000612  50F5               	movf	tablat,w,c
  5285  000614  590D               	subwfb	(sprintf@val+1)& (0+255),w,b
  5286  000616  0009               	tblrd		*+
  5287  000618  50F5               	movf	tablat,w,c
  5288  00061A  590E               	subwfb	(sprintf@val+2)& (0+255),w,b
  5289  00061C  0009               	tblrd		*+
  5290  00061E  50F5               	movf	tablat,w,c
  5291  000620  590F               	subwfb	(sprintf@val+3)& (0+255),w,b
  5292  000622  A0D8               	btfss	status,0,c
  5293  000624  D002               	goto	l6377
  5294                           
  5295                           ; BSR set to: 1
  5296  000626  2B1B               	incf	sprintf@c& (0+255),f,b
  5297  000628  D7E4               	goto	l6365
  5298  00062A                     l6377:
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;doprnt.c: 1168: width -= prec + c + eexp;
  5302  00062A  511B               	movf	sprintf@c& (0+255),w,b
  5303  00062C  2519               	addwf	sprintf@prec& (0+255),w,b
  5304  00062E  0100               	movlb	0	; () banked
  5305  000630  6FE4               	movwf	??_sprintf& (0+255),b
  5306  000632  0E00               	movlw	0
  5307  000634  0101               	movlb	1	; () banked
  5308  000636  211A               	addwfc	(sprintf@prec+1)& (0+255),w,b
  5309  000638  0100               	movlb	0	; () banked
  5310  00063A  6FE5               	movwf	(??_sprintf+1)& (0+255),b
  5311  00063C  0101               	movlb	1	; () banked
  5312  00063E  5110               	movf	sprintf@eexp& (0+255),w,b
  5313  000640  0100               	movlb	0	; () banked
  5314  000642  27E4               	addwf	??_sprintf& (0+255),f,b
  5315  000644  0101               	movlb	1	; () banked
  5316  000646  5111               	movf	(sprintf@eexp+1)& (0+255),w,b
  5317  000648  0100               	movlb	0	; () banked
  5318  00064A  23E5               	addwfc	(??_sprintf+1)& (0+255),f,b
  5319  00064C  51E4               	movf	??_sprintf& (0+255),w,b
  5320  00064E  0101               	movlb	1	; () banked
  5321  000650  5F17               	subwf	sprintf@width& (0+255),f,b
  5322  000652  0100               	movlb	0	; () banked
  5323  000654  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  5324  000656  0101               	movlb	1	; () banked
  5325  000658  5B18               	subwfb	(sprintf@width+1)& (0+255),f,b
  5326                           
  5327                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  5328  00065A  5119               	movf	sprintf@prec& (0+255),w,b
  5329  00065C  111A               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5330  00065E  B4D8               	btfsc	status,2,c
  5331  000660  D003               	goto	l6381
  5332                           
  5333                           ; BSR set to: 1
  5334                           ;doprnt.c: 1174: width--;
  5335  000662  0717               	decf	sprintf@width& (0+255),f,b
  5336  000664  A0D8               	btfss	status,0,c
  5337  000666  0718               	decf	(sprintf@width+1)& (0+255),f,b
  5338  000668                     l6381:
  5339                           
  5340                           ; BSR set to: 1
  5341                           ;doprnt.c: 1175: if(flag & 0x03)
  5342  000668  C112  F0E4         	movff	sprintf@flag,??_sprintf
  5343  00066C  0E03               	movlw	3
  5344  00066E  0100               	movlb	0	; () banked
  5345  000670  17E4               	andwf	??_sprintf& (0+255),f,b
  5346  000672  B4D8               	btfsc	status,2,c
  5347  000674  D004               	goto	l6385
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;doprnt.c: 1176: width--;
  5351  000676  0101               	movlb	1	; () banked
  5352  000678  0717               	decf	sprintf@width& (0+255),f,b
  5353  00067A  A0D8               	btfss	status,0,c
  5354  00067C  0718               	decf	(sprintf@width+1)& (0+255),f,b
  5355  00067E                     l6385:
  5356                           
  5357                           ;doprnt.c: 1179: if(flag & 0x04) {
  5358  00067E  0101               	movlb	1	; () banked
  5359  000680  A512               	btfss	sprintf@flag& (0+255),2,b
  5360  000682  D033               	goto	l6407
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;doprnt.c: 1183: if(flag & 0x03)
  5364  000684  C112  F0E4         	movff	sprintf@flag,??_sprintf
  5365  000688  0E03               	movlw	3
  5366  00068A  0100               	movlb	0	; () banked
  5367  00068C  17E4               	andwf	??_sprintf& (0+255),f,b
  5368  00068E  B4D8               	btfsc	status,2,c
  5369  000690  D016               	goto	l6399
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  5373  000692  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5374  000696  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5375  00069A  0E2D               	movlw	45
  5376  00069C  6EDF               	movwf	indf2,c
  5377                           
  5378                           ; BSR set to: 0
  5379  00069E  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5380  0006A0  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5381  0006A2  D00D               	goto	l6399
  5382  0006A4                     l6393:
  5383                           
  5384                           ; BSR set to: 1
  5385                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  5386  0006A4  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5387  0006A8  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5388  0006AC  0E30               	movlw	48
  5389  0006AE  6EDF               	movwf	indf2,c
  5390                           
  5391                           ; BSR set to: 1
  5392  0006B0  0100               	movlb	0	; () banked
  5393  0006B2  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5394  0006B4  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;doprnt.c: 1196: width--;
  5398  0006B6  0101               	movlb	1	; () banked
  5399  0006B8  0717               	decf	sprintf@width& (0+255),f,b
  5400  0006BA  A0D8               	btfss	status,0,c
  5401  0006BC  0718               	decf	(sprintf@width+1)& (0+255),f,b
  5402  0006BE                     l6399:
  5403  0006BE  0101               	movlb	1	; () banked
  5404  0006C0  BF18               	btfsc	(sprintf@width+1)& (0+255),7,b
  5405  0006C2  D073               	goto	l6423
  5406  0006C4  5118               	movf	(sprintf@width+1)& (0+255),w,b
  5407  0006C6  E1EE               	bnz	l6393
  5408  0006C8  0517               	decf	sprintf@width& (0+255),w,b
  5409  0006CA  A0D8               	btfss	status,0,c
  5410  0006CC  D06E               	goto	l6423
  5411  0006CE  D7EA               	goto	l6393
  5412  0006D0                     l6401:
  5413                           
  5414                           ; BSR set to: 1
  5415                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  5416  0006D0  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5417  0006D4  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5418  0006D8  0E20               	movlw	32
  5419  0006DA  6EDF               	movwf	indf2,c
  5420                           
  5421                           ; BSR set to: 1
  5422  0006DC  0100               	movlb	0	; () banked
  5423  0006DE  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5424  0006E0  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;doprnt.c: 1208: width--;
  5428  0006E2  0101               	movlb	1	; () banked
  5429  0006E4  0717               	decf	sprintf@width& (0+255),f,b
  5430  0006E6  A0D8               	btfss	status,0,c
  5431  0006E8  0718               	decf	(sprintf@width+1)& (0+255),f,b
  5432  0006EA                     l6407:
  5433                           
  5434                           ; BSR set to: 1
  5435  0006EA  BF18               	btfsc	(sprintf@width+1)& (0+255),7,b
  5436  0006EC  D005               	goto	u7520
  5437  0006EE  5118               	movf	(sprintf@width+1)& (0+255),w,b
  5438  0006F0  E1EF               	bnz	l6401
  5439  0006F2  0517               	decf	sprintf@width& (0+255),w,b
  5440  0006F4  B0D8               	btfsc	status,0,c
  5441  0006F6  D7EC               	goto	l6401
  5442  0006F8                     u7520:
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  5446  0006F8  C112  F0E4         	movff	sprintf@flag,??_sprintf
  5447  0006FC  0E03               	movlw	3
  5448  0006FE  0100               	movlb	0	; () banked
  5449  000700  17E4               	andwf	??_sprintf& (0+255),f,b
  5450  000702  B4D8               	btfsc	status,2,c
  5451  000704  D052               	goto	l6423
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  5455  000706  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5456  00070A  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5457  00070E  0E2D               	movlw	45
  5458  000710  6EDF               	movwf	indf2,c
  5459  000712  D049               	goto	L12
  5460  000714                     l6415:
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5464  000714  C10C  F080         	movff	sprintf@val,___lldiv@dividend
  5465  000718  C10D  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  5466  00071C  C10E  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  5467  000720  C10F  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  5468  000724  511B               	movf	sprintf@c& (0+255),w,b
  5469  000726  0D04               	mullw	4
  5470  000728  0EB7               	movlw	low _dpowers
  5471  00072A  24F3               	addwf	243,w,c
  5472  00072C  6EF6               	movwf	tblptrl,c
  5473  00072E  0EFE               	movlw	high _dpowers
  5474  000730  20F4               	addwfc	244,w,c
  5475  000732  6EF7               	movwf	tblptrh,c
  5476  000734                     	if	0	;There are less than 3 active tblptr bytes
  5477  000734                     	endif
  5478  000734  0009               	tblrd		*+
  5479  000736  CFF5 F084          	movff	tablat,___lldiv@divisor
  5480  00073A  0009               	tblrd		*+
  5481  00073C  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  5482  000740  0009               	tblrd		*+
  5483  000742  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  5484  000746  000A               	tblrd		*-
  5485  000748  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  5486  00074C  EC1C  F016         	call	___lldiv	;wreg free
  5487  000750  C080  F108         	movff	?___lldiv,sprintf@tmpval
  5488  000754  C081  F109         	movff	?___lldiv+1,sprintf@tmpval+1
  5489  000758  C082  F10A         	movff	?___lldiv+2,sprintf@tmpval+2
  5490  00075C  C083  F10B         	movff	?___lldiv+3,sprintf@tmpval+3
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5494  000760  C108  F08D         	movff	sprintf@tmpval,___llmod@dividend
  5495  000764  C109  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5496  000768  C10A  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5497  00076C  C10B  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5498  000770  0E0A               	movlw	10
  5499  000772  6F91               	movwf	___llmod@divisor& (0+255),b
  5500  000774  0E00               	movlw	0
  5501  000776  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  5502  000778  0E00               	movlw	0
  5503  00077A  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  5504  00077C  0E00               	movlw	0
  5505  00077E  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  5506  000780  EC3F  F017         	call	___llmod	;wreg free
  5507  000784  C08D  F108         	movff	?___llmod,sprintf@tmpval
  5508  000788  C08E  F109         	movff	?___llmod+1,sprintf@tmpval+1
  5509  00078C  C08F  F10A         	movff	?___llmod+2,sprintf@tmpval+2
  5510  000790  C090  F10B         	movff	?___llmod+3,sprintf@tmpval+3
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  5514  000794  0101               	movlb	1	; () banked
  5515  000796  5108               	movf	sprintf@tmpval& (0+255),w,b
  5516  000798  0F30               	addlw	48
  5517  00079A  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5518  00079E  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5519  0007A2  6EDF               	movwf	indf2,c
  5520                           
  5521                           ; BSR set to: 1
  5522  0007A4  0100               	movlb	0	; () banked
  5523  0007A6                     L12:
  5524  0007A6  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5525  0007A8  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5526  0007AA                     l6423:
  5527  0007AA  0101               	movlb	1	; () banked
  5528  0007AC  071B               	decf	sprintf@c& (0+255),f,b
  5529  0007AE  291B               	incf	sprintf@c& (0+255),w,b
  5530  0007B0  B4D8               	btfsc	status,2,c
  5531  0007B2  D00E               	goto	l6431
  5532  0007B4  D7AF               	goto	l6415
  5533  0007B6                     l6425:
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  5537  0007B6  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5538  0007BA  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5539  0007BE  0E30               	movlw	48
  5540  0007C0  6EDF               	movwf	indf2,c
  5541                           
  5542                           ; BSR set to: 1
  5543  0007C2  0100               	movlb	0	; () banked
  5544  0007C4  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5545  0007C6  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;doprnt.c: 1235: eexp--;
  5549  0007C8  0101               	movlb	1	; () banked
  5550  0007CA  0710               	decf	sprintf@eexp& (0+255),f,b
  5551  0007CC  A0D8               	btfss	status,0,c
  5552  0007CE  0711               	decf	(sprintf@eexp+1)& (0+255),f,b
  5553  0007D0                     l6431:
  5554                           
  5555                           ; BSR set to: 1
  5556  0007D0  BF11               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5557  0007D2  D005               	goto	u7550
  5558  0007D4  5111               	movf	(sprintf@eexp+1)& (0+255),w,b
  5559  0007D6  E1EF               	bnz	l6425
  5560  0007D8  0510               	decf	sprintf@eexp& (0+255),w,b
  5561  0007DA  B0D8               	btfsc	status,0,c
  5562  0007DC  D7EC               	goto	l6425
  5563  0007DE                     u7550:
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5567  0007DE  BF1A               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5568  0007E0  D009               	goto	l541
  5569  0007E2  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5570  0007E4  E104               	bnz	u7560
  5571  0007E6  0E09               	movlw	9
  5572  0007E8  5D19               	subwf	sprintf@prec& (0+255),w,b
  5573  0007EA  A0D8               	btfss	status,0,c
  5574  0007EC  D003               	goto	l541
  5575  0007EE                     u7560:
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5579  0007EE  0E08               	movlw	8
  5580  0007F0  6F1B               	movwf	sprintf@c& (0+255),b
  5581  0007F2  D002               	goto	l6437
  5582  0007F4                     l541:
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5586  0007F4  C119  F11B         	movff	sprintf@prec,sprintf@c
  5587  0007F8                     l6437:
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;doprnt.c: 1241: prec -= (int)c;
  5591  0007F8  511B               	movf	sprintf@c& (0+255),w,b
  5592  0007FA  5F19               	subwf	sprintf@prec& (0+255),f,b
  5593  0007FC  0E00               	movlw	0
  5594  0007FE  5B1A               	subwfb	(sprintf@prec+1)& (0+255),f,b
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;doprnt.c: 1245: if(c)
  5598  000800  511B               	movf	sprintf@c& (0+255),w,b
  5599  000802  B4D8               	btfsc	status,2,c
  5600  000804  D009               	goto	l6445
  5601                           
  5602                           ; BSR set to: 1
  5603                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  5604  000806  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5605  00080A  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5606  00080E  0E2E               	movlw	46
  5607  000810  6EDF               	movwf	indf2,c
  5608                           
  5609                           ; BSR set to: 1
  5610  000812  0100               	movlb	0	; () banked
  5611  000814  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5612  000816  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5613  000818                     l6445:
  5614                           
  5615                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5616  000818  0101               	movlb	1	; () banked
  5617  00081A  511B               	movf	sprintf@c& (0+255),w,b
  5618  00081C  EC6B  F009         	call	_scale
  5619  000820  C0B3  F100         	movff	?_scale,_sprintf$2120
  5620  000824  C0B4  F101         	movff	?_scale+1,_sprintf$2120+1
  5621  000828  C0B5  F102         	movff	?_scale+2,_sprintf$2120+2
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5625  00082C  C114  F0A7         	movff	sprintf@fval,___ftmul@f2
  5626  000830  C115  F0A8         	movff	sprintf@fval+1,___ftmul@f2+1
  5627  000834  C116  F0A9         	movff	sprintf@fval+2,___ftmul@f2+2
  5628  000838  C100  F0A4         	movff	_sprintf$2120,___ftmul@f1
  5629  00083C  C101  F0A5         	movff	_sprintf$2120+1,___ftmul@f1+1
  5630  000840  C102  F0A6         	movff	_sprintf$2120+2,___ftmul@f1+2
  5631  000844  ECE6  F011         	call	___ftmul	;wreg free
  5632  000848  C0A4  F0CA         	movff	?___ftmul,___fttol@f1
  5633  00084C  C0A5  F0CB         	movff	?___ftmul+1,___fttol@f1+1
  5634  000850  C0A6  F0CC         	movff	?___ftmul+2,___fttol@f1+2
  5635  000854  ECC0  F013         	call	___fttol	;wreg free
  5636  000858  C0CA  F10C         	movff	?___fttol,sprintf@val
  5637  00085C  C0CB  F10D         	movff	?___fttol+1,sprintf@val+1
  5638  000860  C0CC  F10E         	movff	?___fttol+2,sprintf@val+2
  5639  000864  C0CD  F10F         	movff	?___fttol+3,sprintf@val+3
  5640                           
  5641                           ;doprnt.c: 1254: while(c--) {
  5642  000868  D072               	goto	l6459
  5643  00086A                     l6449:
  5644                           
  5645                           ; BSR set to: 1
  5646                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5647  00086A  C10C  F080         	movff	sprintf@val,___lldiv@dividend
  5648  00086E  C10D  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  5649  000872  C10E  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  5650  000876  C10F  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  5651  00087A  511B               	movf	sprintf@c& (0+255),w,b
  5652  00087C  0D04               	mullw	4
  5653  00087E  0EB7               	movlw	low _dpowers
  5654  000880  24F3               	addwf	243,w,c
  5655  000882  6EF6               	movwf	tblptrl,c
  5656  000884  0EFE               	movlw	high _dpowers
  5657  000886  20F4               	addwfc	244,w,c
  5658  000888  6EF7               	movwf	tblptrh,c
  5659  00088A                     	if	0	;There are less than 3 active tblptr bytes
  5660  00088A                     	endif
  5661  00088A  0009               	tblrd		*+
  5662  00088C  CFF5 F084          	movff	tablat,___lldiv@divisor
  5663  000890  0009               	tblrd		*+
  5664  000892  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  5665  000896  0009               	tblrd		*+
  5666  000898  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  5667  00089C  000A               	tblrd		*-
  5668  00089E  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  5669  0008A2  EC1C  F016         	call	___lldiv	;wreg free
  5670  0008A6  C080  F108         	movff	?___lldiv,sprintf@tmpval
  5671  0008AA  C081  F109         	movff	?___lldiv+1,sprintf@tmpval+1
  5672  0008AE  C082  F10A         	movff	?___lldiv+2,sprintf@tmpval+2
  5673  0008B2  C083  F10B         	movff	?___lldiv+3,sprintf@tmpval+3
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5677  0008B6  C108  F08D         	movff	sprintf@tmpval,___llmod@dividend
  5678  0008BA  C109  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5679  0008BE  C10A  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5680  0008C2  C10B  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5681  0008C6  0E0A               	movlw	10
  5682  0008C8  6F91               	movwf	___llmod@divisor& (0+255),b
  5683  0008CA  0E00               	movlw	0
  5684  0008CC  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  5685  0008CE  0E00               	movlw	0
  5686  0008D0  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  5687  0008D2  0E00               	movlw	0
  5688  0008D4  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  5689  0008D6  EC3F  F017         	call	___llmod	;wreg free
  5690  0008DA  C08D  F108         	movff	?___llmod,sprintf@tmpval
  5691  0008DE  C08E  F109         	movff	?___llmod+1,sprintf@tmpval+1
  5692  0008E2  C08F  F10A         	movff	?___llmod+2,sprintf@tmpval+2
  5693  0008E6  C090  F10B         	movff	?___llmod+3,sprintf@tmpval+3
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  5697  0008EA  0101               	movlb	1	; () banked
  5698  0008EC  5108               	movf	sprintf@tmpval& (0+255),w,b
  5699  0008EE  0F30               	addlw	48
  5700  0008F0  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5701  0008F4  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5702  0008F8  6EDF               	movwf	indf2,c
  5703                           
  5704                           ; BSR set to: 1
  5705  0008FA  0100               	movlb	0	; () banked
  5706  0008FC  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5707  0008FE  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;doprnt.c: 1258: val %= dpowers[c];
  5711  000900  C10C  F08D         	movff	sprintf@val,___llmod@dividend
  5712  000904  C10D  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  5713  000908  C10E  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  5714  00090C  C10F  F090         	movff	sprintf@val+3,___llmod@dividend+3
  5715  000910  0101               	movlb	1	; () banked
  5716  000912  511B               	movf	sprintf@c& (0+255),w,b
  5717  000914  0D04               	mullw	4
  5718  000916  0EB7               	movlw	low _dpowers
  5719  000918  24F3               	addwf	243,w,c
  5720  00091A  6EF6               	movwf	tblptrl,c
  5721  00091C  0EFE               	movlw	high _dpowers
  5722  00091E  20F4               	addwfc	244,w,c
  5723  000920  6EF7               	movwf	tblptrh,c
  5724  000922                     	if	0	;There are less than 3 active tblptr bytes
  5725  000922                     	endif
  5726  000922  0009               	tblrd		*+
  5727  000924  CFF5 F091          	movff	tablat,___llmod@divisor
  5728  000928  0009               	tblrd		*+
  5729  00092A  CFF5 F092          	movff	tablat,___llmod@divisor+1
  5730  00092E  0009               	tblrd		*+
  5731  000930  CFF5 F093          	movff	tablat,___llmod@divisor+2
  5732  000934  000A               	tblrd		*-
  5733  000936  CFF5 F094          	movff	tablat,___llmod@divisor+3
  5734  00093A  EC3F  F017         	call	___llmod	;wreg free
  5735  00093E  C08D  F10C         	movff	?___llmod,sprintf@val
  5736  000942  C08E  F10D         	movff	?___llmod+1,sprintf@val+1
  5737  000946  C08F  F10E         	movff	?___llmod+2,sprintf@val+2
  5738  00094A  C090  F10F         	movff	?___llmod+3,sprintf@val+3
  5739  00094E                     l6459:
  5740                           
  5741                           ; BSR set to: 0
  5742  00094E  0101               	movlb	1	; () banked
  5743  000950  071B               	decf	sprintf@c& (0+255),f,b
  5744  000952  291B               	incf	sprintf@c& (0+255),w,b
  5745  000954  B4D8               	btfsc	status,2,c
  5746  000956  D00E               	goto	l6467
  5747  000958  D788               	goto	l6449
  5748  00095A                     l6461:
  5749                           
  5750                           ; BSR set to: 1
  5751                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  5752  00095A  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  5753  00095E  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  5754  000962  0E30               	movlw	48
  5755  000964  6EDF               	movwf	indf2,c
  5756                           
  5757                           ; BSR set to: 1
  5758  000966  0100               	movlb	0	; () banked
  5759  000968  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  5760  00096A  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;doprnt.c: 1263: prec--;
  5764  00096C  0101               	movlb	1	; () banked
  5765  00096E  0719               	decf	sprintf@prec& (0+255),f,b
  5766  000970  A0D8               	btfss	status,0,c
  5767  000972  071A               	decf	(sprintf@prec+1)& (0+255),f,b
  5768  000974                     l6467:
  5769                           
  5770                           ; BSR set to: 1
  5771  000974  5119               	movf	sprintf@prec& (0+255),w,b
  5772  000976  111A               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5773  000978  B4D8               	btfsc	status,2,c
  5774  00097A  D14D               	goto	u7790
  5775  00097C  D7EE               	goto	l6461
  5776  00097E                     l6469:
  5777                           
  5778                           ; BSR set to: 1
  5779                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  5780  00097E  5105               	movf	sprintf@ap& (0+255),w,b
  5781  000980  6ED9               	movwf	fsr2l,c
  5782  000982  6ADA               	clrf	fsr2h,c
  5783  000984  CFDE F10C          	movff	postinc2,sprintf@val
  5784  000988  CFDD F10D          	movff	postdec2,sprintf@val+1
  5785  00098C  0E00               	movlw	0
  5786  00098E  BF0D               	btfsc	(sprintf@val+1)& (0+255),7,b
  5787  000990  0EFF               	movlw	-1
  5788  000992  6F0E               	movwf	(sprintf@val+2)& (0+255),b
  5789  000994  6F0F               	movwf	(sprintf@val+3)& (0+255),b
  5790                           
  5791                           ; BSR set to: 1
  5792  000996  0E02               	movlw	2
  5793  000998  2705               	addwf	sprintf@ap& (0+255),f,b
  5794                           
  5795                           ; BSR set to: 1
  5796                           ;doprnt.c: 1287: if((long)val < 0) {
  5797  00099A  AF0F               	btfss	(sprintf@val+3)& (0+255),7,b
  5798  00099C  D00A               	goto	l6479
  5799                           
  5800                           ; BSR set to: 1
  5801                           ;doprnt.c: 1288: flag |= 0x03;
  5802  00099E  0E03               	movlw	3
  5803  0009A0  1312               	iorwf	sprintf@flag& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;doprnt.c: 1289: val = -val;
  5807  0009A2  1F0F               	comf	(sprintf@val+3)& (0+255),f,b
  5808  0009A4  1F0E               	comf	(sprintf@val+2)& (0+255),f,b
  5809  0009A6  1F0D               	comf	(sprintf@val+1)& (0+255),f,b
  5810  0009A8  6D0C               	negf	sprintf@val& (0+255),b
  5811  0009AA  0E00               	movlw	0
  5812  0009AC  230D               	addwfc	(sprintf@val+1)& (0+255),f,b
  5813  0009AE  230E               	addwfc	(sprintf@val+2)& (0+255),f,b
  5814  0009B0  230F               	addwfc	(sprintf@val+3)& (0+255),f,b
  5815  0009B2                     l6479:
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5819  0009B2  5119               	movf	sprintf@prec& (0+255),w,b
  5820  0009B4  111A               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5821  0009B6  A4D8               	btfss	status,2,c
  5822  0009B8  D008               	goto	l6485
  5823                           
  5824                           ; BSR set to: 1
  5825  0009BA  510C               	movf	sprintf@val& (0+255),w,b
  5826  0009BC  110D               	iorwf	(sprintf@val+1)& (0+255),w,b
  5827  0009BE  110E               	iorwf	(sprintf@val+2)& (0+255),w,b
  5828  0009C0  110F               	iorwf	(sprintf@val+3)& (0+255),w,b
  5829  0009C2  A4D8               	btfss	status,2,c
  5830  0009C4  D002               	goto	l6485
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;doprnt.c: 1317: prec++;
  5834  0009C6  4B19               	infsnz	sprintf@prec& (0+255),f,b
  5835  0009C8  2B1A               	incf	(sprintf@prec+1)& (0+255),f,b
  5836  0009CA                     l6485:
  5837                           
  5838                           ; BSR set to: 1
  5839                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5840  0009CA  0E01               	movlw	1
  5841  0009CC  6F1B               	movwf	sprintf@c& (0+255),b
  5842  0009CE                     l6487:
  5843                           
  5844                           ; BSR set to: 1
  5845  0009CE  0E0A               	movlw	10
  5846  0009D0  191B               	xorwf	sprintf@c& (0+255),w,b
  5847  0009D2  B4D8               	btfsc	status,2,c
  5848  0009D4  D018               	goto	l6499
  5849                           
  5850                           ; BSR set to: 1
  5851                           ;doprnt.c: 1332: if(val < dpowers[c])
  5852  0009D6  511B               	movf	sprintf@c& (0+255),w,b
  5853  0009D8  0D04               	mullw	4
  5854  0009DA  0EB7               	movlw	low _dpowers
  5855  0009DC  24F3               	addwf	243,w,c
  5856  0009DE  6EF6               	movwf	tblptrl,c
  5857  0009E0  0EFE               	movlw	high _dpowers
  5858  0009E2  20F4               	addwfc	244,w,c
  5859  0009E4  6EF7               	movwf	tblptrh,c
  5860  0009E6                     	if	0	;There are less than 3 active tblptr bytes
  5861  0009E6                     	endif
  5862  0009E6  0009               	tblrd		*+
  5863  0009E8  50F5               	movf	tablat,w,c
  5864  0009EA  5D0C               	subwf	sprintf@val& (0+255),w,b
  5865  0009EC  0009               	tblrd		*+
  5866  0009EE  50F5               	movf	tablat,w,c
  5867  0009F0  590D               	subwfb	(sprintf@val+1)& (0+255),w,b
  5868  0009F2  0009               	tblrd		*+
  5869  0009F4  50F5               	movf	tablat,w,c
  5870  0009F6  590E               	subwfb	(sprintf@val+2)& (0+255),w,b
  5871  0009F8  0009               	tblrd		*+
  5872  0009FA  50F5               	movf	tablat,w,c
  5873  0009FC  590F               	subwfb	(sprintf@val+3)& (0+255),w,b
  5874  0009FE  A0D8               	btfss	status,0,c
  5875  000A00  D002               	goto	l6499
  5876                           
  5877                           ; BSR set to: 1
  5878  000A02  2B1B               	incf	sprintf@c& (0+255),f,b
  5879  000A04  D7E4               	goto	l6487
  5880  000A06                     l6499:
  5881                           
  5882                           ; BSR set to: 1
  5883                           ;doprnt.c: 1365: if(c < prec)
  5884  000A06  511B               	movf	sprintf@c& (0+255),w,b
  5885  000A08  0100               	movlb	0	; () banked
  5886  000A0A  6FE4               	movwf	??_sprintf& (0+255),b
  5887  000A0C  6BE5               	clrf	(??_sprintf+1)& (0+255),b
  5888  000A0E  0101               	movlb	1	; () banked
  5889  000A10  5119               	movf	sprintf@prec& (0+255),w,b
  5890  000A12  0100               	movlb	0	; () banked
  5891  000A14  5DE4               	subwf	??_sprintf& (0+255),w,b
  5892  000A16  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  5893  000A18  0A80               	xorlw	128
  5894  000A1A  6FE6               	movwf	(??_sprintf+2)& (0+255),b
  5895  000A1C  0101               	movlb	1	; () banked
  5896  000A1E  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5897  000A20  0A80               	xorlw	128
  5898  000A22  0100               	movlb	0	; () banked
  5899  000A24  59E6               	subwfb	(??_sprintf+2)& (0+255),w,b
  5900  000A26  B0D8               	btfsc	status,0,c
  5901  000A28  D003               	goto	l6503
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;doprnt.c: 1366: c = (char)prec;
  5905  000A2A  C119  F11B         	movff	sprintf@prec,sprintf@c
  5906  000A2E  D015               	goto	l6507
  5907  000A30                     l6503:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;doprnt.c: 1367: else if(prec < c)
  5911  000A30  0101               	movlb	1	; () banked
  5912  000A32  511B               	movf	sprintf@c& (0+255),w,b
  5913  000A34  0100               	movlb	0	; () banked
  5914  000A36  6FE4               	movwf	??_sprintf& (0+255),b
  5915  000A38  6BE5               	clrf	(??_sprintf+1)& (0+255),b
  5916  000A3A  51E4               	movf	??_sprintf& (0+255),w,b
  5917  000A3C  0101               	movlb	1	; () banked
  5918  000A3E  5D19               	subwf	sprintf@prec& (0+255),w,b
  5919  000A40  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5920  000A42  0A80               	xorlw	128
  5921  000A44  0100               	movlb	0	; () banked
  5922  000A46  6FE6               	movwf	(??_sprintf+2)& (0+255),b
  5923  000A48  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  5924  000A4A  0A80               	xorlw	128
  5925  000A4C  59E6               	subwfb	(??_sprintf+2)& (0+255),w,b
  5926  000A4E  B0D8               	btfsc	status,0,c
  5927  000A50  D004               	goto	l6507
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;doprnt.c: 1368: prec = c;
  5931  000A52  C11B  F119         	movff	sprintf@c,sprintf@prec
  5932  000A56  0101               	movlb	1	; () banked
  5933  000A58  6B1A               	clrf	(sprintf@prec+1)& (0+255),b
  5934  000A5A                     l6507:
  5935                           
  5936                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5937  000A5A  0101               	movlb	1	; () banked
  5938  000A5C  5117               	movf	sprintf@width& (0+255),w,b
  5939  000A5E  1118               	iorwf	(sprintf@width+1)& (0+255),w,b
  5940  000A60  B4D8               	btfsc	status,2,c
  5941  000A62  D00B               	goto	l6513
  5942                           
  5943                           ; BSR set to: 1
  5944  000A64  C112  F0E4         	movff	sprintf@flag,??_sprintf
  5945  000A68  0E03               	movlw	3
  5946  000A6A  0100               	movlb	0	; () banked
  5947  000A6C  17E4               	andwf	??_sprintf& (0+255),f,b
  5948  000A6E  B4D8               	btfsc	status,2,c
  5949  000A70  D004               	goto	l6513
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;doprnt.c: 1372: width--;
  5953  000A72  0101               	movlb	1	; () banked
  5954  000A74  0717               	decf	sprintf@width& (0+255),f,b
  5955  000A76  A0D8               	btfss	status,0,c
  5956  000A78  0718               	decf	(sprintf@width+1)& (0+255),f,b
  5957  000A7A                     l6513:
  5958                           
  5959                           ;doprnt.c: 1374: if(flag & 0x4000) {
  5960  000A7A  0101               	movlb	1	; () banked
  5961  000A7C  AD13               	btfss	(sprintf@flag+1)& (0+255),6,b
  5962  000A7E  D018               	goto	l6521
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;doprnt.c: 1375: if(width > prec)
  5966  000A80  5117               	movf	sprintf@width& (0+255),w,b
  5967  000A82  5D19               	subwf	sprintf@prec& (0+255),w,b
  5968  000A84  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5969  000A86  0A80               	xorlw	128
  5970  000A88  0100               	movlb	0	; () banked
  5971  000A8A  6FE4               	movwf	??_sprintf& (0+255),b
  5972  000A8C  0101               	movlb	1	; () banked
  5973  000A8E  5118               	movf	(sprintf@width+1)& (0+255),w,b
  5974  000A90  0A80               	xorlw	128
  5975  000A92  0100               	movlb	0	; () banked
  5976  000A94  59E4               	subwfb	??_sprintf& (0+255),w,b
  5977  000A96  B0D8               	btfsc	status,0,c
  5978  000A98  D006               	goto	l6519
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;doprnt.c: 1376: width -= prec;
  5982  000A9A  0101               	movlb	1	; () banked
  5983  000A9C  5119               	movf	sprintf@prec& (0+255),w,b
  5984  000A9E  5F17               	subwf	sprintf@width& (0+255),f,b
  5985  000AA0  511A               	movf	(sprintf@prec+1)& (0+255),w,b
  5986  000AA2  5B18               	subwfb	(sprintf@width+1)& (0+255),f,b
  5987  000AA4  D005               	goto	l6521
  5988  000AA6                     l6519:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  5992  000AA6  0E00               	movlw	0
  5993  000AA8  0101               	movlb	1	; () banked
  5994  000AAA  6F18               	movwf	(sprintf@width+1)& (0+255),b
  5995  000AAC  0E00               	movlw	0
  5996  000AAE  6F17               	movwf	sprintf@width& (0+255),b
  5997  000AB0                     l6521:
  5998                           
  5999                           ; BSR set to: 1
  6000                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  6001  000AB0  511B               	movf	sprintf@c& (0+255),w,b
  6002  000AB2  0100               	movlb	0	; () banked
  6003  000AB4  6FE4               	movwf	??_sprintf& (0+255),b
  6004  000AB6  6BE5               	clrf	(??_sprintf+1)& (0+255),b
  6005  000AB8  0101               	movlb	1	; () banked
  6006  000ABA  5117               	movf	sprintf@width& (0+255),w,b
  6007  000ABC  0100               	movlb	0	; () banked
  6008  000ABE  5DE4               	subwf	??_sprintf& (0+255),w,b
  6009  000AC0  51E5               	movf	(??_sprintf+1)& (0+255),w,b
  6010  000AC2  0A80               	xorlw	128
  6011  000AC4  6FE6               	movwf	(??_sprintf+2)& (0+255),b
  6012  000AC6  0101               	movlb	1	; () banked
  6013  000AC8  5118               	movf	(sprintf@width+1)& (0+255),w,b
  6014  000ACA  0A80               	xorlw	128
  6015  000ACC  0100               	movlb	0	; () banked
  6016  000ACE  59E6               	subwfb	(??_sprintf+2)& (0+255),w,b
  6017  000AD0  B0D8               	btfsc	status,0,c
  6018  000AD2  D006               	goto	l6525
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;doprnt.c: 1408: width -= c;
  6022  000AD4  0101               	movlb	1	; () banked
  6023  000AD6  511B               	movf	sprintf@c& (0+255),w,b
  6024  000AD8  5F17               	subwf	sprintf@width& (0+255),f,b
  6025  000ADA  0E00               	movlw	0
  6026  000ADC  5B18               	subwfb	(sprintf@width+1)& (0+255),f,b
  6027  000ADE  D005               	goto	l6527
  6028  000AE0                     l6525:
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6032  000AE0  0E00               	movlw	0
  6033  000AE2  0101               	movlb	1	; () banked
  6034  000AE4  6F18               	movwf	(sprintf@width+1)& (0+255),b
  6035  000AE6  0E00               	movlw	0
  6036  000AE8  6F17               	movwf	sprintf@width& (0+255),b
  6037  000AEA                     l6527:
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;doprnt.c: 1413: if(flag & 0x04) {
  6041  000AEA  A512               	btfss	sprintf@flag& (0+255),2,b
  6042  000AEC  D022               	goto	l6543
  6043                           
  6044                           ; BSR set to: 1
  6045                           ;doprnt.c: 1418: if(flag & 0x03)
  6046  000AEE  C112  F0E4         	movff	sprintf@flag,??_sprintf
  6047  000AF2  0E03               	movlw	3
  6048  000AF4  0100               	movlb	0	; () banked
  6049  000AF6  17E4               	andwf	??_sprintf& (0+255),f,b
  6050  000AF8  B4D8               	btfsc	status,2,c
  6051  000AFA  D008               	goto	l6535
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  6055  000AFC  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6056  000B00  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6057  000B04  0E2D               	movlw	45
  6058  000B06  6EDF               	movwf	indf2,c
  6059                           
  6060                           ; BSR set to: 0
  6061  000B08  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  6062  000B0A  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  6063  000B0C                     l6535:
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;doprnt.c: 1441: if(width)
  6067  000B0C  0101               	movlb	1	; () banked
  6068  000B0E  5117               	movf	sprintf@width& (0+255),w,b
  6069  000B10  1118               	iorwf	(sprintf@width+1)& (0+255),w,b
  6070  000B12  B4D8               	btfsc	status,2,c
  6071  000B14  D077               	goto	l6563
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  6075  000B16  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6076  000B1A  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6077  000B1E  0E30               	movlw	48
  6078  000B20  6EDF               	movwf	indf2,c
  6079                           
  6080                           ; BSR set to: 1
  6081  000B22  0100               	movlb	0	; () banked
  6082  000B24  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  6083  000B26  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;doprnt.c: 1444: while(--width);
  6087  000B28  0101               	movlb	1	; () banked
  6088  000B2A  0717               	decf	sprintf@width& (0+255),f,b
  6089  000B2C  A0D8               	btfss	status,0,c
  6090  000B2E  0718               	decf	(sprintf@width+1)& (0+255),f,b
  6091  000B30  D7EE               	goto	L17
  6092  000B32                     l6543:
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6096  000B32  5117               	movf	sprintf@width& (0+255),w,b
  6097  000B34  1118               	iorwf	(sprintf@width+1)& (0+255),w,b
  6098  000B36  B4D8               	btfsc	status,2,c
  6099  000B38  D011               	goto	u7770
  6100  000B3A                     u7760:
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6104  000B3A  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6105  000B3E  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6106  000B42  0E20               	movlw	32
  6107  000B44  6EDF               	movwf	indf2,c
  6108                           
  6109                           ; BSR set to: 1
  6110  000B46  0100               	movlb	0	; () banked
  6111  000B48  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  6112  000B4A  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;doprnt.c: 1457: while(--width);
  6116  000B4C  0101               	movlb	1	; () banked
  6117  000B4E  0717               	decf	sprintf@width& (0+255),f,b
  6118  000B50  A0D8               	btfss	status,0,c
  6119  000B52  0718               	decf	(sprintf@width+1)& (0+255),f,b
  6120  000B54  5117               	movf	sprintf@width& (0+255),w,b
  6121  000B56  1118               	iorwf	(sprintf@width+1)& (0+255),w,b
  6122  000B58  A4D8               	btfss	status,2,c
  6123  000B5A  D7EF               	goto	u7760
  6124  000B5C                     u7770:
  6125                           
  6126                           ; BSR set to: 1
  6127                           ;doprnt.c: 1464: if(flag & 0x03)
  6128  000B5C  C112  F0E4         	movff	sprintf@flag,??_sprintf
  6129  000B60  0E03               	movlw	3
  6130  000B62  0100               	movlb	0	; () banked
  6131  000B64  17E4               	andwf	??_sprintf& (0+255),f,b
  6132  000B66  B4D8               	btfsc	status,2,c
  6133  000B68  D04D               	goto	l6563
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6137  000B6A  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6138  000B6E  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6139  000B72  0E2D               	movlw	45
  6140  000B74  6EDF               	movwf	indf2,c
  6141  000B76  D044               	goto	L13
  6142  000B78                     l6557:
  6143                           
  6144                           ; BSR set to: 1
  6145                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  6146  000B78  C119  F0E4         	movff	sprintf@prec,??_sprintf
  6147  000B7C  C11A  F0E5         	movff	sprintf@prec+1,??_sprintf+1
  6148  000B80  0100               	movlb	0	; () banked
  6149  000B82  90D8               	bcf	status,0,c
  6150  000B84  37E4               	rlcf	??_sprintf& (0+255),f,b
  6151  000B86  37E5               	rlcf	(??_sprintf+1)& (0+255),f,b
  6152  000B88  90D8               	bcf	status,0,c
  6153  000B8A  37E4               	rlcf	??_sprintf& (0+255),f,b
  6154  000B8C  37E5               	rlcf	(??_sprintf+1)& (0+255),f,b
  6155  000B8E  0EB7               	movlw	low _dpowers
  6156  000B90  25E4               	addwf	??_sprintf& (0+255),w,b
  6157  000B92  6EF6               	movwf	tblptrl,c
  6158  000B94  0EFE               	movlw	high _dpowers
  6159  000B96  21E5               	addwfc	(??_sprintf+1)& (0+255),w,b
  6160  000B98  6EF7               	movwf	tblptrh,c
  6161  000B9A                     	if	0	;There are less than 3 active tblptr bytes
  6162  000B9A                     	endif
  6163  000B9A  0009               	tblrd		*+
  6164  000B9C  CFF5 F084          	movff	tablat,___lldiv@divisor
  6165  000BA0  0009               	tblrd		*+
  6166  000BA2  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  6167  000BA6  0009               	tblrd		*+
  6168  000BA8  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  6169  000BAC  000A               	tblrd		*-
  6170  000BAE  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  6171  000BB2  C10C  F080         	movff	sprintf@val,___lldiv@dividend
  6172  000BB6  C10D  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  6173  000BBA  C10E  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  6174  000BBE  C10F  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  6175  000BC2  EC1C  F016         	call	___lldiv	;wreg free
  6176  000BC6  C080  F08D         	movff	?___lldiv,___llmod@dividend
  6177  000BCA  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  6178  000BCE  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  6179  000BD2  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  6180  000BD6  0E0A               	movlw	10
  6181  000BD8  6F91               	movwf	___llmod@divisor& (0+255),b
  6182  000BDA  0E00               	movlw	0
  6183  000BDC  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  6184  000BDE  0E00               	movlw	0
  6185  000BE0  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  6186  000BE2  0E00               	movlw	0
  6187  000BE4  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  6188  000BE6  EC3F  F017         	call	___llmod	;wreg free
  6189  000BEA  518D               	movf	?___llmod& (0+255),w,b
  6190  000BEC  0F30               	addlw	48
  6191  000BEE  0101               	movlb	1	; () banked
  6192  000BF0  6F1B               	movwf	sprintf@c& (0+255),b
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6196  000BF2  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6197  000BF6  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6198  000BFA  C11B  FFDF         	movff	sprintf@c,indf2
  6199                           
  6200                           ; BSR set to: 1
  6201  000BFE  0100               	movlb	0	; () banked
  6202  000C00                     L13:
  6203  000C00  4BD9               	infsnz	sprintf@sp& (0+255),f,b
  6204  000C02  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
  6205  000C04                     l6563:
  6206  000C04  0101               	movlb	1	; () banked
  6207  000C06  0719               	decf	sprintf@prec& (0+255),f,b
  6208  000C08  A0D8               	btfss	status,0,c
  6209  000C0A  071A               	decf	(sprintf@prec+1)& (0+255),f,b
  6210  000C0C  2919               	incf	sprintf@prec& (0+255),w,b
  6211  000C0E  E1B4               	bnz	l6557
  6212  000C10  291A               	incf	(sprintf@prec+1)& (0+255),w,b
  6213  000C12  A4D8               	btfss	status,2,c
  6214  000C14  D7B1               	goto	l6557
  6215  000C16                     u7790:
  6216  000C16  C0DB  FFF6         	movff	sprintf@f,tblptrl
  6217  000C1A  C0DC  FFF7         	movff	sprintf@f+1,tblptrh
  6218  000C1E  0100               	movlb	0	; () banked
  6219  000C20  4BDB               	infsnz	sprintf@f& (0+255),f,b
  6220  000C22  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
  6221  000C24                     	if	0	;tblptru may be non-zero
  6222  000C24                     	endif
  6223  000C24                     	if	0	;tblptru may be non-zero
  6224  000C24                     	endif
  6225  000C24  0008               	tblrd		*
  6226  000C26  CFF5 F11B          	movff	tablat,sprintf@c
  6227  000C2A  0101               	movlb	1	; () banked
  6228  000C2C  511B               	movf	sprintf@c& (0+255),w,b
  6229  000C2E  A4D8               	btfss	status,2,c
  6230  000C30  EF0E  F000         	goto	l6195
  6231  000C34                     u7800:
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;doprnt.c: 1564: *sp = 0;
  6235  000C34  C0D9  FFD9         	movff	sprintf@sp,fsr2l
  6236  000C38  C0DA  FFDA         	movff	sprintf@sp+1,fsr2h
  6237  000C3C  0E00               	movlw	0
  6238  000C3E  6EDF               	movwf	indf2,c
  6239                           
  6240                           ; BSR set to: 1
  6241  000C40  0012               	return		;funcret
  6242  000C42                     __end_of_sprintf:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _scale *****************
  6246 ;; Defined at:
  6247 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  scl             1    wreg     char 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  scl             1   57[BANK0 ] char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  3   51[BANK0 ] char 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 3F/1
  6258 ;;		On exit  : 3F/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:        7 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    6
  6268 ;; This function calls:
  6269 ;;		___awdiv
  6270 ;;		___awmod
  6271 ;;		___ftmul
  6272 ;; This function is called by:
  6273 ;;		_sprintf
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text17
  6278  0012D6                     __ptext17:
  6279                           	callstack 0
  6280  0012D6                     _scale:
  6281                           	callstack 23
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;incstack = 0
  6285                           ;scale@scl stored from wreg
  6286  0012D6  0100               	movlb	0	; () banked
  6287  0012D8  6FB9               	movwf	scale@scl& (0+255),b
  6288                           
  6289                           ;doprnt.c: 436: if(scl < 0) {
  6290  0012DA  0100               	movlb	0	; () banked
  6291  0012DC  AFB9               	btfss	scale@scl& (0+255),7,b
  6292  0012DE  D0D9               	goto	l5837
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;doprnt.c: 437: scl = -scl;
  6296  0012E0  6DB9               	negf	scale@scl& (0+255),b
  6297                           
  6298                           ;doprnt.c: 438: if(scl>=110)
  6299  0012E2  51B9               	movf	scale@scl& (0+255),w,b
  6300  0012E4  0A80               	xorlw	128
  6301  0012E6  0F12               	addlw	-238
  6302  0012E8  A0D8               	btfss	status,0,c
  6303  0012EA  D079               	goto	l5827
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6307  0012EC  0E00               	movlw	0
  6308  0012EE  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6309  0012F0  0E0A               	movlw	10
  6310  0012F2  6F88               	movwf	___awdiv@divisor& (0+255),b
  6311  0012F4  0E00               	movlw	0
  6312  0012F6  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6313  0012F8  0E64               	movlw	100
  6314  0012FA  6F82               	movwf	___awmod@divisor& (0+255),b
  6315  0012FC  51B9               	movf	scale@scl& (0+255),w,b
  6316  0012FE  6F80               	movwf	___awmod@dividend& (0+255),b
  6317  001300  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6318  001302  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6319  001304  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6320  001306  ECD2  F016         	call	___awmod	;wreg free
  6321  00130A  C080  F086         	movff	?___awmod,___awdiv@dividend
  6322  00130E  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  6323  001312  ECDA  F015         	call	___awdiv	;wreg free
  6324  001316  0E09               	movlw	9
  6325  001318  2786               	addwf	?___awdiv& (0+255),f,b
  6326  00131A  5186               	movf	?___awdiv& (0+255),w,b
  6327  00131C  0D03               	mullw	3
  6328  00131E  0E90               	movlw	low __npowers_
  6329  001320  24F3               	addwf	243,w,c
  6330  001322  6EF6               	movwf	tblptrl,c
  6331  001324  0EFE               	movlw	high __npowers_
  6332  001326  20F4               	addwfc	244,w,c
  6333  001328  6EF7               	movwf	tblptrh,c
  6334  00132A                     	if	0	;There are less than 3 active tblptr bytes
  6335  00132A                     	endif
  6336  00132A  0009               	tblrd		*+
  6337  00132C  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6338  001330  0009               	tblrd		*+
  6339  001332  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6340  001336  000A               	tblrd		*-
  6341  001338  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6342  00133C  0E00               	movlw	0
  6343  00133E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6344  001340  0E64               	movlw	100
  6345  001342  6F88               	movwf	___awdiv@divisor& (0+255),b
  6346  001344  51B9               	movf	scale@scl& (0+255),w,b
  6347  001346  6F86               	movwf	___awdiv@dividend& (0+255),b
  6348  001348  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6349  00134A  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6350  00134C  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6351  00134E  ECDA  F015         	call	___awdiv	;wreg free
  6352  001352  0E12               	movlw	18
  6353  001354  2786               	addwf	?___awdiv& (0+255),f,b
  6354  001356  5186               	movf	?___awdiv& (0+255),w,b
  6355  001358  0D03               	mullw	3
  6356  00135A  0E90               	movlw	low __npowers_
  6357  00135C  24F3               	addwf	243,w,c
  6358  00135E  6EF6               	movwf	tblptrl,c
  6359  001360  0EFE               	movlw	high __npowers_
  6360  001362  20F4               	addwfc	244,w,c
  6361  001364  6EF7               	movwf	tblptrh,c
  6362  001366                     	if	0	;There are less than 3 active tblptr bytes
  6363  001366                     	endif
  6364  001366  0009               	tblrd		*+
  6365  001368  CFF5 F0A4          	movff	tablat,___ftmul@f1
  6366  00136C  0009               	tblrd		*+
  6367  00136E  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  6368  001372  000A               	tblrd		*-
  6369  001374  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  6370  001378  ECE6  F011         	call	___ftmul	;wreg free
  6371  00137C  C0A4  F0B6         	movff	?___ftmul,_scale$2119
  6372  001380  C0A5  F0B7         	movff	?___ftmul+1,_scale$2119+1
  6373  001384  C0A6  F0B8         	movff	?___ftmul+2,_scale$2119+2
  6374                           
  6375                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6376  001388  C0B6  F0A4         	movff	_scale$2119,___ftmul@f1
  6377  00138C  C0B7  F0A5         	movff	_scale$2119+1,___ftmul@f1+1
  6378  001390  C0B8  F0A6         	movff	_scale$2119+2,___ftmul@f1+2
  6379  001394  0E00               	movlw	0
  6380  001396  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6381  001398  0E0A               	movlw	10
  6382  00139A  6F82               	movwf	___awmod@divisor& (0+255),b
  6383  00139C  51B9               	movf	scale@scl& (0+255),w,b
  6384  00139E  6F80               	movwf	___awmod@dividend& (0+255),b
  6385  0013A0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6386  0013A2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6387  0013A4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6388  0013A6  ECD2  F016         	call	___awmod	;wreg free
  6389  0013AA  5180               	movf	?___awmod& (0+255),w,b
  6390  0013AC  0D03               	mullw	3
  6391  0013AE  0E90               	movlw	low __npowers_
  6392  0013B0  24F3               	addwf	243,w,c
  6393  0013B2  6EF6               	movwf	tblptrl,c
  6394  0013B4  0EFE               	movlw	high __npowers_
  6395  0013B6  20F4               	addwfc	244,w,c
  6396  0013B8  6EF7               	movwf	tblptrh,c
  6397  0013BA                     	if	0	;There are less than 3 active tblptr bytes
  6398  0013BA                     	endif
  6399  0013BA  0009               	tblrd		*+
  6400  0013BC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6401  0013C0  0009               	tblrd		*+
  6402  0013C2  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6403  0013C6  000A               	tblrd		*-
  6404  0013C8  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6405  0013CC  ECE6  F011         	call	___ftmul	;wreg free
  6406  0013D0  C0A4  F0B3         	movff	?___ftmul,?_scale
  6407  0013D4  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  6408  0013D8  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  6409  0013DC  0012               	return	
  6410  0013DE                     l5827:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;doprnt.c: 440: else if(scl > 10)
  6414  0013DE  51B9               	movf	scale@scl& (0+255),w,b
  6415  0013E0  0A80               	xorlw	128
  6416  0013E2  0F75               	addlw	-139
  6417  0013E4  A0D8               	btfss	status,0,c
  6418  0013E6  D043               	goto	l5833
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6422  0013E8  0E00               	movlw	0
  6423  0013EA  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6424  0013EC  0E0A               	movlw	10
  6425  0013EE  6F88               	movwf	___awdiv@divisor& (0+255),b
  6426  0013F0  51B9               	movf	scale@scl& (0+255),w,b
  6427  0013F2  6F86               	movwf	___awdiv@dividend& (0+255),b
  6428  0013F4  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6429  0013F6  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6430  0013F8  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6431  0013FA  ECDA  F015         	call	___awdiv	;wreg free
  6432  0013FE  0E09               	movlw	9
  6433  001400  2786               	addwf	?___awdiv& (0+255),f,b
  6434  001402  5186               	movf	?___awdiv& (0+255),w,b
  6435  001404  0D03               	mullw	3
  6436  001406  0E90               	movlw	low __npowers_
  6437  001408  24F3               	addwf	243,w,c
  6438  00140A  6EF6               	movwf	tblptrl,c
  6439  00140C  0EFE               	movlw	high __npowers_
  6440  00140E  20F4               	addwfc	244,w,c
  6441  001410  6EF7               	movwf	tblptrh,c
  6442  001412                     	if	0	;There are less than 3 active tblptr bytes
  6443  001412                     	endif
  6444  001412  0009               	tblrd		*+
  6445  001414  CFF5 F0A4          	movff	tablat,___ftmul@f1
  6446  001418  0009               	tblrd		*+
  6447  00141A  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  6448  00141E  000A               	tblrd		*-
  6449  001420  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  6450  001424  0E00               	movlw	0
  6451  001426  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6452  001428  0E0A               	movlw	10
  6453  00142A  6F82               	movwf	___awmod@divisor& (0+255),b
  6454  00142C  51B9               	movf	scale@scl& (0+255),w,b
  6455  00142E  6F80               	movwf	___awmod@dividend& (0+255),b
  6456  001430  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6457  001432  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6458  001434  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6459  001436  ECD2  F016         	call	___awmod	;wreg free
  6460  00143A  5180               	movf	?___awmod& (0+255),w,b
  6461  00143C  0D03               	mullw	3
  6462  00143E  0E90               	movlw	low __npowers_
  6463  001440  24F3               	addwf	243,w,c
  6464  001442  6EF6               	movwf	tblptrl,c
  6465  001444  0EFE               	movlw	high __npowers_
  6466  001446  20F4               	addwfc	244,w,c
  6467  001448  6EF7               	movwf	tblptrh,c
  6468  00144A                     	if	0	;There are less than 3 active tblptr bytes
  6469  00144A                     	endif
  6470  00144A  0009               	tblrd		*+
  6471  00144C  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6472  001450  0009               	tblrd		*+
  6473  001452  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6474  001456  000A               	tblrd		*-
  6475  001458  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6476  00145C  ECE6  F011         	call	___ftmul	;wreg free
  6477  001460  C0A4  F0B3         	movff	?___ftmul,?_scale
  6478  001464  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  6479  001468  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  6480  00146C  0012               	return	
  6481  00146E                     l5833:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6485  00146E  51B9               	movf	scale@scl& (0+255),w,b
  6486  001470  0D03               	mullw	3
  6487  001472  0E90               	movlw	low __npowers_
  6488  001474  24F3               	addwf	243,w,c
  6489  001476  6EF6               	movwf	tblptrl,c
  6490  001478  0EFE               	movlw	high __npowers_
  6491  00147A  20F4               	addwfc	244,w,c
  6492  00147C  6EF7               	movwf	tblptrh,c
  6493  00147E                     	if	0	;There are less than 3 active tblptr bytes
  6494  00147E                     	endif
  6495  00147E  0009               	tblrd		*+
  6496  001480  CFF5 F0B3          	movff	tablat,?_scale
  6497  001484  0009               	tblrd		*+
  6498  001486  CFF5 F0B4          	movff	tablat,?_scale+1
  6499  00148A  000A               	tblrd		*-
  6500  00148C  CFF5 F0B5          	movff	tablat,?_scale+2
  6501  001490  0012               	return	
  6502  001492                     l5837:
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6506  001492  51B9               	movf	scale@scl& (0+255),w,b
  6507  001494  0A80               	xorlw	128
  6508  001496  0F12               	addlw	-238
  6509  001498  A0D8               	btfss	status,0,c
  6510  00149A  D079               	goto	l5845
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6514  00149C  0E00               	movlw	0
  6515  00149E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6516  0014A0  0E0A               	movlw	10
  6517  0014A2  6F88               	movwf	___awdiv@divisor& (0+255),b
  6518  0014A4  0E00               	movlw	0
  6519  0014A6  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6520  0014A8  0E64               	movlw	100
  6521  0014AA  6F82               	movwf	___awmod@divisor& (0+255),b
  6522  0014AC  51B9               	movf	scale@scl& (0+255),w,b
  6523  0014AE  6F80               	movwf	___awmod@dividend& (0+255),b
  6524  0014B0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6525  0014B2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6526  0014B4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6527  0014B6  ECD2  F016         	call	___awmod	;wreg free
  6528  0014BA  C080  F086         	movff	?___awmod,___awdiv@dividend
  6529  0014BE  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  6530  0014C2  ECDA  F015         	call	___awdiv	;wreg free
  6531  0014C6  0E09               	movlw	9
  6532  0014C8  2786               	addwf	?___awdiv& (0+255),f,b
  6533  0014CA  5186               	movf	?___awdiv& (0+255),w,b
  6534  0014CC  0D03               	mullw	3
  6535  0014CE  0E69               	movlw	low __powers_
  6536  0014D0  24F3               	addwf	243,w,c
  6537  0014D2  6EF6               	movwf	tblptrl,c
  6538  0014D4  0EFE               	movlw	high __powers_
  6539  0014D6  20F4               	addwfc	244,w,c
  6540  0014D8  6EF7               	movwf	tblptrh,c
  6541  0014DA                     	if	0	;There are less than 3 active tblptr bytes
  6542  0014DA                     	endif
  6543  0014DA  0009               	tblrd		*+
  6544  0014DC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6545  0014E0  0009               	tblrd		*+
  6546  0014E2  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6547  0014E6  000A               	tblrd		*-
  6548  0014E8  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6549  0014EC  0E00               	movlw	0
  6550  0014EE  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6551  0014F0  0E64               	movlw	100
  6552  0014F2  6F88               	movwf	___awdiv@divisor& (0+255),b
  6553  0014F4  51B9               	movf	scale@scl& (0+255),w,b
  6554  0014F6  6F86               	movwf	___awdiv@dividend& (0+255),b
  6555  0014F8  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6556  0014FA  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6557  0014FC  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6558  0014FE  ECDA  F015         	call	___awdiv	;wreg free
  6559  001502  0E12               	movlw	18
  6560  001504  2786               	addwf	?___awdiv& (0+255),f,b
  6561  001506  5186               	movf	?___awdiv& (0+255),w,b
  6562  001508  0D03               	mullw	3
  6563  00150A  0E69               	movlw	low __powers_
  6564  00150C  24F3               	addwf	243,w,c
  6565  00150E  6EF6               	movwf	tblptrl,c
  6566  001510  0EFE               	movlw	high __powers_
  6567  001512  20F4               	addwfc	244,w,c
  6568  001514  6EF7               	movwf	tblptrh,c
  6569  001516                     	if	0	;There are less than 3 active tblptr bytes
  6570  001516                     	endif
  6571  001516  0009               	tblrd		*+
  6572  001518  CFF5 F0A4          	movff	tablat,___ftmul@f1
  6573  00151C  0009               	tblrd		*+
  6574  00151E  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  6575  001522  000A               	tblrd		*-
  6576  001524  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  6577  001528  ECE6  F011         	call	___ftmul	;wreg free
  6578  00152C  C0A4  F0B6         	movff	?___ftmul,_scale$2119
  6579  001530  C0A5  F0B7         	movff	?___ftmul+1,_scale$2119+1
  6580  001534  C0A6  F0B8         	movff	?___ftmul+2,_scale$2119+2
  6581                           
  6582                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6583  001538  C0B6  F0A4         	movff	_scale$2119,___ftmul@f1
  6584  00153C  C0B7  F0A5         	movff	_scale$2119+1,___ftmul@f1+1
  6585  001540  C0B8  F0A6         	movff	_scale$2119+2,___ftmul@f1+2
  6586  001544  0E00               	movlw	0
  6587  001546  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6588  001548  0E0A               	movlw	10
  6589  00154A  6F82               	movwf	___awmod@divisor& (0+255),b
  6590  00154C  51B9               	movf	scale@scl& (0+255),w,b
  6591  00154E  6F80               	movwf	___awmod@dividend& (0+255),b
  6592  001550  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6593  001552  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6594  001554  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6595  001556  ECD2  F016         	call	___awmod	;wreg free
  6596  00155A  5180               	movf	?___awmod& (0+255),w,b
  6597  00155C  0D03               	mullw	3
  6598  00155E  0E69               	movlw	low __powers_
  6599  001560  24F3               	addwf	243,w,c
  6600  001562  6EF6               	movwf	tblptrl,c
  6601  001564  0EFE               	movlw	high __powers_
  6602  001566  20F4               	addwfc	244,w,c
  6603  001568  6EF7               	movwf	tblptrh,c
  6604  00156A                     	if	0	;There are less than 3 active tblptr bytes
  6605  00156A                     	endif
  6606  00156A  0009               	tblrd		*+
  6607  00156C  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6608  001570  0009               	tblrd		*+
  6609  001572  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6610  001576  000A               	tblrd		*-
  6611  001578  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6612  00157C  ECE6  F011         	call	___ftmul	;wreg free
  6613  001580  C0A4  F0B3         	movff	?___ftmul,?_scale
  6614  001584  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  6615  001588  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  6616  00158C  0012               	return	
  6617  00158E                     l5845:
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;doprnt.c: 446: else if(scl > 10)
  6621  00158E  51B9               	movf	scale@scl& (0+255),w,b
  6622  001590  0A80               	xorlw	128
  6623  001592  0F75               	addlw	-139
  6624  001594  A0D8               	btfss	status,0,c
  6625  001596  D043               	goto	l5851
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6629  001598  0E00               	movlw	0
  6630  00159A  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6631  00159C  0E0A               	movlw	10
  6632  00159E  6F88               	movwf	___awdiv@divisor& (0+255),b
  6633  0015A0  51B9               	movf	scale@scl& (0+255),w,b
  6634  0015A2  6F86               	movwf	___awdiv@dividend& (0+255),b
  6635  0015A4  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6636  0015A6  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6637  0015A8  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6638  0015AA  ECDA  F015         	call	___awdiv	;wreg free
  6639  0015AE  0E09               	movlw	9
  6640  0015B0  2786               	addwf	?___awdiv& (0+255),f,b
  6641  0015B2  5186               	movf	?___awdiv& (0+255),w,b
  6642  0015B4  0D03               	mullw	3
  6643  0015B6  0E69               	movlw	low __powers_
  6644  0015B8  24F3               	addwf	243,w,c
  6645  0015BA  6EF6               	movwf	tblptrl,c
  6646  0015BC  0EFE               	movlw	high __powers_
  6647  0015BE  20F4               	addwfc	244,w,c
  6648  0015C0  6EF7               	movwf	tblptrh,c
  6649  0015C2                     	if	0	;There are less than 3 active tblptr bytes
  6650  0015C2                     	endif
  6651  0015C2  0009               	tblrd		*+
  6652  0015C4  CFF5 F0A4          	movff	tablat,___ftmul@f1
  6653  0015C8  0009               	tblrd		*+
  6654  0015CA  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  6655  0015CE  000A               	tblrd		*-
  6656  0015D0  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  6657  0015D4  0E00               	movlw	0
  6658  0015D6  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6659  0015D8  0E0A               	movlw	10
  6660  0015DA  6F82               	movwf	___awmod@divisor& (0+255),b
  6661  0015DC  51B9               	movf	scale@scl& (0+255),w,b
  6662  0015DE  6F80               	movwf	___awmod@dividend& (0+255),b
  6663  0015E0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6664  0015E2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6665  0015E4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6666  0015E6  ECD2  F016         	call	___awmod	;wreg free
  6667  0015EA  5180               	movf	?___awmod& (0+255),w,b
  6668  0015EC  0D03               	mullw	3
  6669  0015EE  0E69               	movlw	low __powers_
  6670  0015F0  24F3               	addwf	243,w,c
  6671  0015F2  6EF6               	movwf	tblptrl,c
  6672  0015F4  0EFE               	movlw	high __powers_
  6673  0015F6  20F4               	addwfc	244,w,c
  6674  0015F8  6EF7               	movwf	tblptrh,c
  6675  0015FA                     	if	0	;There are less than 3 active tblptr bytes
  6676  0015FA                     	endif
  6677  0015FA  0009               	tblrd		*+
  6678  0015FC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  6679  001600  0009               	tblrd		*+
  6680  001602  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  6681  001606  000A               	tblrd		*-
  6682  001608  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  6683  00160C  ECE6  F011         	call	___ftmul	;wreg free
  6684  001610  C0A4  F0B3         	movff	?___ftmul,?_scale
  6685  001614  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  6686  001618  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  6687  00161C  0012               	return	
  6688  00161E                     l5851:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6692  00161E  51B9               	movf	scale@scl& (0+255),w,b
  6693  001620  0D03               	mullw	3
  6694  001622  0E69               	movlw	low __powers_
  6695  001624  24F3               	addwf	243,w,c
  6696  001626  6EF6               	movwf	tblptrl,c
  6697  001628  0EFE               	movlw	high __powers_
  6698  00162A  20F4               	addwfc	244,w,c
  6699  00162C  6EF7               	movwf	tblptrh,c
  6700  00162E                     	if	0	;There are less than 3 active tblptr bytes
  6701  00162E                     	endif
  6702  00162E  0009               	tblrd		*+
  6703  001630  CFF5 F0B3          	movff	tablat,?_scale
  6704  001634  0009               	tblrd		*+
  6705  001636  CFF5 F0B4          	movff	tablat,?_scale+1
  6706  00163A  000A               	tblrd		*-
  6707  00163C  CFF5 F0B5          	movff	tablat,?_scale+2
  6708                           
  6709                           ; BSR set to: 0
  6710  001640  0012               	return		;funcret
  6711  001642                     __end_of_scale:
  6712                           	callstack 0
  6713                           
  6714 ;; *************** function ___awmod *****************
  6715 ;; Defined at:
  6716 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  dividend        2    0[BANK0 ] int 
  6719 ;;  divisor         2    2[BANK0 ] int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  sign            1    5[BANK0 ] unsigned char 
  6722 ;;  counter         1    4[BANK0 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  2    0[BANK0 ] int 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 3F/0
  6729 ;;		On exit  : 3F/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6732 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;Total ram usage:        6 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    4
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_scale
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text18
  6747  002DA4                     __ptext18:
  6748                           	callstack 0
  6749  002DA4                     ___awmod:
  6750                           	callstack 24
  6751                           
  6752                           ; BSR set to: 0
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;incstack = 0
  6756  002DA4  0E00               	movlw	0
  6757  002DA6  6F85               	movwf	___awmod@sign& (0+255),b
  6758                           
  6759                           ; BSR set to: 0
  6760  002DA8  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6761  002DAA  D006               	goto	l5713
  6762                           
  6763                           ; BSR set to: 0
  6764  002DAC  6D80               	negf	___awmod@dividend& (0+255),b
  6765  002DAE  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  6766  002DB0  B0D8               	btfsc	status,0,c
  6767  002DB2  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  6768                           
  6769                           ; BSR set to: 0
  6770  002DB4  0E01               	movlw	1
  6771  002DB6  6F85               	movwf	___awmod@sign& (0+255),b
  6772  002DB8                     l5713:
  6773                           
  6774                           ; BSR set to: 0
  6775  002DB8  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6776  002DBA  D004               	goto	l5717
  6777                           
  6778                           ; BSR set to: 0
  6779  002DBC  6D82               	negf	___awmod@divisor& (0+255),b
  6780  002DBE  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  6781  002DC0  B0D8               	btfsc	status,0,c
  6782  002DC2  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  6783  002DC4                     l5717:
  6784                           
  6785                           ; BSR set to: 0
  6786  002DC4  5182               	movf	___awmod@divisor& (0+255),w,b
  6787  002DC6  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6788  002DC8  B4D8               	btfsc	status,2,c
  6789  002DCA  D018               	goto	l5733
  6790                           
  6791                           ; BSR set to: 0
  6792  002DCC  0E01               	movlw	1
  6793  002DCE  6F84               	movwf	___awmod@counter& (0+255),b
  6794  002DD0  D004               	goto	l5723
  6795  002DD2                     l5721:
  6796                           
  6797                           ; BSR set to: 0
  6798  002DD2  90D8               	bcf	status,0,c
  6799  002DD4  3782               	rlcf	___awmod@divisor& (0+255),f,b
  6800  002DD6  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6801  002DD8  2B84               	incf	___awmod@counter& (0+255),f,b
  6802  002DDA                     l5723:
  6803                           
  6804                           ; BSR set to: 0
  6805  002DDA  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6806  002DDC  D7FA               	goto	l5721
  6807  002DDE                     u6550:
  6808                           
  6809                           ; BSR set to: 0
  6810  002DDE  5182               	movf	___awmod@divisor& (0+255),w,b
  6811  002DE0  5D80               	subwf	___awmod@dividend& (0+255),w,b
  6812  002DE2  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  6813  002DE4  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6814  002DE6  A0D8               	btfss	status,0,c
  6815  002DE8  D004               	goto	l5729
  6816                           
  6817                           ; BSR set to: 0
  6818  002DEA  5182               	movf	___awmod@divisor& (0+255),w,b
  6819  002DEC  5F80               	subwf	___awmod@dividend& (0+255),f,b
  6820  002DEE  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  6821  002DF0  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6822  002DF2                     l5729:
  6823                           
  6824                           ; BSR set to: 0
  6825  002DF2  90D8               	bcf	status,0,c
  6826  002DF4  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6827  002DF6  3382               	rrcf	___awmod@divisor& (0+255),f,b
  6828                           
  6829                           ; BSR set to: 0
  6830  002DF8  2F84               	decfsz	___awmod@counter& (0+255),f,b
  6831  002DFA  D7F1               	goto	u6550
  6832  002DFC                     l5733:
  6833                           
  6834                           ; BSR set to: 0
  6835  002DFC  5185               	movf	___awmod@sign& (0+255),w,b
  6836  002DFE  B4D8               	btfsc	status,2,c
  6837  002E00  D004               	goto	l5737
  6838                           
  6839                           ; BSR set to: 0
  6840  002E02  6D80               	negf	___awmod@dividend& (0+255),b
  6841  002E04  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  6842  002E06  B0D8               	btfsc	status,0,c
  6843  002E08  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  6844  002E0A                     l5737:
  6845                           
  6846                           ; BSR set to: 0
  6847  002E0A  C080  F080         	movff	___awmod@dividend,?___awmod
  6848  002E0E  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  6849                           
  6850                           ; BSR set to: 0
  6851  002E12  0012               	return		;funcret
  6852  002E14                     __end_of___awmod:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function ___awdiv *****************
  6856 ;; Defined at:
  6857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  dividend        2    6[BANK0 ] int 
  6860 ;;  divisor         2    8[BANK0 ] int 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  quotient        2   12[BANK0 ] int 
  6863 ;;  sign            1   11[BANK0 ] unsigned char 
  6864 ;;  counter         1   10[BANK0 ] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  2    6[BANK0 ] int 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 3F/0
  6871 ;;		On exit  : 3F/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;Total ram usage:        8 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    4
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_scale
  6885 ;;		_sprintf
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text19
  6890  002BB4                     __ptext19:
  6891                           	callstack 0
  6892  002BB4                     ___awdiv:
  6893                           	callstack 24
  6894                           
  6895                           ; BSR set to: 0
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;incstack = 0
  6899  002BB4  0E00               	movlw	0
  6900  002BB6  6F8B               	movwf	___awdiv@sign& (0+255),b
  6901                           
  6902                           ; BSR set to: 0
  6903  002BB8  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6904  002BBA  D006               	goto	l5669
  6905                           
  6906                           ; BSR set to: 0
  6907  002BBC  6D88               	negf	___awdiv@divisor& (0+255),b
  6908  002BBE  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6909  002BC0  B0D8               	btfsc	status,0,c
  6910  002BC2  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6911                           
  6912                           ; BSR set to: 0
  6913  002BC4  0E01               	movlw	1
  6914  002BC6  6F8B               	movwf	___awdiv@sign& (0+255),b
  6915  002BC8                     l5669:
  6916                           
  6917                           ; BSR set to: 0
  6918  002BC8  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6919  002BCA  D006               	goto	l5675
  6920                           
  6921                           ; BSR set to: 0
  6922  002BCC  6D86               	negf	___awdiv@dividend& (0+255),b
  6923  002BCE  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6924  002BD0  B0D8               	btfsc	status,0,c
  6925  002BD2  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6926                           
  6927                           ; BSR set to: 0
  6928  002BD4  0E01               	movlw	1
  6929  002BD6  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  6930  002BD8                     l5675:
  6931                           
  6932                           ; BSR set to: 0
  6933  002BD8  0E00               	movlw	0
  6934  002BDA  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6935  002BDC  0E00               	movlw	0
  6936  002BDE  6F8C               	movwf	___awdiv@quotient& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939  002BE0  5188               	movf	___awdiv@divisor& (0+255),w,b
  6940  002BE2  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6941  002BE4  B4D8               	btfsc	status,2,c
  6942  002BE6  D01C               	goto	l5697
  6943                           
  6944                           ; BSR set to: 0
  6945  002BE8  0E01               	movlw	1
  6946  002BEA  6F8A               	movwf	___awdiv@counter& (0+255),b
  6947  002BEC  D004               	goto	l5683
  6948  002BEE                     l5681:
  6949                           
  6950                           ; BSR set to: 0
  6951  002BEE  90D8               	bcf	status,0,c
  6952  002BF0  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  6953  002BF2  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6954  002BF4  2B8A               	incf	___awdiv@counter& (0+255),f,b
  6955  002BF6                     l5683:
  6956                           
  6957                           ; BSR set to: 0
  6958  002BF6  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6959  002BF8  D7FA               	goto	l5681
  6960  002BFA                     u6490:
  6961                           
  6962                           ; BSR set to: 0
  6963  002BFA  90D8               	bcf	status,0,c
  6964  002BFC  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  6965  002BFE  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6966                           
  6967                           ; BSR set to: 0
  6968  002C00  5188               	movf	___awdiv@divisor& (0+255),w,b
  6969  002C02  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  6970  002C04  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6971  002C06  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6972  002C08  A0D8               	btfss	status,0,c
  6973  002C0A  D005               	goto	l5693
  6974                           
  6975                           ; BSR set to: 0
  6976  002C0C  5188               	movf	___awdiv@divisor& (0+255),w,b
  6977  002C0E  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  6978  002C10  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6979  002C12  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6980                           
  6981                           ; BSR set to: 0
  6982  002C14  818C               	bsf	___awdiv@quotient& (0+255),0,b
  6983  002C16                     l5693:
  6984                           
  6985                           ; BSR set to: 0
  6986  002C16  90D8               	bcf	status,0,c
  6987  002C18  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6988  002C1A  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  6989                           
  6990                           ; BSR set to: 0
  6991  002C1C  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  6992  002C1E  D7ED               	goto	u6490
  6993  002C20                     l5697:
  6994                           
  6995                           ; BSR set to: 0
  6996  002C20  518B               	movf	___awdiv@sign& (0+255),w,b
  6997  002C22  B4D8               	btfsc	status,2,c
  6998  002C24  D004               	goto	l5701
  6999                           
  7000                           ; BSR set to: 0
  7001  002C26  6D8C               	negf	___awdiv@quotient& (0+255),b
  7002  002C28  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7003  002C2A  B0D8               	btfsc	status,0,c
  7004  002C2C  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7005  002C2E                     l5701:
  7006                           
  7007                           ; BSR set to: 0
  7008  002C2E  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  7009  002C32  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  7010                           
  7011                           ; BSR set to: 0
  7012  002C36  0012               	return		;funcret
  7013  002C38                     __end_of___awdiv:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function _isdigit *****************
  7017 ;; Defined at:
  7018 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  c               1    wreg     unsigned char 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  c               1    2[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;		None               void
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 3E/1
  7029 ;;		On exit  : 3F/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;Total ram usage:        3 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    4
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_sprintf
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text20
  7047  00345E                     __ptext20:
  7048                           	callstack 0
  7049  00345E                     _isdigit:
  7050                           	callstack 25
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;incstack = 0
  7054                           ;isdigit@c stored from wreg
  7055  00345E  0100               	movlb	0	; () banked
  7056  003460  6F82               	movwf	isdigit@c& (0+255),b
  7057  003462  0E00               	movlw	0
  7058  003464  0100               	movlb	0	; () banked
  7059  003466  6F81               	movwf	_isdigit$1870& (0+255),b
  7060                           
  7061                           ; BSR set to: 0
  7062  003468  0E3A               	movlw	58
  7063  00346A  6182               	cpfslt	isdigit@c& (0+255),b
  7064  00346C  D005               	goto	l5863
  7065                           
  7066                           ; BSR set to: 0
  7067  00346E  0E2F               	movlw	47
  7068  003470  6582               	cpfsgt	isdigit@c& (0+255),b
  7069  003472  D002               	goto	l5863
  7070                           
  7071                           ; BSR set to: 0
  7072  003474  0E01               	movlw	1
  7073  003476  6F81               	movwf	_isdigit$1870& (0+255),b
  7074  003478                     l5863:
  7075                           
  7076                           ; BSR set to: 0
  7077  003478  C081  F080         	movff	_isdigit$1870,??_isdigit
  7078  00347C  3180               	rrcf	??_isdigit& (0+255),w,b
  7079                           
  7080                           ; BSR set to: 0
  7081  00347E  0012               	return		;funcret
  7082  003480                     __end_of_isdigit:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _fround *****************
  7086 ;; Defined at:
  7087 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  prec            1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  prec            1   61[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  3   51[BANK0 ] unsigned char 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 3F/1
  7098 ;;		On exit  : 3F/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:       11 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    6
  7108 ;; This function calls:
  7109 ;;		___ftmul
  7110 ;;		___lbdiv
  7111 ;;		___lbmod
  7112 ;; This function is called by:
  7113 ;;		_sprintf
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text21
  7118  00185A                     __ptext21:
  7119                           	callstack 0
  7120  00185A                     _fround:
  7121                           	callstack 23
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;incstack = 0
  7125                           ;fround@prec stored from wreg
  7126  00185A  0100               	movlb	0	; () banked
  7127  00185C  6FBD               	movwf	fround@prec& (0+255),b
  7128                           
  7129                           ;doprnt.c: 421: if(prec>=110)
  7130  00185E  0E6D               	movlw	109
  7131  001860  0100               	movlb	0	; () banked
  7132  001862  65BD               	cpfsgt	fround@prec& (0+255),b
  7133  001864  D07C               	goto	l5807
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7137  001866  0E00               	movlw	0
  7138  001868  6FA7               	movwf	___ftmul@f2& (0+255),b
  7139  00186A  0E00               	movlw	0
  7140  00186C  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  7141  00186E  0E3F               	movlw	63
  7142  001870  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  7143  001872  0E64               	movlw	100
  7144  001874  6F84               	movwf	___lbdiv@divisor& (0+255),b
  7145  001876  51BD               	movf	fround@prec& (0+255),w,b
  7146  001878  EC25  F019         	call	___lbdiv
  7147  00187C  6FB6               	movwf	??_fround& (0+255),b
  7148  00187E  51B6               	movf	??_fround& (0+255),w,b
  7149  001880  0D03               	mullw	3
  7150  001882  0E36               	movlw	54
  7151  001884  26F3               	addwf	243,f,c
  7152  001886  0E00               	movlw	0
  7153  001888  22F4               	addwfc	244,f,c
  7154  00188A  0E90               	movlw	low __npowers_
  7155  00188C  24F3               	addwf	243,w,c
  7156  00188E  6EF6               	movwf	tblptrl,c
  7157  001890  0EFE               	movlw	high __npowers_
  7158  001892  20F4               	addwfc	244,w,c
  7159  001894  6EF7               	movwf	tblptrh,c
  7160  001896                     	if	0	;There are less than 3 active tblptr bytes
  7161  001896                     	endif
  7162  001896  0009               	tblrd		*+
  7163  001898  CFF5 F0A4          	movff	tablat,___ftmul@f1
  7164  00189C  0009               	tblrd		*+
  7165  00189E  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  7166  0018A2  000A               	tblrd		*-
  7167  0018A4  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  7168  0018A8  ECE6  F011         	call	___ftmul	;wreg free
  7169  0018AC  C0A4  F0BA         	movff	?___ftmul,_fround$2117
  7170  0018B0  C0A5  F0BB         	movff	?___ftmul+1,_fround$2117+1
  7171  0018B4  C0A6  F0BC         	movff	?___ftmul+2,_fround$2117+2
  7172                           
  7173                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7174  0018B8  0E0A               	movlw	10
  7175  0018BA  6F84               	movwf	___lbdiv@divisor& (0+255),b
  7176  0018BC  0E64               	movlw	100
  7177  0018BE  6F80               	movwf	___lbmod@divisor& (0+255),b
  7178  0018C0  51BD               	movf	fround@prec& (0+255),w,b
  7179  0018C2  ECA7  F019         	call	___lbmod
  7180  0018C6  EC25  F019         	call	___lbdiv
  7181  0018CA  6FB6               	movwf	??_fround& (0+255),b
  7182  0018CC  51B6               	movf	??_fround& (0+255),w,b
  7183  0018CE  0D03               	mullw	3
  7184  0018D0  0E1B               	movlw	27
  7185  0018D2  26F3               	addwf	243,f,c
  7186  0018D4  0E00               	movlw	0
  7187  0018D6  22F4               	addwfc	244,f,c
  7188  0018D8  0E90               	movlw	low __npowers_
  7189  0018DA  24F3               	addwf	243,w,c
  7190  0018DC  6EF6               	movwf	tblptrl,c
  7191  0018DE  0EFE               	movlw	high __npowers_
  7192  0018E0  20F4               	addwfc	244,w,c
  7193  0018E2  6EF7               	movwf	tblptrh,c
  7194  0018E4                     	if	0	;There are less than 3 active tblptr bytes
  7195  0018E4                     	endif
  7196  0018E4  0009               	tblrd		*+
  7197  0018E6  CFF5 F0A7          	movff	tablat,___ftmul@f2
  7198  0018EA  0009               	tblrd		*+
  7199  0018EC  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  7200  0018F0  000A               	tblrd		*-
  7201  0018F2  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  7202  0018F6  C0BA  F0A4         	movff	_fround$2117,___ftmul@f1
  7203  0018FA  C0BB  F0A5         	movff	_fround$2117+1,___ftmul@f1+1
  7204  0018FE  C0BC  F0A6         	movff	_fround$2117+2,___ftmul@f1+2
  7205  001902  ECE6  F011         	call	___ftmul	;wreg free
  7206  001906  C0A4  F0B7         	movff	?___ftmul,_fround$2118
  7207  00190A  C0A5  F0B8         	movff	?___ftmul+1,_fround$2118+1
  7208  00190E  C0A6  F0B9         	movff	?___ftmul+2,_fround$2118+2
  7209                           
  7210                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7211  001912  C0B7  F0A4         	movff	_fround$2118,___ftmul@f1
  7212  001916  C0B8  F0A5         	movff	_fround$2118+1,___ftmul@f1+1
  7213  00191A  C0B9  F0A6         	movff	_fround$2118+2,___ftmul@f1+2
  7214  00191E  0E0A               	movlw	10
  7215  001920  6F80               	movwf	___lbmod@divisor& (0+255),b
  7216  001922  51BD               	movf	fround@prec& (0+255),w,b
  7217  001924  ECA7  F019         	call	___lbmod
  7218  001928  6FB6               	movwf	??_fround& (0+255),b
  7219  00192A  51B6               	movf	??_fround& (0+255),w,b
  7220  00192C  0D03               	mullw	3
  7221  00192E  0E90               	movlw	low __npowers_
  7222  001930  24F3               	addwf	243,w,c
  7223  001932  6EF6               	movwf	tblptrl,c
  7224  001934  0EFE               	movlw	high __npowers_
  7225  001936  20F4               	addwfc	244,w,c
  7226  001938  6EF7               	movwf	tblptrh,c
  7227  00193A                     	if	0	;There are less than 3 active tblptr bytes
  7228  00193A                     	endif
  7229  00193A  0009               	tblrd		*+
  7230  00193C  CFF5 F0A7          	movff	tablat,___ftmul@f2
  7231  001940  0009               	tblrd		*+
  7232  001942  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  7233  001946  000A               	tblrd		*-
  7234  001948  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  7235  00194C  ECE6  F011         	call	___ftmul	;wreg free
  7236  001950  C0A4  F0B3         	movff	?___ftmul,?_fround
  7237  001954  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  7238  001958  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  7239  00195C  0012               	return	
  7240  00195E                     l5807:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;doprnt.c: 423: else if(prec > 10)
  7244  00195E  0E0A               	movlw	10
  7245  001960  65BD               	cpfsgt	fround@prec& (0+255),b
  7246  001962  D04F               	goto	l5813
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7250  001964  0E00               	movlw	0
  7251  001966  6FA7               	movwf	___ftmul@f2& (0+255),b
  7252  001968  0E00               	movlw	0
  7253  00196A  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  7254  00196C  0E3F               	movlw	63
  7255  00196E  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  7256  001970  0E0A               	movlw	10
  7257  001972  6F84               	movwf	___lbdiv@divisor& (0+255),b
  7258  001974  51BD               	movf	fround@prec& (0+255),w,b
  7259  001976  EC25  F019         	call	___lbdiv
  7260  00197A  6FB6               	movwf	??_fround& (0+255),b
  7261  00197C  51B6               	movf	??_fround& (0+255),w,b
  7262  00197E  0D03               	mullw	3
  7263  001980  0E1B               	movlw	27
  7264  001982  26F3               	addwf	243,f,c
  7265  001984  0E00               	movlw	0
  7266  001986  22F4               	addwfc	244,f,c
  7267  001988  0E90               	movlw	low __npowers_
  7268  00198A  24F3               	addwf	243,w,c
  7269  00198C  6EF6               	movwf	tblptrl,c
  7270  00198E  0EFE               	movlw	high __npowers_
  7271  001990  20F4               	addwfc	244,w,c
  7272  001992  6EF7               	movwf	tblptrh,c
  7273  001994                     	if	0	;There are less than 3 active tblptr bytes
  7274  001994                     	endif
  7275  001994  0009               	tblrd		*+
  7276  001996  CFF5 F0A4          	movff	tablat,___ftmul@f1
  7277  00199A  0009               	tblrd		*+
  7278  00199C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  7279  0019A0  000A               	tblrd		*-
  7280  0019A2  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  7281  0019A6  ECE6  F011         	call	___ftmul	;wreg free
  7282  0019AA  C0A4  F0BA         	movff	?___ftmul,_fround$2117
  7283  0019AE  C0A5  F0BB         	movff	?___ftmul+1,_fround$2117+1
  7284  0019B2  C0A6  F0BC         	movff	?___ftmul+2,_fround$2117+2
  7285                           
  7286                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7287  0019B6  C0BA  F0A4         	movff	_fround$2117,___ftmul@f1
  7288  0019BA  C0BB  F0A5         	movff	_fround$2117+1,___ftmul@f1+1
  7289  0019BE  C0BC  F0A6         	movff	_fround$2117+2,___ftmul@f1+2
  7290  0019C2  0E0A               	movlw	10
  7291  0019C4  6F80               	movwf	___lbmod@divisor& (0+255),b
  7292  0019C6  51BD               	movf	fround@prec& (0+255),w,b
  7293  0019C8  ECA7  F019         	call	___lbmod
  7294  0019CC  6FB6               	movwf	??_fround& (0+255),b
  7295  0019CE  51B6               	movf	??_fround& (0+255),w,b
  7296  0019D0  0D03               	mullw	3
  7297  0019D2  0E90               	movlw	low __npowers_
  7298  0019D4  24F3               	addwf	243,w,c
  7299  0019D6  6EF6               	movwf	tblptrl,c
  7300  0019D8  0EFE               	movlw	high __npowers_
  7301  0019DA  20F4               	addwfc	244,w,c
  7302  0019DC  6EF7               	movwf	tblptrh,c
  7303  0019DE                     	if	0	;There are less than 3 active tblptr bytes
  7304  0019DE                     	endif
  7305  0019DE  0009               	tblrd		*+
  7306  0019E0  CFF5 F0A7          	movff	tablat,___ftmul@f2
  7307  0019E4  0009               	tblrd		*+
  7308  0019E6  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  7309  0019EA  000A               	tblrd		*-
  7310  0019EC  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  7311  0019F0  ECE6  F011         	call	___ftmul	;wreg free
  7312  0019F4  C0A4  F0B3         	movff	?___ftmul,?_fround
  7313  0019F8  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  7314  0019FC  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  7315  001A00  0012               	return	
  7316  001A02                     l5813:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7320  001A02  51BD               	movf	fround@prec& (0+255),w,b
  7321  001A04  0D03               	mullw	3
  7322  001A06  0E90               	movlw	low __npowers_
  7323  001A08  24F3               	addwf	243,w,c
  7324  001A0A  6EF6               	movwf	tblptrl,c
  7325  001A0C  0EFE               	movlw	high __npowers_
  7326  001A0E  20F4               	addwfc	244,w,c
  7327  001A10  6EF7               	movwf	tblptrh,c
  7328  001A12                     	if	0	;There are less than 3 active tblptr bytes
  7329  001A12                     	endif
  7330  001A12  0009               	tblrd		*+
  7331  001A14  CFF5 F0A4          	movff	tablat,___ftmul@f1
  7332  001A18  0009               	tblrd		*+
  7333  001A1A  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  7334  001A1E  000A               	tblrd		*-
  7335  001A20  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  7336  001A24  0E00               	movlw	0
  7337  001A26  6FA7               	movwf	___ftmul@f2& (0+255),b
  7338  001A28  0E00               	movlw	0
  7339  001A2A  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  7340  001A2C  0E3F               	movlw	63
  7341  001A2E  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  7342  001A30  ECE6  F011         	call	___ftmul	;wreg free
  7343  001A34  C0A4  F0B3         	movff	?___ftmul,?_fround
  7344  001A38  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  7345  001A3C  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  7346                           
  7347                           ; BSR set to: 0
  7348  001A40  0012               	return		;funcret
  7349  001A42                     __end_of_fround:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function ___lbmod *****************
  7353 ;; Defined at:
  7354 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbmod.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  dividend        1    wreg     unsigned char 
  7357 ;;  divisor         1    0[BANK0 ] unsigned char 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  dividend        1    1[BANK0 ] unsigned char 
  7360 ;;  rem             1    3[BANK0 ] unsigned char 
  7361 ;;  counter         1    2[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      unsigned char 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 3F/0
  7368 ;;		On exit  : 3F/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;Total ram usage:        4 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    4
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_fround
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text22
  7386  00334E                     __ptext22:
  7387                           	callstack 0
  7388  00334E                     ___lbmod:
  7389                           	callstack 24
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;incstack = 0
  7393                           ;___lbmod@dividend stored from wreg
  7394  00334E  6F81               	movwf	___lbmod@dividend& (0+255),b
  7395  003350  0E08               	movlw	8
  7396  003352  0100               	movlb	0	; () banked
  7397  003354  6F82               	movwf	___lbmod@counter& (0+255),b
  7398  003356  0E00               	movlw	0
  7399  003358  6F83               	movwf	___lbmod@rem& (0+255),b
  7400  00335A                     l5769:
  7401                           
  7402                           ; BSR set to: 0
  7403  00335A  90D8               	bcf	status,0,c
  7404  00335C  3581               	rlcf	___lbmod@dividend& (0+255),w,b
  7405  00335E  3583               	rlcf	___lbmod@rem& (0+255),w,b
  7406  003360  6F83               	movwf	___lbmod@rem& (0+255),b
  7407                           
  7408                           ; BSR set to: 0
  7409  003362  90D8               	bcf	status,0,c
  7410  003364  3781               	rlcf	___lbmod@dividend& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 0
  7413  003366  5180               	movf	___lbmod@divisor& (0+255),w,b
  7414  003368  5D83               	subwf	___lbmod@rem& (0+255),w,b
  7415  00336A  A0D8               	btfss	status,0,c
  7416  00336C  D002               	goto	l5777
  7417                           
  7418                           ; BSR set to: 0
  7419  00336E  5180               	movf	___lbmod@divisor& (0+255),w,b
  7420  003370  5F83               	subwf	___lbmod@rem& (0+255),f,b
  7421  003372                     l5777:
  7422                           
  7423                           ; BSR set to: 0
  7424  003372  2F82               	decfsz	___lbmod@counter& (0+255),f,b
  7425  003374  D7F2               	goto	l5769
  7426                           
  7427                           ; BSR set to: 0
  7428  003376  5183               	movf	___lbmod@rem& (0+255),w,b
  7429                           
  7430                           ; BSR set to: 0
  7431  003378  0012               	return		;funcret
  7432  00337A                     __end_of___lbmod:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function ___lbdiv *****************
  7436 ;; Defined at:
  7437 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  dividend        1    wreg     unsigned char 
  7440 ;;  divisor         1    4[BANK0 ] unsigned char 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  dividend        1    5[BANK0 ] unsigned char 
  7443 ;;  quotient        1    7[BANK0 ] unsigned char 
  7444 ;;  counter         1    6[BANK0 ] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      unsigned char 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 3F/0
  7451 ;;		On exit  : 3F/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7454 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;Total ram usage:        4 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    4
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_fround
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text23
  7469  00324A                     __ptext23:
  7470                           	callstack 0
  7471  00324A                     ___lbdiv:
  7472                           	callstack 24
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;incstack = 0
  7476                           ;___lbdiv@dividend stored from wreg
  7477  00324A  6F85               	movwf	___lbdiv@dividend& (0+255),b
  7478  00324C  0E00               	movlw	0
  7479  00324E  0100               	movlb	0	; () banked
  7480  003250  6F87               	movwf	___lbdiv@quotient& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483  003252  5184               	movf	___lbdiv@divisor& (0+255),w,b
  7484  003254  B4D8               	btfsc	status,2,c
  7485  003256  D015               	goto	l5763
  7486                           
  7487                           ; BSR set to: 0
  7488  003258  0E01               	movlw	1
  7489  00325A  6F86               	movwf	___lbdiv@counter& (0+255),b
  7490  00325C  D003               	goto	l5751
  7491  00325E                     l5747:
  7492                           
  7493                           ; BSR set to: 0
  7494  00325E  90D8               	bcf	status,0,c
  7495  003260  3784               	rlcf	___lbdiv@divisor& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498  003262  2B86               	incf	___lbdiv@counter& (0+255),f,b
  7499  003264                     l5751:
  7500                           
  7501                           ; BSR set to: 0
  7502  003264  AF84               	btfss	___lbdiv@divisor& (0+255),7,b
  7503  003266  D7FB               	goto	l5747
  7504  003268                     u6590:
  7505                           
  7506                           ; BSR set to: 0
  7507  003268  90D8               	bcf	status,0,c
  7508  00326A  3787               	rlcf	___lbdiv@quotient& (0+255),f,b
  7509  00326C  5184               	movf	___lbdiv@divisor& (0+255),w,b
  7510  00326E  5D85               	subwf	___lbdiv@dividend& (0+255),w,b
  7511  003270  A0D8               	btfss	status,0,c
  7512  003272  D003               	goto	l5759
  7513                           
  7514                           ; BSR set to: 0
  7515  003274  5184               	movf	___lbdiv@divisor& (0+255),w,b
  7516  003276  5F85               	subwf	___lbdiv@dividend& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 0
  7519  003278  8187               	bsf	___lbdiv@quotient& (0+255),0,b
  7520  00327A                     l5759:
  7521                           
  7522                           ; BSR set to: 0
  7523  00327A  90D8               	bcf	status,0,c
  7524  00327C  3384               	rrcf	___lbdiv@divisor& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 0
  7527  00327E  2F86               	decfsz	___lbdiv@counter& (0+255),f,b
  7528  003280  D7F3               	goto	u6590
  7529  003282                     l5763:
  7530                           
  7531                           ; BSR set to: 0
  7532  003282  5187               	movf	___lbdiv@quotient& (0+255),w,b
  7533                           
  7534                           ; BSR set to: 0
  7535  003284  0012               	return		;funcret
  7536  003286                     __end_of___lbdiv:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function __tdiv_to_l_ *****************
  7540 ;; Defined at:
  7541 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdivl.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  f1              3    0[BANK0 ] float 
  7544 ;;  f2              3    3[BANK0 ] float 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  quot            4    9[BANK0 ] unsigned long 
  7547 ;;  exp1            1   14[BANK0 ] unsigned char 
  7548 ;;  cntr            1   13[BANK0 ] unsigned char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  4    0[BANK0 ] unsigned long 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0
  7553 ;; Tracked objects:
  7554 ;;		On entry : 3F/0
  7555 ;;		On exit  : 3F/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7558 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;Total ram usage:       15 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    4
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_sprintf
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text24
  7573  0021D8                     __ptext24:
  7574                           	callstack 0
  7575  0021D8                     __tdiv_to_l_:
  7576                           	callstack 25
  7577                           
  7578                           ; BSR set to: 0
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;incstack = 0
  7582  0021D8  C082  F086         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7583  0021DC  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7584  0021DE  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7585  0021E0  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7586  0021E2  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7587  0021E4  E301               	bnc	u6711
  7588  0021E6  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7589  0021E8                     u6711:
  7590  0021E8  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  7591  0021EA  6F8E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7592  0021EC  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7593  0021EE  A4D8               	btfss	status,2,c
  7594  0021F0  D009               	goto	l5873
  7595  0021F2                     u6720:
  7596                           
  7597                           ; BSR set to: 0
  7598  0021F2  0E00               	movlw	0
  7599  0021F4  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  7600  0021F6  0E00               	movlw	0
  7601  0021F8  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7602  0021FA  0E00               	movlw	0
  7603  0021FC  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7604  0021FE  0E00               	movlw	0
  7605  002200  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7606  002202  0012               	return	
  7607  002204                     l5873:
  7608                           
  7609                           ; BSR set to: 0
  7610  002204  C085  F086         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7611  002208  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7612  00220A  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7613  00220C  3584               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7614  00220E  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7615  002210  E301               	bnc	u6731
  7616  002212  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7617  002214                     u6731:
  7618  002214  5186               	movf	??__tdiv_to_l_& (0+255),w,b
  7619  002216  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7620  002218  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7621  00221A  B4D8               	btfsc	status,2,c
  7622  00221C  D7EA               	goto	u6720
  7623                           
  7624                           ; BSR set to: 0
  7625  00221E  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7626                           
  7627                           ; BSR set to: 0
  7628  002220  0EFF               	movlw	255
  7629  002222  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7630  002224  0EFF               	movlw	255
  7631  002226  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7632  002228  0E00               	movlw	0
  7633  00222A  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7634  00222C  8F84               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7635                           
  7636                           ; BSR set to: 0
  7637  00222E  0EFF               	movlw	255
  7638  002230  1783               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7639  002232  0EFF               	movlw	255
  7640  002234  1784               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7641  002236  0E00               	movlw	0
  7642  002238  1785               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7643                           
  7644                           ; BSR set to: 0
  7645  00223A  0E00               	movlw	0
  7646  00223C  6F89               	movwf	__tdiv_to_l_@quot& (0+255),b
  7647  00223E  0E00               	movlw	0
  7648  002240  6F8A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7649  002242  0E00               	movlw	0
  7650  002244  6F8B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7651  002246  0E00               	movlw	0
  7652  002248  6F8C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7653                           
  7654                           ; BSR set to: 0
  7655  00224A  0E7F               	movlw	127
  7656  00224C  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7657                           
  7658                           ; BSR set to: 0
  7659  00224E  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7660  002250  0F98               	addlw	152
  7661  002252  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7662                           
  7663                           ; BSR set to: 0
  7664  002254  0E18               	movlw	24
  7665  002256  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7666  002258                     l946:
  7667                           
  7668                           ; BSR set to: 0
  7669  002258  90D8               	bcf	status,0,c
  7670  00225A  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7671  00225C  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7672  00225E  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7673  002260  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7674                           
  7675                           ; BSR set to: 0
  7676  002262  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7677  002264  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7678  002266  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7679  002268  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7680  00226A  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7681  00226C  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7682  00226E  A0D8               	btfss	status,0,c
  7683  002270  D007               	goto	l947
  7684                           
  7685                           ; BSR set to: 0
  7686  002272  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7687  002274  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7688  002276  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7689  002278  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7690  00227A  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7691  00227C  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  00227E  8189               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7695  002280                     l947:
  7696                           
  7697                           ; BSR set to: 0
  7698  002280  90D8               	bcf	status,0,c
  7699  002282  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7700  002284  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7701  002286  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7702                           
  7703                           ; BSR set to: 0
  7704  002288  2F8D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7705  00228A  D7E6               	goto	l946
  7706                           
  7707                           ; BSR set to: 0
  7708  00228C  AF8E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7709  00228E  D00D               	goto	l5913
  7710                           
  7711                           ; BSR set to: 0
  7712  002290  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7713  002292  0A80               	xorlw	128
  7714  002294  0F97               	addlw	151
  7715  002296  A0D8               	btfss	status,0,c
  7716  002298  D7AC               	goto	u6720
  7717  00229A                     l5909:
  7718                           
  7719                           ; BSR set to: 0
  7720  00229A  90D8               	bcf	status,0,c
  7721  00229C  338C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7722  00229E  338B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7723  0022A0  338A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7724  0022A2  3389               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7725                           
  7726                           ; BSR set to: 0
  7727  0022A4  3F8E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7728  0022A6  D7F9               	goto	l5909
  7729  0022A8  D00D               	goto	u6790
  7730  0022AA                     l5913:
  7731                           
  7732                           ; BSR set to: 0
  7733  0022AA  0E17               	movlw	23
  7734  0022AC  658E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7735  0022AE  D007               	goto	l5921
  7736  0022B0  D7A0               	goto	u6720
  7737  0022B2                     l5919:
  7738                           
  7739                           ; BSR set to: 0
  7740  0022B2  90D8               	bcf	status,0,c
  7741  0022B4  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7742  0022B6  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7743  0022B8  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7744  0022BA  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7745  0022BC  078E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7746  0022BE                     l5921:
  7747                           
  7748                           ; BSR set to: 0
  7749  0022BE  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7750  0022C0  A4D8               	btfss	status,2,c
  7751  0022C2  D7F7               	goto	l5919
  7752  0022C4                     u6790:
  7753                           
  7754                           ; BSR set to: 0
  7755  0022C4  C089  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7756  0022C8  C08A  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7757  0022CC  C08B  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7758  0022D0  C08C  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7759                           
  7760                           ; BSR set to: 0
  7761  0022D4  0012               	return		;funcret
  7762  0022D6                     __end_of__tdiv_to_l_:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function __div_to_l_ *****************
  7766 ;; Defined at:
  7767 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fldivl.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  f1              3    0[BANK0 ] unsigned long 
  7770 ;;  f2              3    3[BANK0 ] unsigned long 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  quot            4    6[BANK0 ] unsigned long 
  7773 ;;  exp1            1   11[BANK0 ] unsigned char 
  7774 ;;  cntr            1   10[BANK0 ] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  4    0[BANK0 ] unsigned long 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 3F/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:       12 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    4
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_sprintf
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text25
  7799  0022D6                     __ptext25:
  7800                           	callstack 0
  7801  0022D6                     __div_to_l_:
  7802                           	callstack 25
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;incstack = 0
  7806  0022D6  0100               	movlb	0	; () banked
  7807  0022D8  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7808  0022DA  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7809  0022DC  6F8B               	movwf	__div_to_l_@exp1& (0+255),b
  7810  0022DE  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  7811  0022E0  A4D8               	btfss	status,2,c
  7812  0022E2  D009               	goto	l5929
  7813  0022E4                     u6800:
  7814                           
  7815                           ; BSR set to: 0
  7816  0022E4  0E00               	movlw	0
  7817  0022E6  6F80               	movwf	?__div_to_l_& (0+255),b
  7818  0022E8  0E00               	movlw	0
  7819  0022EA  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  7820  0022EC  0E00               	movlw	0
  7821  0022EE  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  7822  0022F0  0E00               	movlw	0
  7823  0022F2  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  7824  0022F4  0012               	return	
  7825  0022F6                     l5929:
  7826                           
  7827                           ; BSR set to: 0
  7828  0022F6  3585               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7829  0022F8  3586               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7830  0022FA  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  7831  0022FC  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  7832  0022FE  B4D8               	btfsc	status,2,c
  7833  002300  D7F1               	goto	u6800
  7834                           
  7835                           ; BSR set to: 0
  7836  002302  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7837                           
  7838                           ; BSR set to: 0
  7839  002304  0EFF               	movlw	255
  7840  002306  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  7841  002308  0EFF               	movlw	255
  7842  00230A  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7843  00230C  0EFF               	movlw	255
  7844  00230E  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7845  002310  0E00               	movlw	0
  7846  002312  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7847                           
  7848                           ; BSR set to: 0
  7849  002314  8F85               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7850  002316  0EFF               	movlw	255
  7851  002318  1783               	andwf	__div_to_l_@f2& (0+255),f,b
  7852  00231A  0EFF               	movlw	255
  7853  00231C  1784               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7854  00231E  0EFF               	movlw	255
  7855  002320  1785               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7856  002322  0E00               	movlw	0
  7857  002324  1786               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7858                           
  7859                           ; BSR set to: 0
  7860  002326  0E00               	movlw	0
  7861  002328  6F86               	movwf	__div_to_l_@quot& (0+255),b
  7862  00232A  0E00               	movlw	0
  7863  00232C  6F87               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7864  00232E  0E00               	movlw	0
  7865  002330  6F88               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7866  002332  0E00               	movlw	0
  7867  002334  6F89               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7868                           
  7869                           ; BSR set to: 0
  7870  002336  0E7F               	movlw	127
  7871  002338  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7872                           
  7873                           ; BSR set to: 0
  7874  00233A  518A               	movf	__div_to_l_@cntr& (0+255),w,b
  7875  00233C  0FA0               	addlw	160
  7876  00233E  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7877                           
  7878                           ; BSR set to: 0
  7879  002340  0E20               	movlw	32
  7880  002342  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
  7881  002344                     l5949:
  7882                           
  7883                           ; BSR set to: 0
  7884  002344  90D8               	bcf	status,0,c
  7885  002346  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  7886  002348  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7887  00234A  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7888  00234C  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7889                           
  7890                           ; BSR set to: 0
  7891  00234E  5183               	movf	__div_to_l_@f2& (0+255),w,b
  7892  002350  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  7893  002352  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7894  002354  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7895  002356  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7896  002358  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7897  00235A  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7898  00235C  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7899  00235E  A0D8               	btfss	status,0,c
  7900  002360  D009               	goto	l5957
  7901                           
  7902                           ; BSR set to: 0
  7903  002362  5183               	movf	__div_to_l_@f2& (0+255),w,b
  7904  002364  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  7905  002366  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7906  002368  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7907  00236A  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7908  00236C  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7909  00236E  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7910  002370  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913  002372  8186               	bsf	__div_to_l_@quot& (0+255),0,b
  7914  002374                     l5957:
  7915                           
  7916                           ; BSR set to: 0
  7917  002374  90D8               	bcf	status,0,c
  7918  002376  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  7919  002378  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7920  00237A  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7921  00237C  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7922                           
  7923                           ; BSR set to: 0
  7924  00237E  2F8A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7925  002380  D7E1               	goto	l5949
  7926                           
  7927                           ; BSR set to: 0
  7928  002382  AF8B               	btfss	__div_to_l_@exp1& (0+255),7,b
  7929  002384  D00D               	goto	l5973
  7930                           
  7931                           ; BSR set to: 0
  7932  002386  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  7933  002388  0A80               	xorlw	128
  7934  00238A  0F9F               	addlw	159
  7935  00238C  A0D8               	btfss	status,0,c
  7936  00238E  D7AA               	goto	u6800
  7937  002390                     l5969:
  7938                           
  7939                           ; BSR set to: 0
  7940  002390  90D8               	bcf	status,0,c
  7941  002392  3389               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7942  002394  3388               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7943  002396  3387               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7944  002398  3386               	rrcf	__div_to_l_@quot& (0+255),f,b
  7945                           
  7946                           ; BSR set to: 0
  7947  00239A  3F8B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7948  00239C  D7F9               	goto	l5969
  7949  00239E  D00D               	goto	u6860
  7950  0023A0                     l5973:
  7951                           
  7952                           ; BSR set to: 0
  7953  0023A0  0E1F               	movlw	31
  7954  0023A2  658B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7955  0023A4  D007               	goto	l5981
  7956  0023A6  D79E               	goto	u6800
  7957  0023A8                     l5979:
  7958                           
  7959                           ; BSR set to: 0
  7960  0023A8  90D8               	bcf	status,0,c
  7961  0023AA  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
  7962  0023AC  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7963  0023AE  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7964  0023B0  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7965  0023B2  078B               	decf	__div_to_l_@exp1& (0+255),f,b
  7966  0023B4                     l5981:
  7967                           
  7968                           ; BSR set to: 0
  7969  0023B4  518B               	movf	__div_to_l_@exp1& (0+255),w,b
  7970  0023B6  A4D8               	btfss	status,2,c
  7971  0023B8  D7F7               	goto	l5979
  7972  0023BA                     u6860:
  7973                           
  7974                           ; BSR set to: 0
  7975  0023BA  C086  F080         	movff	__div_to_l_@quot,?__div_to_l_
  7976  0023BE  C087  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7977  0023C2  C088  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7978  0023C6  C089  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7979                           
  7980                           ; BSR set to: 0
  7981  0023CA  0012               	return		;funcret
  7982  0023CC                     __end_of__div_to_l_:
  7983                           	callstack 0
  7984                           
  7985 ;; *************** function ___wmul *****************
  7986 ;; Defined at:
  7987 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7990 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  product         2    4[BANK0 ] unsigned int 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  2    0[BANK0 ] unsigned int 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2, status,0, prodl, prodh
  7997 ;; Tracked objects:
  7998 ;;		On entry : 3F/0
  7999 ;;		On exit  : 3F/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;Total ram usage:        6 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    4
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_read_adc_voltage
  8013 ;;		_autoCool
  8014 ;;		_autoHeat
  8015 ;;		_main
  8016 ;;		_sprintf
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text26
  8021  0033A2                     __ptext26:
  8022                           	callstack 0
  8023  0033A2                     ___wmul:
  8024                           	callstack 25
  8025                           
  8026                           ; BSR set to: 0
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;incstack = 0
  8030  0033A2  5180               	movf	___wmul@multiplier& (0+255),w,b
  8031  0033A4  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8032  0033A6  CFF3 F084          	movff	prodl,___wmul@product
  8033  0033AA  CFF4 F085          	movff	prodh,___wmul@product+1
  8034  0033AE  5180               	movf	___wmul@multiplier& (0+255),w,b
  8035  0033B0  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8036  0033B2  50F3               	movf	243,w,c
  8037  0033B4  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8038  0033B6  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8039  0033B8  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8040  0033BA  50F3               	movf	243,w,c
  8041  0033BC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8042                           
  8043                           ; BSR set to: 0
  8044  0033BE  C084  F080         	movff	___wmul@product,?___wmul
  8045  0033C2  C085  F081         	movff	___wmul@product+1,?___wmul+1
  8046                           
  8047                           ; BSR set to: 0
  8048  0033C6  0012               	return		;funcret
  8049  0033C8                     __end_of___wmul:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function ___lltoft *****************
  8053 ;; Defined at:
  8054 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lltoft.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  c               4    8[BANK0 ] unsigned long 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  exp             1   16[BANK0 ] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  3    8[BANK0 ] float 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 3F/0
  8065 ;;		On exit  : 3F/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;Total ram usage:        9 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    5
  8075 ;; This function calls:
  8076 ;;		___ftpack
  8077 ;; This function is called by:
  8078 ;;		_sprintf
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text27
  8083  002F42                     __ptext27:
  8084                           	callstack 0
  8085  002F42                     ___lltoft:
  8086                           	callstack 24
  8087                           
  8088                           ; BSR set to: 0
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;incstack = 0
  8092  002F42  0E8E               	movlw	142
  8093  002F44  6F90               	movwf	___lltoft@exp& (0+255),b
  8094  002F46  D006               	goto	l6153
  8095  002F48                     l6151:
  8096                           
  8097                           ; BSR set to: 0
  8098  002F48  90D8               	bcf	status,0,c
  8099  002F4A  338B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8100  002F4C  338A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8101  002F4E  3389               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8102  002F50  3388               	rrcf	___lltoft@c& (0+255),f,b
  8103  002F52  2B90               	incf	___lltoft@exp& (0+255),f,b
  8104  002F54                     l6153:
  8105                           
  8106                           ; BSR set to: 0
  8107  002F54  0E00               	movlw	0
  8108  002F56  1588               	andwf	___lltoft@c& (0+255),w,b
  8109  002F58  6F8C               	movwf	??___lltoft& (0+255),b
  8110  002F5A  0E00               	movlw	0
  8111  002F5C  1589               	andwf	(___lltoft@c+1)& (0+255),w,b
  8112  002F5E  6F8D               	movwf	(??___lltoft+1)& (0+255),b
  8113  002F60  0E00               	movlw	0
  8114  002F62  158A               	andwf	(___lltoft@c+2)& (0+255),w,b
  8115  002F64  6F8E               	movwf	(??___lltoft+2)& (0+255),b
  8116  002F66  0EFF               	movlw	255
  8117  002F68  158B               	andwf	(___lltoft@c+3)& (0+255),w,b
  8118  002F6A  6F8F               	movwf	(??___lltoft+3)& (0+255),b
  8119  002F6C  518C               	movf	??___lltoft& (0+255),w,b
  8120  002F6E  118D               	iorwf	(??___lltoft+1)& (0+255),w,b
  8121  002F70  118E               	iorwf	(??___lltoft+2)& (0+255),w,b
  8122  002F72  118F               	iorwf	(??___lltoft+3)& (0+255),w,b
  8123  002F74  A4D8               	btfss	status,2,c
  8124  002F76  D7E8               	goto	l6151
  8125                           
  8126                           ; BSR set to: 0
  8127  002F78  C088  F080         	movff	___lltoft@c,___ftpack@arg
  8128  002F7C  C089  F081         	movff	___lltoft@c+1,___ftpack@arg+1
  8129  002F80  C08A  F082         	movff	___lltoft@c+2,___ftpack@arg+2
  8130  002F84  C090  F083         	movff	___lltoft@exp,___ftpack@exp
  8131  002F88  0E00               	movlw	0
  8132  002F8A  6F84               	movwf	___ftpack@sign& (0+255),b
  8133  002F8C  EC94  F014         	call	___ftpack	;wreg free
  8134  002F90  C080  F088         	movff	?___ftpack,?___lltoft
  8135  002F94  C081  F089         	movff	?___ftpack+1,?___lltoft+1
  8136  002F98  C082  F08A         	movff	?___ftpack+2,?___lltoft+2
  8137                           
  8138                           ; BSR set to: 0
  8139  002F9C  0012               	return		;funcret
  8140  002F9E                     __end_of___lltoft:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function ___llmod *****************
  8144 ;; Defined at:
  8145 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  dividend        4   13[BANK0 ] unsigned long 
  8148 ;;  divisor         4   17[BANK0 ] unsigned long 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  counter         1   21[BANK0 ] unsigned char 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  4   13[BANK0 ] unsigned long 
  8153 ;; Registers used:
  8154 ;;		wreg, status,2, status,0
  8155 ;; Tracked objects:
  8156 ;;		On entry : 3E/0
  8157 ;;		On exit  : 3F/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8160 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;Total ram usage:        9 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    4
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_sprintf
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text28
  8175  002E7E                     __ptext28:
  8176                           	callstack 0
  8177  002E7E                     ___llmod:
  8178                           	callstack 25
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;incstack = 0
  8182  002E7E  0100               	movlb	0	; () banked
  8183  002E80  5191               	movf	___llmod@divisor& (0+255),w,b
  8184  002E82  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8185  002E84  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8186  002E86  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8187  002E88  B4D8               	btfsc	status,2,c
  8188  002E8A  D024               	goto	l1023
  8189                           
  8190                           ; BSR set to: 0
  8191  002E8C  0E01               	movlw	1
  8192  002E8E  6F95               	movwf	___llmod@counter& (0+255),b
  8193  002E90  D006               	goto	l6139
  8194  002E92                     l6137:
  8195                           
  8196                           ; BSR set to: 0
  8197  002E92  90D8               	bcf	status,0,c
  8198  002E94  3791               	rlcf	___llmod@divisor& (0+255),f,b
  8199  002E96  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8200  002E98  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8201  002E9A  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8202  002E9C  2B95               	incf	___llmod@counter& (0+255),f,b
  8203  002E9E                     l6139:
  8204                           
  8205                           ; BSR set to: 0
  8206  002E9E  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8207  002EA0  D7F8               	goto	l6137
  8208  002EA2                     u7090:
  8209                           
  8210                           ; BSR set to: 0
  8211  002EA2  5191               	movf	___llmod@divisor& (0+255),w,b
  8212  002EA4  5D8D               	subwf	___llmod@dividend& (0+255),w,b
  8213  002EA6  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  8214  002EA8  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8215  002EAA  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  8216  002EAC  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8217  002EAE  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  8218  002EB0  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8219  002EB2  A0D8               	btfss	status,0,c
  8220  002EB4  D008               	goto	l6145
  8221                           
  8222                           ; BSR set to: 0
  8223  002EB6  5191               	movf	___llmod@divisor& (0+255),w,b
  8224  002EB8  5F8D               	subwf	___llmod@dividend& (0+255),f,b
  8225  002EBA  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  8226  002EBC  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8227  002EBE  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  8228  002EC0  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8229  002EC2  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  8230  002EC4  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8231  002EC6                     l6145:
  8232                           
  8233                           ; BSR set to: 0
  8234  002EC6  90D8               	bcf	status,0,c
  8235  002EC8  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8236  002ECA  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8237  002ECC  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8238  002ECE  3391               	rrcf	___llmod@divisor& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241  002ED0  2F95               	decfsz	___llmod@counter& (0+255),f,b
  8242  002ED2  D7E7               	goto	u7090
  8243  002ED4                     l1023:
  8244                           
  8245                           ; BSR set to: 0
  8246  002ED4  C08D  F08D         	movff	___llmod@dividend,?___llmod
  8247  002ED8  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
  8248  002EDC  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
  8249  002EE0  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
  8250                           
  8251                           ; BSR set to: 0
  8252  002EE4  0012               	return		;funcret
  8253  002EE6                     __end_of___llmod:
  8254                           	callstack 0
  8255                           
  8256 ;; *************** function ___lldiv *****************
  8257 ;; Defined at:
  8258 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  dividend        4    0[BANK0 ] unsigned long 
  8261 ;;  divisor         4    4[BANK0 ] unsigned long 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  quotient        4    8[BANK0 ] unsigned long 
  8264 ;;  counter         1   12[BANK0 ] unsigned char 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  4    0[BANK0 ] unsigned long 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 3E/1
  8271 ;;		On exit  : 3F/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8274 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;Total ram usage:       13 bytes
  8279 ;; Hardware stack levels used:    1
  8280 ;; Hardware stack levels required when called:    4
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_sprintf
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text29
  8289  002C38                     __ptext29:
  8290                           	callstack 0
  8291  002C38                     ___lldiv:
  8292                           	callstack 25
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;incstack = 0
  8296  002C38  0E00               	movlw	0
  8297  002C3A  0100               	movlb	0	; () banked
  8298  002C3C  6F88               	movwf	___lldiv@quotient& (0+255),b
  8299  002C3E  0E00               	movlw	0
  8300  002C40  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  8301  002C42  0E00               	movlw	0
  8302  002C44  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8303  002C46  0E00               	movlw	0
  8304  002C48  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8305                           
  8306                           ; BSR set to: 0
  8307  002C4A  5184               	movf	___lldiv@divisor& (0+255),w,b
  8308  002C4C  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8309  002C4E  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8310  002C50  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8311  002C52  B4D8               	btfsc	status,2,c
  8312  002C54  D02A               	goto	l608
  8313                           
  8314                           ; BSR set to: 0
  8315  002C56  0E01               	movlw	1
  8316  002C58  6F8C               	movwf	___lldiv@counter& (0+255),b
  8317  002C5A  D006               	goto	l5997
  8318  002C5C                     l5995:
  8319                           
  8320                           ; BSR set to: 0
  8321  002C5C  90D8               	bcf	status,0,c
  8322  002C5E  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  8323  002C60  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8324  002C62  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8325  002C64  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8326  002C66  2B8C               	incf	___lldiv@counter& (0+255),f,b
  8327  002C68                     l5997:
  8328                           
  8329                           ; BSR set to: 0
  8330  002C68  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8331  002C6A  D7F8               	goto	l5995
  8332  002C6C                     u6880:
  8333                           
  8334                           ; BSR set to: 0
  8335  002C6C  90D8               	bcf	status,0,c
  8336  002C6E  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  8337  002C70  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8338  002C72  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8339  002C74  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8340                           
  8341                           ; BSR set to: 0
  8342  002C76  5184               	movf	___lldiv@divisor& (0+255),w,b
  8343  002C78  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  8344  002C7A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8345  002C7C  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8346  002C7E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8347  002C80  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8348  002C82  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8349  002C84  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8350  002C86  A0D8               	btfss	status,0,c
  8351  002C88  D009               	goto	l6007
  8352                           
  8353                           ; BSR set to: 0
  8354  002C8A  5184               	movf	___lldiv@divisor& (0+255),w,b
  8355  002C8C  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  8356  002C8E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8357  002C90  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8358  002C92  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8359  002C94  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8360  002C96  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8361  002C98  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8362                           
  8363                           ; BSR set to: 0
  8364  002C9A  8188               	bsf	___lldiv@quotient& (0+255),0,b
  8365  002C9C                     l6007:
  8366                           
  8367                           ; BSR set to: 0
  8368  002C9C  90D8               	bcf	status,0,c
  8369  002C9E  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8370  002CA0  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8371  002CA2  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8372  002CA4  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  8373                           
  8374                           ; BSR set to: 0
  8375  002CA6  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  8376  002CA8  D7E1               	goto	u6880
  8377  002CAA                     l608:
  8378                           
  8379                           ; BSR set to: 0
  8380  002CAA  C088  F080         	movff	___lldiv@quotient,?___lldiv
  8381  002CAE  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  8382  002CB2  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  8383  002CB6  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  8384                           
  8385                           ; BSR set to: 0
  8386  002CBA  0012               	return		;funcret
  8387  002CBC                     __end_of___lldiv:
  8388                           	callstack 0
  8389                           
  8390 ;; *************** function ___ftsub *****************
  8391 ;; Defined at:
  8392 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftsub.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  f1              3   74[BANK0 ] float 
  8395 ;;  f2              3   77[BANK0 ] float 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  3   74[BANK0 ] float 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 3F/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8407 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8410 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;Total ram usage:        6 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    6
  8414 ;; This function calls:
  8415 ;;		___ftadd
  8416 ;; This function is called by:
  8417 ;;		_autoCool
  8418 ;;		_autoHeat
  8419 ;;		_main
  8420 ;;		_sprintf
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text30
  8425  00318A                     __ptext30:
  8426                           	callstack 0
  8427  00318A                     ___ftsub:
  8428                           	callstack 23
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;incstack = 0
  8432  00318A  0100               	movlb	0	; () banked
  8433  00318C  51CD               	movf	___ftsub@f2& (0+255),w,b
  8434  00318E  11CE               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8435  003190  11CF               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8436  003192  B4D8               	btfsc	status,2,c
  8437  003194  D006               	goto	l6061
  8438                           
  8439                           ; BSR set to: 0
  8440  003196  0E00               	movlw	0
  8441  003198  1BCD               	xorwf	___ftsub@f2& (0+255),f,b
  8442  00319A  0E00               	movlw	0
  8443  00319C  1BCE               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8444  00319E  0E80               	movlw	128
  8445  0031A0  1BCF               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8446  0031A2                     l6061:
  8447                           
  8448                           ; BSR set to: 0
  8449  0031A2  C0CA  F0BE         	movff	___ftsub@f1,___ftadd@f1
  8450  0031A6  C0CB  F0BF         	movff	___ftsub@f1+1,___ftadd@f1+1
  8451  0031AA  C0CC  F0C0         	movff	___ftsub@f1+2,___ftadd@f1+2
  8452  0031AE  C0CD  F0C1         	movff	___ftsub@f2,___ftadd@f2
  8453  0031B2  C0CE  F0C2         	movff	___ftsub@f2+1,___ftadd@f2+1
  8454  0031B6  C0CF  F0C3         	movff	___ftsub@f2+2,___ftadd@f2+2
  8455  0031BA  ECF8  F00D         	call	___ftadd	;wreg free
  8456  0031BE  C0BE  F0CA         	movff	?___ftadd,?___ftsub
  8457  0031C2  C0BF  F0CB         	movff	?___ftadd+1,?___ftsub+1
  8458  0031C6  C0C0  F0CC         	movff	?___ftadd+2,?___ftsub+2
  8459                           
  8460                           ; BSR set to: 0
  8461  0031CA  0012               	return		;funcret
  8462  0031CC                     __end_of___ftsub:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function ___ftneg *****************
  8466 ;; Defined at:
  8467 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftneg.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  f1              3    0[BANK0 ] float 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  3    0[BANK0 ] float 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0
  8476 ;; Tracked objects:
  8477 ;;		On entry : 3F/1
  8478 ;;		On exit  : 3F/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;Total ram usage:        3 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    4
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_sprintf
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text31
  8496  0033C8                     __ptext31:
  8497                           	callstack 0
  8498  0033C8                     ___ftneg:
  8499                           	callstack 25
  8500                           
  8501                           ; BSR set to: 1
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;incstack = 0
  8505  0033C8  0100               	movlb	0	; () banked
  8506  0033CA  5180               	movf	___ftneg@f1& (0+255),w,b
  8507  0033CC  1181               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8508  0033CE  1182               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8509  0033D0  B4D8               	btfsc	status,2,c
  8510  0033D2  D006               	goto	l978
  8511                           
  8512                           ; BSR set to: 0
  8513  0033D4  0E00               	movlw	0
  8514  0033D6  1B80               	xorwf	___ftneg@f1& (0+255),f,b
  8515  0033D8  0E00               	movlw	0
  8516  0033DA  1B81               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8517  0033DC  0E80               	movlw	128
  8518  0033DE  1B82               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8519  0033E0                     l978:
  8520                           
  8521                           ; BSR set to: 0
  8522  0033E0  C080  F080         	movff	___ftneg@f1,?___ftneg
  8523  0033E4  C081  F081         	movff	___ftneg@f1+1,?___ftneg+1
  8524  0033E8  C082  F082         	movff	___ftneg@f1+2,?___ftneg+2
  8525                           
  8526                           ; BSR set to: 0
  8527  0033EC  0012               	return		;funcret
  8528  0033EE                     __end_of___ftneg:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function ___ftge *****************
  8532 ;; Defined at:
  8533 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftge.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  ff1             3   80[BANK0 ] float 
  8536 ;;  ff2             3   83[BANK0 ] float 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;		None               void
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0
  8543 ;; Tracked objects:
  8544 ;;		On entry : 3F/0
  8545 ;;		On exit  : 3F/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8548 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;Total ram usage:        9 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:    4
  8555 ;; This function calls:
  8556 ;;		Nothing
  8557 ;; This function is called by:
  8558 ;;		_autoCool
  8559 ;;		_autoHeat
  8560 ;;		_main
  8561 ;;		_sprintf
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text32
  8566  002CBC                     __ptext32:
  8567                           	callstack 0
  8568  002CBC                     ___ftge:
  8569                           	callstack 25
  8570                           
  8571                           ; BSR set to: 0
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  002CBC  AFD2               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8576  002CBE  D00F               	goto	l6069
  8577                           
  8578                           ; BSR set to: 0
  8579  002CC0  0E00               	movlw	0
  8580  002CC2  6FD6               	movwf	??___ftge& (0+255),b
  8581  002CC4  0E00               	movlw	0
  8582  002CC6  6FD7               	movwf	(??___ftge+1)& (0+255),b
  8583  002CC8  0E80               	movlw	128
  8584  002CCA  6FD8               	movwf	(??___ftge+2)& (0+255),b
  8585  002CCC  51D0               	movf	___ftge@ff1& (0+255),w,b
  8586  002CCE  5DD6               	subwf	??___ftge& (0+255),w,b
  8587  002CD0  6FD0               	movwf	___ftge@ff1& (0+255),b
  8588  002CD2  51D1               	movf	(___ftge@ff1+1)& (0+255),w,b
  8589  002CD4  59D7               	subwfb	(??___ftge+1)& (0+255),w,b
  8590  002CD6  6FD1               	movwf	(___ftge@ff1+1)& (0+255),b
  8591  002CD8  51D2               	movf	(___ftge@ff1+2)& (0+255),w,b
  8592  002CDA  59D8               	subwfb	(??___ftge+2)& (0+255),w,b
  8593  002CDC  6FD2               	movwf	(___ftge@ff1+2)& (0+255),b
  8594  002CDE                     l6069:
  8595                           
  8596                           ; BSR set to: 0
  8597  002CDE  AFD5               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8598  002CE0  D00F               	goto	l6073
  8599                           
  8600                           ; BSR set to: 0
  8601  002CE2  0E00               	movlw	0
  8602  002CE4  6FD6               	movwf	??___ftge& (0+255),b
  8603  002CE6  0E00               	movlw	0
  8604  002CE8  6FD7               	movwf	(??___ftge+1)& (0+255),b
  8605  002CEA  0E80               	movlw	128
  8606  002CEC  6FD8               	movwf	(??___ftge+2)& (0+255),b
  8607  002CEE  51D3               	movf	___ftge@ff2& (0+255),w,b
  8608  002CF0  5DD6               	subwf	??___ftge& (0+255),w,b
  8609  002CF2  6FD3               	movwf	___ftge@ff2& (0+255),b
  8610  002CF4  51D4               	movf	(___ftge@ff2+1)& (0+255),w,b
  8611  002CF6  59D7               	subwfb	(??___ftge+1)& (0+255),w,b
  8612  002CF8  6FD4               	movwf	(___ftge@ff2+1)& (0+255),b
  8613  002CFA  51D5               	movf	(___ftge@ff2+2)& (0+255),w,b
  8614  002CFC  59D8               	subwfb	(??___ftge+2)& (0+255),w,b
  8615  002CFE  6FD5               	movwf	(___ftge@ff2+2)& (0+255),b
  8616  002D00                     l6073:
  8617                           
  8618                           ; BSR set to: 0
  8619  002D00  0E00               	movlw	0
  8620  002D02  1BD0               	xorwf	___ftge@ff1& (0+255),f,b
  8621  002D04  0E00               	movlw	0
  8622  002D06  1BD1               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8623  002D08  0E80               	movlw	128
  8624  002D0A  1BD2               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  002D0C  0E00               	movlw	0
  8628  002D0E  1BD3               	xorwf	___ftge@ff2& (0+255),f,b
  8629  002D10  0E00               	movlw	0
  8630  002D12  1BD4               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8631  002D14  0E80               	movlw	128
  8632  002D16  1BD5               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8633  002D18  51D3               	movf	___ftge@ff2& (0+255),w,b
  8634  002D1A  5DD0               	subwf	___ftge@ff1& (0+255),w,b
  8635  002D1C  51D4               	movf	(___ftge@ff2+1)& (0+255),w,b
  8636  002D1E  59D1               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8637  002D20  51D5               	movf	(___ftge@ff2+2)& (0+255),w,b
  8638  002D22  59D2               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8639  002D24  B0D8               	btfsc	status,0,c
  8640  002D26  D002               	goto	l6079
  8641                           
  8642                           ; BSR set to: 0
  8643  002D28  90D8               	bcf	status,0,c
  8644  002D2A  0012               	return	
  8645  002D2C                     l6079:
  8646                           
  8647                           ; BSR set to: 0
  8648  002D2C  80D8               	bsf	status,0,c
  8649                           
  8650                           ; BSR set to: 0
  8651  002D2E  0012               	return		;funcret
  8652  002D30                     __end_of___ftge:
  8653                           	callstack 0
  8654                           
  8655 ;; *************** function _set_pwm1_percent *****************
  8656 ;; Defined at:
  8657 ;;		line 244 in file "Main.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  value           3   89[BANK0 ] float 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  tmp             3   92[BANK0 ] float 
  8662 ;;  raw_val         2   95[BANK0 ] int 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 3F/0
  8669 ;;		On exit  : 3F/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:        8 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    6
  8679 ;; This function calls:
  8680 ;;		___ftadd
  8681 ;;		___ftdiv
  8682 ;;		___ftmul
  8683 ;;		___fttol
  8684 ;;		_set_pwm1_raw
  8685 ;; This function is called by:
  8686 ;;		_autoCool
  8687 ;;		_autoHeat
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text33
  8692  002A84                     __ptext33:
  8693                           	callstack 0
  8694  002A84                     _set_pwm1_percent:
  8695                           	callstack 23
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;Main.c: 245: float tmp = value*1023.0/100.0;
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;incstack = 0
  8702  002A84  0EC0               	movlw	192
  8703  002A86  6FA7               	movwf	___ftmul@f2& (0+255),b
  8704  002A88  0E7F               	movlw	127
  8705  002A8A  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  8706  002A8C  0E44               	movlw	68
  8707  002A8E  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  8708  002A90  C0D9  F0A4         	movff	set_pwm1_percent@value,___ftmul@f1
  8709  002A94  C0DA  F0A5         	movff	set_pwm1_percent@value+1,___ftmul@f1+1
  8710  002A98  C0DB  F0A6         	movff	set_pwm1_percent@value+2,___ftmul@f1+2
  8711  002A9C  ECE6  F011         	call	___ftmul	;wreg free
  8712  002AA0  C0A4  F08C         	movff	?___ftmul,___ftdiv@f1
  8713  002AA4  C0A5  F08D         	movff	?___ftmul+1,___ftdiv@f1+1
  8714  002AA8  C0A6  F08E         	movff	?___ftmul+2,___ftdiv@f1+2
  8715  002AAC  0E00               	movlw	0
  8716  002AAE  6F8F               	movwf	___ftdiv@f2& (0+255),b
  8717  002AB0  0EC8               	movlw	200
  8718  002AB2  6F90               	movwf	(___ftdiv@f2+1)& (0+255),b
  8719  002AB4  0E42               	movlw	66
  8720  002AB6  6F91               	movwf	(___ftdiv@f2+2)& (0+255),b
  8721  002AB8  ECDA  F012         	call	___ftdiv	;wreg free
  8722  002ABC  C08C  F0DC         	movff	?___ftdiv,set_pwm1_percent@tmp
  8723  002AC0  C08D  F0DD         	movff	?___ftdiv+1,set_pwm1_percent@tmp+1
  8724  002AC4  C08E  F0DE         	movff	?___ftdiv+2,set_pwm1_percent@tmp+2
  8725                           
  8726                           ;Main.c: 246: int raw_val = (int)(tmp +0.5);
  8727  002AC8  0E00               	movlw	0
  8728  002ACA  6FC1               	movwf	___ftadd@f2& (0+255),b
  8729  002ACC  0E00               	movlw	0
  8730  002ACE  6FC2               	movwf	(___ftadd@f2+1)& (0+255),b
  8731  002AD0  0E3F               	movlw	63
  8732  002AD2  6FC3               	movwf	(___ftadd@f2+2)& (0+255),b
  8733  002AD4  C0DC  F0BE         	movff	set_pwm1_percent@tmp,___ftadd@f1
  8734  002AD8  C0DD  F0BF         	movff	set_pwm1_percent@tmp+1,___ftadd@f1+1
  8735  002ADC  C0DE  F0C0         	movff	set_pwm1_percent@tmp+2,___ftadd@f1+2
  8736  002AE0  ECF8  F00D         	call	___ftadd	;wreg free
  8737  002AE4  C0BE  F0CA         	movff	?___ftadd,___fttol@f1
  8738  002AE8  C0BF  F0CB         	movff	?___ftadd+1,___fttol@f1+1
  8739  002AEC  C0C0  F0CC         	movff	?___ftadd+2,___fttol@f1+2
  8740  002AF0  ECC0  F013         	call	___fttol	;wreg free
  8741  002AF4  C0CA  F0DF         	movff	?___fttol,set_pwm1_percent@raw_val
  8742  002AF8  C0CB  F0E0         	movff	?___fttol+1,set_pwm1_percent@raw_val+1
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;Main.c: 247: if ( raw_val> 1023) raw_val = 1023;
  8746  002AFC  BFE0               	btfsc	(set_pwm1_percent@raw_val+1)& (0+255),7,b
  8747  002AFE  D007               	goto	l6191
  8748  002B00  0E04               	movlw	4
  8749  002B02  5DE0               	subwf	(set_pwm1_percent@raw_val+1)& (0+255),w,b
  8750  002B04  A0D8               	btfss	status,0,c
  8751  002B06  D003               	goto	l6191
  8752                           
  8753                           ; BSR set to: 0
  8754  002B08  0E03               	movlw	3
  8755  002B0A  6FE0               	movwf	(set_pwm1_percent@raw_val+1)& (0+255),b
  8756  002B0C  69DF               	setf	set_pwm1_percent@raw_val& (0+255),b
  8757  002B0E                     l6191:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;Main.c: 248: set_pwm1_raw(raw_val);
  8761  002B0E  C0DF  F080         	movff	set_pwm1_percent@raw_val,set_pwm1_raw@raw_value
  8762  002B12  C0E0  F081         	movff	set_pwm1_percent@raw_val+1,set_pwm1_raw@raw_value+1
  8763  002B16  EC79  F019         	call	_set_pwm1_raw	;wreg free
  8764                           
  8765                           ; BSR set to: 0
  8766  002B1A  0012               	return		;funcret
  8767  002B1C                     __end_of_set_pwm1_percent:
  8768                           	callstack 0
  8769                           
  8770 ;; *************** function _set_pwm1_raw *****************
  8771 ;; Defined at:
  8772 ;;		line 239 in file "Main.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  raw_value       2    0[BANK0 ] unsigned int 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;		None
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0
  8781 ;; Tracked objects:
  8782 ;;		On entry : 3F/0
  8783 ;;		On exit  : 3F/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:        4 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    4
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_set_pwm1_percent
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text34
  8801  0032F2                     __ptext34:
  8802                           	callstack 0
  8803  0032F2                     _set_pwm1_raw:
  8804                           	callstack 24
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;Main.c: 240: CCPR1L = (raw_value >> 2) & 0x00FF;
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;incstack = 0
  8811  0032F2  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  8812  0032F6  C081  F083         	movff	set_pwm1_raw@raw_value+1,??_set_pwm1_raw+1
  8813  0032FA  90D8               	bcf	status,0,c
  8814  0032FC  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  8815  0032FE  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  8816  003300  90D8               	bcf	status,0,c
  8817  003302  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  8818  003304  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  8819  003306  5182               	movf	??_set_pwm1_raw& (0+255),w,b
  8820  003308  6EBE               	movwf	190,c	;volatile
  8821                           
  8822                           ;Main.c: 241: CCP1CONbits.DC1B = raw_value & 0x0003;
  8823  00330A  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  8824  00330E  0E03               	movlw	3
  8825  003310  1782               	andwf	??_set_pwm1_raw& (0+255),f,b
  8826  003312  3B82               	swapf	??_set_pwm1_raw& (0+255),f,b
  8827  003314  50BD               	movf	189,w,c	;volatile
  8828  003316  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  8829  003318  0BCF               	andlw	-49
  8830  00331A  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  8831  00331C  6EBD               	movwf	189,c	;volatile
  8832                           
  8833                           ; BSR set to: 0
  8834  00331E  0012               	return		;funcret
  8835  003320                     __end_of_set_pwm1_raw:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function ___fttol *****************
  8839 ;; Defined at:
  8840 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fttol.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  f1              3   74[BANK0 ] float 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  lval            4   84[BANK0 ] unsigned long 
  8845 ;;  exp1            1   88[BANK0 ] unsigned char 
  8846 ;;  sign1           1   83[BANK0 ] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  4   74[BANK0 ] long 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0
  8851 ;; Tracked objects:
  8852 ;;		On entry : 3E/0
  8853 ;;		On exit  : 3F/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8858 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;Total ram usage:       15 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    4
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_set_pwm1_percent
  8867 ;;		_autoHeat
  8868 ;;		_sprintf
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text35
  8873  002780                     __ptext35:
  8874                           	callstack 0
  8875  002780                     ___fttol:
  8876                           	callstack 25
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;incstack = 0
  8880  002780  C0CC  F0CE         	movff	___fttol@f1+2,??___fttol
  8881  002784  0100               	movlb	0	; () banked
  8882  002786  6BCF               	clrf	(??___fttol+1)& (0+255),b
  8883  002788  6BD0               	clrf	(??___fttol+2)& (0+255),b
  8884  00278A  35CB               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8885  00278C  37CE               	rlcf	??___fttol& (0+255),f,b
  8886  00278E  E301               	bnc	u7001
  8887  002790  81CF               	bsf	(??___fttol+1)& (0+255),0,b
  8888  002792                     u7001:
  8889  002792  51CE               	movf	??___fttol& (0+255),w,b
  8890  002794  6FD8               	movwf	___fttol@exp1& (0+255),b
  8891  002796  51D8               	movf	___fttol@exp1& (0+255),w,b
  8892  002798  A4D8               	btfss	status,2,c
  8893  00279A  D009               	goto	l6093
  8894  00279C                     u7010:
  8895                           
  8896                           ; BSR set to: 0
  8897  00279C  0E00               	movlw	0
  8898  00279E  6FCA               	movwf	?___fttol& (0+255),b
  8899  0027A0  0E00               	movlw	0
  8900  0027A2  6FCB               	movwf	(?___fttol+1)& (0+255),b
  8901  0027A4  0E00               	movlw	0
  8902  0027A6  6FCC               	movwf	(?___fttol+2)& (0+255),b
  8903  0027A8  0E00               	movlw	0
  8904  0027AA  6FCD               	movwf	(?___fttol+3)& (0+255),b
  8905  0027AC  0012               	return	
  8906  0027AE                     l6093:
  8907                           
  8908                           ; BSR set to: 0
  8909  0027AE  0E17               	movlw	23
  8910  0027B0  6FCE               	movwf	??___fttol& (0+255),b
  8911  0027B2  C0CA  F0CF         	movff	___fttol@f1,??___fttol+1
  8912  0027B6  C0CB  F0D0         	movff	___fttol@f1+1,??___fttol+2
  8913  0027BA  C0CC  F0D1         	movff	___fttol@f1+2,??___fttol+3
  8914  0027BE  29CE               	incf	??___fttol& (0+255),w,b
  8915  0027C0  6FD2               	movwf	(??___fttol+4)& (0+255),b
  8916  0027C2  D004               	goto	u7020
  8917  0027C4                     u7025:
  8918  0027C4  90D8               	bcf	status,0,c
  8919  0027C6  33D1               	rrcf	(??___fttol+3)& (0+255),f,b
  8920  0027C8  33D0               	rrcf	(??___fttol+2)& (0+255),f,b
  8921  0027CA  33CF               	rrcf	(??___fttol+1)& (0+255),f,b
  8922  0027CC                     u7020:
  8923  0027CC  2FD2               	decfsz	(??___fttol+4)& (0+255),f,b
  8924  0027CE  D7FA               	goto	u7025
  8925  0027D0  0100               	movlb	0	; () banked
  8926  0027D2  51CF               	movf	(??___fttol+1)& (0+255),w,b
  8927  0027D4  6FD3               	movwf	___fttol@sign1& (0+255),b
  8928                           
  8929                           ; BSR set to: 0
  8930  0027D6  8FCB               	bsf	(___fttol@f1+1)& (0+255),7,b
  8931                           
  8932                           ; BSR set to: 0
  8933  0027D8  0EFF               	movlw	255
  8934  0027DA  17CA               	andwf	___fttol@f1& (0+255),f,b
  8935  0027DC  0EFF               	movlw	255
  8936  0027DE  17CB               	andwf	(___fttol@f1+1)& (0+255),f,b
  8937  0027E0  0E00               	movlw	0
  8938  0027E2  17CC               	andwf	(___fttol@f1+2)& (0+255),f,b
  8939                           
  8940                           ; BSR set to: 0
  8941  0027E4  51CA               	movf	___fttol@f1& (0+255),w,b
  8942  0027E6  6FD4               	movwf	___fttol@lval& (0+255),b
  8943  0027E8  51CB               	movf	(___fttol@f1+1)& (0+255),w,b
  8944  0027EA  6FD5               	movwf	(___fttol@lval+1)& (0+255),b
  8945  0027EC  51CC               	movf	(___fttol@f1+2)& (0+255),w,b
  8946  0027EE  6FD6               	movwf	(___fttol@lval+2)& (0+255),b
  8947  0027F0  6BD7               	clrf	(___fttol@lval+3)& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950  0027F2  0E8E               	movlw	142
  8951  0027F4  5FD8               	subwf	___fttol@exp1& (0+255),f,b
  8952                           
  8953                           ; BSR set to: 0
  8954  0027F6  AFD8               	btfss	___fttol@exp1& (0+255),7,b
  8955  0027F8  D00D               	goto	l6115
  8956                           
  8957                           ; BSR set to: 0
  8958  0027FA  51D8               	movf	___fttol@exp1& (0+255),w,b
  8959  0027FC  0A80               	xorlw	128
  8960  0027FE  0F8F               	addlw	143
  8961  002800  A0D8               	btfss	status,0,c
  8962  002802  D7CC               	goto	u7010
  8963  002804                     l6111:
  8964                           
  8965                           ; BSR set to: 0
  8966  002804  90D8               	bcf	status,0,c
  8967  002806  33D7               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8968  002808  33D6               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8969  00280A  33D5               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8970  00280C  33D4               	rrcf	___fttol@lval& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  00280E  3FD8               	incfsz	___fttol@exp1& (0+255),f,b
  8974  002810  D7F9               	goto	l6111
  8975  002812  D00D               	goto	u7060
  8976  002814                     l6115:
  8977                           
  8978                           ; BSR set to: 0
  8979  002814  0E17               	movlw	23
  8980  002816  65D8               	cpfsgt	___fttol@exp1& (0+255),b
  8981  002818  D007               	goto	l6123
  8982  00281A  D7C0               	goto	u7010
  8983  00281C                     l6121:
  8984                           
  8985                           ; BSR set to: 0
  8986  00281C  90D8               	bcf	status,0,c
  8987  00281E  37D4               	rlcf	___fttol@lval& (0+255),f,b
  8988  002820  37D5               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8989  002822  37D6               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8990  002824  37D7               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8991  002826  07D8               	decf	___fttol@exp1& (0+255),f,b
  8992  002828                     l6123:
  8993                           
  8994                           ; BSR set to: 0
  8995  002828  51D8               	movf	___fttol@exp1& (0+255),w,b
  8996  00282A  A4D8               	btfss	status,2,c
  8997  00282C  D7F7               	goto	l6121
  8998  00282E                     u7060:
  8999                           
  9000                           ; BSR set to: 0
  9001  00282E  51D3               	movf	___fttol@sign1& (0+255),w,b
  9002  002830  B4D8               	btfsc	status,2,c
  9003  002832  D008               	goto	l6129
  9004                           
  9005                           ; BSR set to: 0
  9006  002834  1FD7               	comf	(___fttol@lval+3)& (0+255),f,b
  9007  002836  1FD6               	comf	(___fttol@lval+2)& (0+255),f,b
  9008  002838  1FD5               	comf	(___fttol@lval+1)& (0+255),f,b
  9009  00283A  6DD4               	negf	___fttol@lval& (0+255),b
  9010  00283C  0E00               	movlw	0
  9011  00283E  23D5               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9012  002840  23D6               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9013  002842  23D7               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9014  002844                     l6129:
  9015                           
  9016                           ; BSR set to: 0
  9017  002844  C0D4  F0CA         	movff	___fttol@lval,?___fttol
  9018  002848  C0D5  F0CB         	movff	___fttol@lval+1,?___fttol+1
  9019  00284C  C0D6  F0CC         	movff	___fttol@lval+2,?___fttol+2
  9020  002850  C0D7  F0CD         	movff	___fttol@lval+3,?___fttol+3
  9021                           
  9022                           ; BSR set to: 0
  9023  002854  0012               	return		;funcret
  9024  002856                     __end_of___fttol:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function ___ftmul *****************
  9028 ;; Defined at:
  9029 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftmul.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  f1              3   36[BANK0 ] float 
  9032 ;;  f2              3   39[BANK0 ] float 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  f3_as_produc    3   46[BANK0 ] unsigned um
  9035 ;;  sign            1   50[BANK0 ] unsigned char 
  9036 ;;  cntr            1   49[BANK0 ] unsigned char 
  9037 ;;  exp             1   45[BANK0 ] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  3   36[BANK0 ] float 
  9040 ;; Registers used:
  9041 ;;		wreg, status,2, status,0, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 3F/0
  9044 ;;		On exit  : 3F/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9047 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;Total ram usage:       15 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    5
  9054 ;; This function calls:
  9055 ;;		___ftpack
  9056 ;; This function is called by:
  9057 ;;		_set_pwm1_percent
  9058 ;;		_autoCool
  9059 ;;		_autoHeat
  9060 ;;		_main
  9061 ;;		_fround
  9062 ;;		_scale
  9063 ;;		_sprintf
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text36
  9068  0023CC                     __ptext36:
  9069                           	callstack 0
  9070  0023CC                     ___ftmul:
  9071                           	callstack 23
  9072                           
  9073                           ; BSR set to: 0
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;incstack = 0
  9077  0023CC  C0A6  F0AA         	movff	___ftmul@f1+2,??___ftmul
  9078  0023D0  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  9079  0023D2  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  9080  0023D4  35A5               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9081  0023D6  37AA               	rlcf	??___ftmul& (0+255),f,b
  9082  0023D8  E301               	bnc	u6401
  9083  0023DA  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  9084  0023DC                     u6401:
  9085  0023DC  51AA               	movf	??___ftmul& (0+255),w,b
  9086  0023DE  6FAD               	movwf	___ftmul@exp& (0+255),b
  9087  0023E0  51AD               	movf	___ftmul@exp& (0+255),w,b
  9088  0023E2  A4D8               	btfss	status,2,c
  9089  0023E4  D007               	goto	l5619
  9090                           
  9091                           ; BSR set to: 0
  9092  0023E6  0E00               	movlw	0
  9093  0023E8  6FA4               	movwf	?___ftmul& (0+255),b
  9094  0023EA  0E00               	movlw	0
  9095  0023EC  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  9096  0023EE  0E00               	movlw	0
  9097  0023F0  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  9098  0023F2  0012               	return	
  9099  0023F4                     l5619:
  9100                           
  9101                           ; BSR set to: 0
  9102  0023F4  C0A9  F0AA         	movff	___ftmul@f2+2,??___ftmul
  9103  0023F8  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  9104  0023FA  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  9105  0023FC  35A8               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9106  0023FE  37AA               	rlcf	??___ftmul& (0+255),f,b
  9107  002400  E301               	bnc	u6421
  9108  002402  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  9109  002404                     u6421:
  9110  002404  51AA               	movf	??___ftmul& (0+255),w,b
  9111  002406  6FB2               	movwf	___ftmul@sign& (0+255),b
  9112  002408  51B2               	movf	___ftmul@sign& (0+255),w,b
  9113  00240A  A4D8               	btfss	status,2,c
  9114  00240C  D007               	goto	l5625
  9115                           
  9116                           ; BSR set to: 0
  9117  00240E  0E00               	movlw	0
  9118  002410  6FA4               	movwf	?___ftmul& (0+255),b
  9119  002412  0E00               	movlw	0
  9120  002414  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  9121  002416  0E00               	movlw	0
  9122  002418  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  9123  00241A  0012               	return	
  9124  00241C                     l5625:
  9125                           
  9126                           ; BSR set to: 0
  9127  00241C  51B2               	movf	___ftmul@sign& (0+255),w,b
  9128  00241E  0F7B               	addlw	123
  9129  002420  27AD               	addwf	___ftmul@exp& (0+255),f,b
  9130                           
  9131                           ; BSR set to: 0
  9132  002422  C0A6  F0B2         	movff	___ftmul@f1+2,___ftmul@sign
  9133  002426  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  9134  002428  1BB2               	xorwf	___ftmul@sign& (0+255),f,b
  9135  00242A  0E80               	movlw	128
  9136  00242C  17B2               	andwf	___ftmul@sign& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139  00242E  8FA5               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9140                           
  9141                           ; BSR set to: 0
  9142  002430  8FA8               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9143                           
  9144                           ; BSR set to: 0
  9145  002432  0EFF               	movlw	255
  9146  002434  17A7               	andwf	___ftmul@f2& (0+255),f,b
  9147  002436  0EFF               	movlw	255
  9148  002438  17A8               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9149  00243A  0E00               	movlw	0
  9150  00243C  17A9               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9151                           
  9152                           ; BSR set to: 0
  9153  00243E  0E00               	movlw	0
  9154  002440  6FAE               	movwf	___ftmul@f3_as_product& (0+255),b
  9155  002442  0E00               	movlw	0
  9156  002444  6FAF               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9157  002446  0E00               	movlw	0
  9158  002448  6FB0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9159                           
  9160                           ; BSR set to: 0
  9161  00244A  0E07               	movlw	7
  9162  00244C  6FB1               	movwf	___ftmul@cntr& (0+255),b
  9163  00244E                     l5639:
  9164                           
  9165                           ; BSR set to: 0
  9166  00244E  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  9167  002450  D006               	goto	l5643
  9168                           
  9169                           ; BSR set to: 0
  9170  002452  51A7               	movf	___ftmul@f2& (0+255),w,b
  9171  002454  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9172  002456  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  9173  002458  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9174  00245A  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  9175  00245C  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9176  00245E                     l5643:
  9177                           
  9178                           ; BSR set to: 0
  9179  00245E  90D8               	bcf	status,0,c
  9180  002460  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9181  002462  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9182  002464  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  9183  002466  90D8               	bcf	status,0,c
  9184  002468  37A7               	rlcf	___ftmul@f2& (0+255),f,b
  9185  00246A  37A8               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9186  00246C  37A9               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9187                           
  9188                           ; BSR set to: 0
  9189  00246E  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  9190  002470  D7EE               	goto	l5639
  9191                           
  9192                           ; BSR set to: 0
  9193  002472  0E09               	movlw	9
  9194  002474  6FB1               	movwf	___ftmul@cntr& (0+255),b
  9195  002476                     l5649:
  9196                           
  9197                           ; BSR set to: 0
  9198  002476  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  9199  002478  D006               	goto	l5653
  9200                           
  9201                           ; BSR set to: 0
  9202  00247A  51A7               	movf	___ftmul@f2& (0+255),w,b
  9203  00247C  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9204  00247E  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  9205  002480  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9206  002482  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  9207  002484  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9208  002486                     l5653:
  9209                           
  9210                           ; BSR set to: 0
  9211  002486  90D8               	bcf	status,0,c
  9212  002488  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9213  00248A  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9214  00248C  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  9215  00248E  90D8               	bcf	status,0,c
  9216  002490  33B0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9217  002492  33AF               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9218  002494  33AE               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9219                           
  9220                           ; BSR set to: 0
  9221  002496  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  9222  002498  D7EE               	goto	l5649
  9223                           
  9224                           ; BSR set to: 0
  9225  00249A  C0AE  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  9226  00249E  C0AF  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9227  0024A2  C0B0  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9228  0024A6  C0AD  F083         	movff	___ftmul@exp,___ftpack@exp
  9229  0024AA  C0B2  F084         	movff	___ftmul@sign,___ftpack@sign
  9230  0024AE  EC94  F014         	call	___ftpack	;wreg free
  9231  0024B2  C080  F0A4         	movff	?___ftpack,?___ftmul
  9232  0024B6  C081  F0A5         	movff	?___ftpack+1,?___ftmul+1
  9233  0024BA  C082  F0A6         	movff	?___ftpack+2,?___ftmul+2
  9234                           
  9235                           ; BSR set to: 0
  9236  0024BE  0012               	return		;funcret
  9237  0024C0                     __end_of___ftmul:
  9238                           	callstack 0
  9239                           
  9240 ;; *************** function ___ftdiv *****************
  9241 ;; Defined at:
  9242 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdiv.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  f1              3   12[BANK0 ] float 
  9245 ;;  f2              3   15[BANK0 ] float 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;  f3              3   22[BANK0 ] float 
  9248 ;;  sign            1   26[BANK0 ] unsigned char 
  9249 ;;  exp             1   25[BANK0 ] unsigned char 
  9250 ;;  cntr            1   21[BANK0 ] unsigned char 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  3   12[BANK0 ] float 
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 3F/0
  9257 ;;		On exit  : 3F/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;Total ram usage:       15 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    5
  9267 ;; This function calls:
  9268 ;;		___ftpack
  9269 ;; This function is called by:
  9270 ;;		_read_adc_voltage
  9271 ;;		_set_pwm1_percent
  9272 ;;		_autoCool
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text37
  9277  0025B4                     __ptext37:
  9278                           	callstack 0
  9279  0025B4                     ___ftdiv:
  9280                           	callstack 24
  9281                           
  9282                           ; BSR set to: 0
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;incstack = 0
  9286  0025B4  C08E  F092         	movff	___ftdiv@f1+2,??___ftdiv
  9287  0025B8  6B93               	clrf	(??___ftdiv+1)& (0+255),b
  9288  0025BA  6B94               	clrf	(??___ftdiv+2)& (0+255),b
  9289  0025BC  358D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9290  0025BE  3792               	rlcf	??___ftdiv& (0+255),f,b
  9291  0025C0  E301               	bnc	u6901
  9292  0025C2  8193               	bsf	(??___ftdiv+1)& (0+255),0,b
  9293  0025C4                     u6901:
  9294  0025C4  5192               	movf	??___ftdiv& (0+255),w,b
  9295  0025C6  6F99               	movwf	___ftdiv@exp& (0+255),b
  9296  0025C8  5199               	movf	___ftdiv@exp& (0+255),w,b
  9297  0025CA  A4D8               	btfss	status,2,c
  9298  0025CC  D007               	goto	l6017
  9299                           
  9300                           ; BSR set to: 0
  9301  0025CE  0E00               	movlw	0
  9302  0025D0  6F8C               	movwf	?___ftdiv& (0+255),b
  9303  0025D2  0E00               	movlw	0
  9304  0025D4  6F8D               	movwf	(?___ftdiv+1)& (0+255),b
  9305  0025D6  0E00               	movlw	0
  9306  0025D8  6F8E               	movwf	(?___ftdiv+2)& (0+255),b
  9307  0025DA  0012               	return	
  9308  0025DC                     l6017:
  9309                           
  9310                           ; BSR set to: 0
  9311  0025DC  C091  F092         	movff	___ftdiv@f2+2,??___ftdiv
  9312  0025E0  6B93               	clrf	(??___ftdiv+1)& (0+255),b
  9313  0025E2  6B94               	clrf	(??___ftdiv+2)& (0+255),b
  9314  0025E4  3590               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9315  0025E6  3792               	rlcf	??___ftdiv& (0+255),f,b
  9316  0025E8  E301               	bnc	u6921
  9317  0025EA  8193               	bsf	(??___ftdiv+1)& (0+255),0,b
  9318  0025EC                     u6921:
  9319  0025EC  5192               	movf	??___ftdiv& (0+255),w,b
  9320  0025EE  6F9A               	movwf	___ftdiv@sign& (0+255),b
  9321  0025F0  519A               	movf	___ftdiv@sign& (0+255),w,b
  9322  0025F2  A4D8               	btfss	status,2,c
  9323  0025F4  D007               	goto	l6023
  9324                           
  9325                           ; BSR set to: 0
  9326  0025F6  0E00               	movlw	0
  9327  0025F8  6F8C               	movwf	?___ftdiv& (0+255),b
  9328  0025FA  0E00               	movlw	0
  9329  0025FC  6F8D               	movwf	(?___ftdiv+1)& (0+255),b
  9330  0025FE  0E00               	movlw	0
  9331  002600  6F8E               	movwf	(?___ftdiv+2)& (0+255),b
  9332  002602  0012               	return	
  9333  002604                     l6023:
  9334                           
  9335                           ; BSR set to: 0
  9336  002604  0E00               	movlw	0
  9337  002606  6F96               	movwf	___ftdiv@f3& (0+255),b
  9338  002608  0E00               	movlw	0
  9339  00260A  6F97               	movwf	(___ftdiv@f3+1)& (0+255),b
  9340  00260C  0E00               	movlw	0
  9341  00260E  6F98               	movwf	(___ftdiv@f3+2)& (0+255),b
  9342                           
  9343                           ; BSR set to: 0
  9344  002610  519A               	movf	___ftdiv@sign& (0+255),w,b
  9345  002612  0F89               	addlw	137
  9346  002614  5F99               	subwf	___ftdiv@exp& (0+255),f,b
  9347                           
  9348                           ; BSR set to: 0
  9349  002616  C08E  F09A         	movff	___ftdiv@f1+2,___ftdiv@sign
  9350                           
  9351                           ; BSR set to: 0
  9352  00261A  5191               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9353  00261C  1B9A               	xorwf	___ftdiv@sign& (0+255),f,b
  9354                           
  9355                           ; BSR set to: 0
  9356  00261E  0E80               	movlw	128
  9357  002620  179A               	andwf	___ftdiv@sign& (0+255),f,b
  9358                           
  9359                           ; BSR set to: 0
  9360  002622  8F8D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9361                           
  9362                           ; BSR set to: 0
  9363  002624  0EFF               	movlw	255
  9364  002626  178C               	andwf	___ftdiv@f1& (0+255),f,b
  9365  002628  0EFF               	movlw	255
  9366  00262A  178D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9367  00262C  0E00               	movlw	0
  9368  00262E  178E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9369                           
  9370                           ; BSR set to: 0
  9371  002630  8F90               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9372                           
  9373                           ; BSR set to: 0
  9374  002632  0EFF               	movlw	255
  9375  002634  178F               	andwf	___ftdiv@f2& (0+255),f,b
  9376  002636  0EFF               	movlw	255
  9377  002638  1790               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9378  00263A  0E00               	movlw	0
  9379  00263C  1791               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9380                           
  9381                           ; BSR set to: 0
  9382  00263E  0E18               	movlw	24
  9383  002640  6F95               	movwf	___ftdiv@cntr& (0+255),b
  9384  002642                     l6043:
  9385                           
  9386                           ; BSR set to: 0
  9387  002642  90D8               	bcf	status,0,c
  9388  002644  3796               	rlcf	___ftdiv@f3& (0+255),f,b
  9389  002646  3797               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9390  002648  3798               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9391                           
  9392                           ; BSR set to: 0
  9393  00264A  518F               	movf	___ftdiv@f2& (0+255),w,b
  9394  00264C  5D8C               	subwf	___ftdiv@f1& (0+255),w,b
  9395  00264E  5190               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9396  002650  598D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9397  002652  5191               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9398  002654  598E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9399  002656  A0D8               	btfss	status,0,c
  9400  002658  D007               	goto	l939
  9401                           
  9402                           ; BSR set to: 0
  9403  00265A  518F               	movf	___ftdiv@f2& (0+255),w,b
  9404  00265C  5F8C               	subwf	___ftdiv@f1& (0+255),f,b
  9405  00265E  5190               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9406  002660  5B8D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9407  002662  5191               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9408  002664  5B8E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9409                           
  9410                           ; BSR set to: 0
  9411  002666  8196               	bsf	___ftdiv@f3& (0+255),0,b
  9412  002668                     l939:
  9413                           
  9414                           ; BSR set to: 0
  9415  002668  90D8               	bcf	status,0,c
  9416  00266A  378C               	rlcf	___ftdiv@f1& (0+255),f,b
  9417  00266C  378D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9418  00266E  378E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9419                           
  9420                           ; BSR set to: 0
  9421  002670  2F95               	decfsz	___ftdiv@cntr& (0+255),f,b
  9422  002672  D7E7               	goto	l6043
  9423                           
  9424                           ; BSR set to: 0
  9425  002674  C096  F080         	movff	___ftdiv@f3,___ftpack@arg
  9426  002678  C097  F081         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9427  00267C  C098  F082         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9428  002680  C099  F083         	movff	___ftdiv@exp,___ftpack@exp
  9429  002684  C09A  F084         	movff	___ftdiv@sign,___ftpack@sign
  9430  002688  EC94  F014         	call	___ftpack	;wreg free
  9431  00268C  C080  F08C         	movff	?___ftpack,?___ftdiv
  9432  002690  C081  F08D         	movff	?___ftpack+1,?___ftdiv+1
  9433  002694  C082  F08E         	movff	?___ftpack+2,?___ftdiv+2
  9434                           
  9435                           ; BSR set to: 0
  9436  002698  0012               	return		;funcret
  9437  00269A                     __end_of___ftdiv:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function ___ftadd *****************
  9441 ;; Defined at:
  9442 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftadd.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  f1              3   62[BANK0 ] float 
  9445 ;;  f2              3   65[BANK0 ] float 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  exp1            1   73[BANK0 ] unsigned char 
  9448 ;;  exp2            1   72[BANK0 ] unsigned char 
  9449 ;;  sign            1   71[BANK0 ] unsigned char 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  3   62[BANK0 ] float 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2, status,0, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 3F/0
  9456 ;;		On exit  : 3F/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9459 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;Total ram usage:       12 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    5
  9466 ;; This function calls:
  9467 ;;		___ftpack
  9468 ;; This function is called by:
  9469 ;;		_set_pwm1_percent
  9470 ;;		_autoHeat
  9471 ;;		_sprintf
  9472 ;;		___ftsub
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text38
  9477  001BF0                     __ptext38:
  9478                           	callstack 0
  9479  001BF0                     ___ftadd:
  9480                           	callstack 23
  9481                           
  9482                           ; BSR set to: 0
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;incstack = 0
  9486  001BF0  C0C0  F0C4         	movff	___ftadd@f1+2,??___ftadd
  9487  001BF4  6BC5               	clrf	(??___ftadd+1)& (0+255),b
  9488  001BF6  6BC6               	clrf	(??___ftadd+2)& (0+255),b
  9489  001BF8  35BF               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9490  001BFA  37C4               	rlcf	??___ftadd& (0+255),f,b
  9491  001BFC  E301               	bnc	u6191
  9492  001BFE  81C5               	bsf	(??___ftadd+1)& (0+255),0,b
  9493  001C00                     u6191:
  9494  001C00  51C4               	movf	??___ftadd& (0+255),w,b
  9495  001C02  6FC9               	movwf	___ftadd@exp1& (0+255),b
  9496  001C04  C0C3  F0C4         	movff	___ftadd@f2+2,??___ftadd
  9497  001C08  6BC5               	clrf	(??___ftadd+1)& (0+255),b
  9498  001C0A  6BC6               	clrf	(??___ftadd+2)& (0+255),b
  9499  001C0C  35C2               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  9500  001C0E  37C4               	rlcf	??___ftadd& (0+255),f,b
  9501  001C10  E301               	bnc	u6201
  9502  001C12  81C5               	bsf	(??___ftadd+1)& (0+255),0,b
  9503  001C14                     u6201:
  9504  001C14  51C4               	movf	??___ftadd& (0+255),w,b
  9505  001C16  6FC8               	movwf	___ftadd@exp2& (0+255),b
  9506                           
  9507                           ; BSR set to: 0
  9508  001C18  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9509  001C1A  B4D8               	btfsc	status,2,c
  9510  001C1C  D00A               	goto	u6230
  9511                           
  9512                           ; BSR set to: 0
  9513  001C1E  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9514  001C20  5DC9               	subwf	___ftadd@exp1& (0+255),w,b
  9515  001C22  B0D8               	btfsc	status,0,c
  9516  001C24  D00D               	goto	l5551
  9517                           
  9518                           ; BSR set to: 0
  9519  001C26  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9520  001C28  5DC8               	subwf	___ftadd@exp2& (0+255),w,b
  9521  001C2A  6FC4               	movwf	??___ftadd& (0+255),b
  9522  001C2C  0E18               	movlw	24
  9523  001C2E  65C4               	cpfsgt	??___ftadd& (0+255),b
  9524  001C30  D007               	goto	l5551
  9525  001C32                     u6230:
  9526                           
  9527                           ; BSR set to: 0
  9528  001C32  C0C1  F0BE         	movff	___ftadd@f2,?___ftadd
  9529  001C36  C0C2  F0BF         	movff	___ftadd@f2+1,?___ftadd+1
  9530  001C3A  C0C3  F0C0         	movff	___ftadd@f2+2,?___ftadd+2
  9531  001C3E  0012               	return	
  9532  001C40                     l5551:
  9533                           
  9534                           ; BSR set to: 0
  9535  001C40  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9536  001C42  B4D8               	btfsc	status,2,c
  9537  001C44  D00A               	goto	u6260
  9538                           
  9539                           ; BSR set to: 0
  9540  001C46  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9541  001C48  5DC8               	subwf	___ftadd@exp2& (0+255),w,b
  9542  001C4A  B0D8               	btfsc	status,0,c
  9543  001C4C  D00D               	goto	l5557
  9544                           
  9545                           ; BSR set to: 0
  9546  001C4E  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9547  001C50  5DC9               	subwf	___ftadd@exp1& (0+255),w,b
  9548  001C52  6FC4               	movwf	??___ftadd& (0+255),b
  9549  001C54  0E18               	movlw	24
  9550  001C56  65C4               	cpfsgt	??___ftadd& (0+255),b
  9551  001C58  D007               	goto	l5557
  9552  001C5A                     u6260:
  9553                           
  9554                           ; BSR set to: 0
  9555  001C5A  C0BE  F0BE         	movff	___ftadd@f1,?___ftadd
  9556  001C5E  C0BF  F0BF         	movff	___ftadd@f1+1,?___ftadd+1
  9557  001C62  C0C0  F0C0         	movff	___ftadd@f1+2,?___ftadd+2
  9558  001C66  0012               	return	
  9559  001C68                     l5557:
  9560                           
  9561                           ; BSR set to: 0
  9562  001C68  0E06               	movlw	6
  9563  001C6A  6FC7               	movwf	___ftadd@sign& (0+255),b
  9564                           
  9565                           ; BSR set to: 0
  9566  001C6C  BFC0               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  9567                           
  9568                           ; BSR set to: 0
  9569  001C6E  8FC7               	bsf	___ftadd@sign& (0+255),7,b
  9570                           
  9571                           ; BSR set to: 0
  9572  001C70  BFC3               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  9573                           
  9574                           ; BSR set to: 0
  9575  001C72  8DC7               	bsf	___ftadd@sign& (0+255),6,b
  9576                           
  9577                           ; BSR set to: 0
  9578  001C74  8FBF               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9579                           
  9580                           ; BSR set to: 0
  9581  001C76  0EFF               	movlw	255
  9582  001C78  17BE               	andwf	___ftadd@f1& (0+255),f,b
  9583  001C7A  0EFF               	movlw	255
  9584  001C7C  17BF               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9585  001C7E  0E00               	movlw	0
  9586  001C80  17C0               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9587  001C82  8FC2               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9588                           
  9589                           ; BSR set to: 0
  9590  001C84  0EFF               	movlw	255
  9591  001C86  17C1               	andwf	___ftadd@f2& (0+255),f,b
  9592  001C88  0EFF               	movlw	255
  9593  001C8A  17C2               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9594  001C8C  0E00               	movlw	0
  9595  001C8E  17C3               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  001C90  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9599  001C92  5DC9               	subwf	___ftadd@exp1& (0+255),w,b
  9600  001C94  B0D8               	btfsc	status,0,c
  9601  001C96  D01B               	goto	l5583
  9602  001C98                     u6290:
  9603                           
  9604                           ; BSR set to: 0
  9605  001C98  90D8               	bcf	status,0,c
  9606  001C9A  37C1               	rlcf	___ftadd@f2& (0+255),f,b
  9607  001C9C  37C2               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9608  001C9E  37C3               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9609  001CA0  07C8               	decf	___ftadd@exp2& (0+255),f,b
  9610                           
  9611                           ; BSR set to: 0
  9612  001CA2  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9613  001CA4  19C8               	xorwf	___ftadd@exp2& (0+255),w,b
  9614  001CA6  B4D8               	btfsc	status,2,c
  9615  001CA8  D00D               	goto	l5581
  9616                           
  9617                           ; BSR set to: 0
  9618  001CAA  07C7               	decf	___ftadd@sign& (0+255),f,b
  9619  001CAC  C0C7  F0C4         	movff	___ftadd@sign,??___ftadd
  9620  001CB0  0E07               	movlw	7
  9621  001CB2  17C4               	andwf	??___ftadd& (0+255),f,b
  9622  001CB4  B4D8               	btfsc	status,2,c
  9623  001CB6  D006               	goto	l5581
  9624  001CB8  D7EF               	goto	u6290
  9625  001CBA                     l5579:
  9626                           
  9627                           ; BSR set to: 0
  9628  001CBA  90D8               	bcf	status,0,c
  9629  001CBC  33C0               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9630  001CBE  33BF               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9631  001CC0  33BE               	rrcf	___ftadd@f1& (0+255),f,b
  9632  001CC2  2BC9               	incf	___ftadd@exp1& (0+255),f,b
  9633  001CC4                     l5581:
  9634                           
  9635                           ; BSR set to: 0
  9636  001CC4  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9637  001CC6  19C9               	xorwf	___ftadd@exp1& (0+255),w,b
  9638  001CC8  B4D8               	btfsc	status,2,c
  9639  001CCA  D01F               	goto	u6360
  9640  001CCC  D7F6               	goto	l5579
  9641  001CCE                     l5583:
  9642                           
  9643                           ; BSR set to: 0
  9644  001CCE  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9645  001CD0  5DC8               	subwf	___ftadd@exp2& (0+255),w,b
  9646  001CD2  B0D8               	btfsc	status,0,c
  9647  001CD4  D01A               	goto	u6360
  9648  001CD6                     u6330:
  9649                           
  9650                           ; BSR set to: 0
  9651  001CD6  90D8               	bcf	status,0,c
  9652  001CD8  37BE               	rlcf	___ftadd@f1& (0+255),f,b
  9653  001CDA  37BF               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9654  001CDC  37C0               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9655  001CDE  07C9               	decf	___ftadd@exp1& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 0
  9658  001CE0  51C9               	movf	___ftadd@exp1& (0+255),w,b
  9659  001CE2  19C8               	xorwf	___ftadd@exp2& (0+255),w,b
  9660  001CE4  B4D8               	btfsc	status,2,c
  9661  001CE6  D00D               	goto	l5593
  9662                           
  9663                           ; BSR set to: 0
  9664  001CE8  07C7               	decf	___ftadd@sign& (0+255),f,b
  9665  001CEA  C0C7  F0C4         	movff	___ftadd@sign,??___ftadd
  9666  001CEE  0E07               	movlw	7
  9667  001CF0  17C4               	andwf	??___ftadd& (0+255),f,b
  9668  001CF2  B4D8               	btfsc	status,2,c
  9669  001CF4  D006               	goto	l5593
  9670  001CF6  D7EF               	goto	u6330
  9671  001CF8                     l5591:
  9672                           
  9673                           ; BSR set to: 0
  9674  001CF8  90D8               	bcf	status,0,c
  9675  001CFA  33C3               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9676  001CFC  33C2               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9677  001CFE  33C1               	rrcf	___ftadd@f2& (0+255),f,b
  9678  001D00  2BC8               	incf	___ftadd@exp2& (0+255),f,b
  9679  001D02                     l5593:
  9680                           
  9681                           ; BSR set to: 0
  9682  001D02  51C8               	movf	___ftadd@exp2& (0+255),w,b
  9683  001D04  19C9               	xorwf	___ftadd@exp1& (0+255),w,b
  9684  001D06  A4D8               	btfss	status,2,c
  9685  001D08  D7F7               	goto	l5591
  9686  001D0A                     u6360:
  9687                           
  9688                           ; BSR set to: 0
  9689  001D0A  AFC7               	btfss	___ftadd@sign& (0+255),7,b
  9690  001D0C  D00C               	goto	l928
  9691                           
  9692                           ; BSR set to: 0
  9693  001D0E  0EFF               	movlw	255
  9694  001D10  1BBE               	xorwf	___ftadd@f1& (0+255),f,b
  9695  001D12  0EFF               	movlw	255
  9696  001D14  1BBF               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9697  001D16  0EFF               	movlw	255
  9698  001D18  1BC0               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9699  001D1A  0E01               	movlw	1
  9700  001D1C  27BE               	addwf	___ftadd@f1& (0+255),f,b
  9701  001D1E  0E00               	movlw	0
  9702  001D20  23BF               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  9703  001D22  0E00               	movlw	0
  9704  001D24  23C0               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  9705  001D26                     l928:
  9706                           
  9707                           ; BSR set to: 0
  9708  001D26  ADC7               	btfss	___ftadd@sign& (0+255),6,b
  9709  001D28  D00C               	goto	l5599
  9710                           
  9711                           ; BSR set to: 0
  9712  001D2A  0EFF               	movlw	255
  9713  001D2C  1BC1               	xorwf	___ftadd@f2& (0+255),f,b
  9714  001D2E  0EFF               	movlw	255
  9715  001D30  1BC2               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9716  001D32  0EFF               	movlw	255
  9717  001D34  1BC3               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9718  001D36  0E01               	movlw	1
  9719  001D38  27C1               	addwf	___ftadd@f2& (0+255),f,b
  9720  001D3A  0E00               	movlw	0
  9721  001D3C  23C2               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9722  001D3E  0E00               	movlw	0
  9723  001D40  23C3               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9724  001D42                     l5599:
  9725                           
  9726                           ; BSR set to: 0
  9727  001D42  0E00               	movlw	0
  9728  001D44  6FC7               	movwf	___ftadd@sign& (0+255),b
  9729                           
  9730                           ; BSR set to: 0
  9731  001D46  51BE               	movf	___ftadd@f1& (0+255),w,b
  9732  001D48  27C1               	addwf	___ftadd@f2& (0+255),f,b
  9733  001D4A  51BF               	movf	(___ftadd@f1+1)& (0+255),w,b
  9734  001D4C  23C2               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9735  001D4E  51C0               	movf	(___ftadd@f1+2)& (0+255),w,b
  9736  001D50  23C3               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9737                           
  9738                           ; BSR set to: 0
  9739  001D52  AFC3               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9740  001D54  D00E               	goto	l5609
  9741                           
  9742                           ; BSR set to: 0
  9743  001D56  0EFF               	movlw	255
  9744  001D58  1BC1               	xorwf	___ftadd@f2& (0+255),f,b
  9745  001D5A  0EFF               	movlw	255
  9746  001D5C  1BC2               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9747  001D5E  0EFF               	movlw	255
  9748  001D60  1BC3               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9749  001D62  0E01               	movlw	1
  9750  001D64  27C1               	addwf	___ftadd@f2& (0+255),f,b
  9751  001D66  0E00               	movlw	0
  9752  001D68  23C2               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9753  001D6A  0E00               	movlw	0
  9754  001D6C  23C3               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9755                           
  9756                           ; BSR set to: 0
  9757  001D6E  0E01               	movlw	1
  9758  001D70  6FC7               	movwf	___ftadd@sign& (0+255),b
  9759  001D72                     l5609:
  9760                           
  9761                           ; BSR set to: 0
  9762  001D72  C0C1  F080         	movff	___ftadd@f2,___ftpack@arg
  9763  001D76  C0C2  F081         	movff	___ftadd@f2+1,___ftpack@arg+1
  9764  001D7A  C0C3  F082         	movff	___ftadd@f2+2,___ftpack@arg+2
  9765  001D7E  C0C9  F083         	movff	___ftadd@exp1,___ftpack@exp
  9766  001D82  C0C7  F084         	movff	___ftadd@sign,___ftpack@sign
  9767  001D86  EC94  F014         	call	___ftpack	;wreg free
  9768  001D8A  C080  F0BE         	movff	?___ftpack,?___ftadd
  9769  001D8E  C081  F0BF         	movff	?___ftpack+1,?___ftadd+1
  9770  001D92  C082  F0C0         	movff	?___ftpack+2,?___ftadd+2
  9771                           
  9772                           ; BSR set to: 0
  9773  001D96  0012               	return		;funcret
  9774  001D98                     __end_of___ftadd:
  9775                           	callstack 0
  9776                           
  9777 ;; *************** function _lcd_puts *****************
  9778 ;; Defined at:
  9779 ;;		line 219 in file "Main.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  s               2   14[BANK0 ] PTR unsigned char 
  9782 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  9783 ;;		 -> STR_6(4), main@Buffer(32), STR_2(3), Buffer(32), 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9790 ;; Tracked objects:
  9791 ;;		On entry : 3E/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;Total ram usage:        2 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    9
  9802 ;; This function calls:
  9803 ;;		_lcd_putc
  9804 ;; This function is called by:
  9805 ;;		_autoCool
  9806 ;;		_autoHeat
  9807 ;;		_main
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text39
  9812  003052                     __ptext39:
  9813                           	callstack 0
  9814  003052                     _lcd_puts:
  9815                           	callstack 21
  9816                           
  9817                           ;Main.c: 220: while (*s) {
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;incstack = 0
  9821  003052  D016               	goto	l6175
  9822  003054                     l6171:
  9823                           
  9824                           ;Main.c: 221: lcd_putc(*s);
  9825  003054  C08E  FFF6         	movff	lcd_puts@s,tblptrl
  9826  003058  C08F  FFF7         	movff	lcd_puts@s+1,tblptrh
  9827  00305C  0E00               	movlw	low (__mediumconst shr (0+16))
  9828  00305E  6EF8               	movwf	tblptru,c
  9829  003060  0E0F               	movlw	(high __ramtop+-1)
  9830  003062  64F7               	cpfsgt	tblptrh,c
  9831  003064  D003               	bra	u7137
  9832  003066  0008               	tblrd		*
  9833  003068  50F5               	movf	tablat,w,c
  9834  00306A  D005               	bra	u7130
  9835  00306C                     u7137:
  9836  00306C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9837  003070  CFF7 FFEA          	movff	tblptrh,fsr0h
  9838  003074  50EF               	movf	indf0,w,c
  9839  003076                     u7130:
  9840  003076  ECCF  F017         	call	_lcd_putc
  9841                           
  9842                           ;Main.c: 222: s++;
  9843  00307A  0100               	movlb	0	; () banked
  9844  00307C  4B8E               	infsnz	lcd_puts@s& (0+255),f,b
  9845  00307E  2B8F               	incf	(lcd_puts@s+1)& (0+255),f,b
  9846  003080                     l6175:
  9847  003080  C08E  FFF6         	movff	lcd_puts@s,tblptrl
  9848  003084  C08F  FFF7         	movff	lcd_puts@s+1,tblptrh
  9849  003088  0E00               	movlw	low (__mediumconst shr (0+16))
  9850  00308A  6EF8               	movwf	tblptru,c
  9851  00308C  0E0F               	movlw	(high __ramtop+-1)
  9852  00308E  64F7               	cpfsgt	tblptrh,c
  9853  003090  D003               	bra	u7147
  9854  003092  0008               	tblrd		*
  9855  003094  50F5               	movf	tablat,w,c
  9856  003096  D005               	bra	u7140
  9857  003098                     u7147:
  9858  003098  CFF6 FFE9          	movff	tblptrl,fsr0l
  9859  00309C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9860  0030A0  50EF               	movf	indf0,w,c
  9861  0030A2                     u7140:
  9862  0030A2  0900               	iorlw	0
  9863  0030A4  B4D8               	btfsc	status,2,c
  9864  0030A6  0012               	return	
  9865  0030A8  D7D5               	goto	l6171
  9866  0030AA                     __end_of_lcd_puts:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _lcd_putc *****************
  9870 ;; Defined at:
  9871 ;;		line 205 in file "Main.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  c               1    wreg     unsigned char 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  c               1   13[BANK0 ] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;Total ram usage:        1 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    8
  9892 ;; This function calls:
  9893 ;;		_delay_ms
  9894 ;;		_lcd_gotoxy
  9895 ;;		_lcd_send_byte
  9896 ;; This function is called by:
  9897 ;;		_lcd_puts
  9898 ;;		_autoHeat
  9899 ;;		_main
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text40
  9904  002F9E                     __ptext40:
  9905                           	callstack 0
  9906  002F9E                     _lcd_putc:
  9907                           	callstack 21
  9908                           
  9909                           ;incstack = 0
  9910                           ;lcd_putc@c stored from wreg
  9911  002F9E  0100               	movlb	0	; () banked
  9912  002FA0  6F8D               	movwf	lcd_putc@c& (0+255),b
  9913                           
  9914                           ;Main.c: 206: switch (c) {
  9915  002FA2  D01F               	goto	l5795
  9916  002FA4                     l5785:
  9917                           
  9918                           ; BSR set to: 0
  9919  002FA4  0E01               	movlw	1
  9920  002FA6  6F88               	movwf	lcd_send_byte@n& (0+255),b
  9921  002FA8  0E00               	movlw	0
  9922  002FAA  EC55  F018         	call	_lcd_send_byte
  9923                           
  9924                           ;Main.c: 208: delay_ms(2);
  9925  002FAE  0E00               	movlw	0
  9926  002FB0  0100               	movlb	0	; () banked
  9927  002FB2  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  9928  002FB4  0E02               	movlw	2
  9929  002FB6  6F80               	movwf	delay_ms@n& (0+255),b
  9930  002FB8  ECBD  F019         	call	_delay_ms	;wreg free
  9931                           
  9932                           ;Main.c: 209: break;
  9933  002FBC  0012               	return	
  9934  002FBE                     l5787:
  9935                           
  9936                           ; BSR set to: 0
  9937  002FBE  0E02               	movlw	2
  9938  002FC0  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  9939  002FC2  0E01               	movlw	1
  9940  002FC4  ECA3  F018         	call	_lcd_gotoxy
  9941                           
  9942                           ;Main.c: 211: break;
  9943  002FC8  0012               	return	
  9944  002FCA                     l5789:
  9945                           
  9946                           ; BSR set to: 0
  9947  002FCA  0E10               	movlw	16
  9948  002FCC  6F88               	movwf	lcd_send_byte@n& (0+255),b
  9949  002FCE  0E00               	movlw	0
  9950  002FD0  EC55  F018         	call	_lcd_send_byte
  9951                           
  9952                           ;Main.c: 213: break;
  9953  002FD4  0012               	return	
  9954  002FD6                     l5791:
  9955                           
  9956                           ; BSR set to: 0
  9957  002FD6  C08D  F088         	movff	lcd_putc@c,lcd_send_byte@n
  9958  002FDA  0E01               	movlw	1
  9959  002FDC  EC55  F018         	call	_lcd_send_byte
  9960                           
  9961                           ;Main.c: 215: break;
  9962  002FE0  0012               	return	
  9963  002FE2                     l5795:
  9964  002FE2  0100               	movlb	0	; () banked
  9965  002FE4  518D               	movf	lcd_putc@c& (0+255),w,b
  9966                           
  9967                           ; Switch size 1, requested type "simple"
  9968                           ; Number of cases is 3, Range of values is 8 to 12
  9969                           ; switch strategies available:
  9970                           ; Name         Instructions Cycles
  9971                           ; simple_byte           10     6 (average)
  9972                           ;	Chosen strategy is simple_byte
  9973  002FE6  0A08               	xorlw	8	; case 8
  9974  002FE8  B4D8               	btfsc	status,2,c
  9975  002FEA  D7EF               	goto	l5789
  9976  002FEC  0A02               	xorlw	2	; case 10
  9977  002FEE  B4D8               	btfsc	status,2,c
  9978  002FF0  D7E6               	goto	l5787
  9979  002FF2  0A06               	xorlw	6	; case 12
  9980  002FF4  B4D8               	btfsc	status,2,c
  9981  002FF6  D7D6               	goto	l5785
  9982  002FF8  D7EE               	goto	l5791
  9983  002FFA                     __end_of_lcd_putc:
  9984                           	callstack 0
  9985                           
  9986 ;; *************** function _lcd_gotoxy *****************
  9987 ;; Defined at:
  9988 ;;		line 188 in file "Main.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  x               1    wreg     unsigned char 
  9991 ;;  y               1   10[BANK0 ] unsigned char 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  x               1   11[BANK0 ] unsigned char 
  9994 ;;  address         1   12[BANK0 ] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 3F/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10004 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;Total ram usage:        3 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    7
 10011 ;; This function calls:
 10012 ;;		_lcd_send_byte
 10013 ;; This function is called by:
 10014 ;;		_lcd_putc
 10015 ;;		_autoCool
 10016 ;;		_autoHeat
 10017 ;;		_main
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text41
 10022  003146                     __ptext41:
 10023                           	callstack 0
 10024  003146                     _lcd_gotoxy:
 10025                           	callstack 21
 10026                           
 10027                           ;incstack = 0
 10028                           ;lcd_gotoxy@x stored from wreg
 10029  003146  6F8B               	movwf	lcd_gotoxy@x& (0+255),b
 10030                           
 10031                           ;Main.c: 189: unsigned char address;;Main.c: 191: switch (y) {
 10032  003148  D009               	goto	l5537
 10033  00314A                     l5527:
 10034                           
 10035                           ; BSR set to: 0
 10036  00314A  0E80               	movlw	128
 10037  00314C  D005               	goto	L16
 10038  00314E                     l5529:
 10039                           
 10040                           ; BSR set to: 0
 10041  00314E  0EC0               	movlw	192
 10042  003150  D003               	goto	L16
 10043  003152                     l5531:
 10044                           
 10045                           ; BSR set to: 0
 10046  003152  0E90               	movlw	144
 10047  003154  D001               	goto	L16
 10048  003156                     l5533:
 10049                           
 10050                           ; BSR set to: 0
 10051  003156  0ED0               	movlw	208
 10052  003158                     L16:
 10053  003158  6F8C               	movwf	lcd_gotoxy@address& (0+255),b
 10054                           
 10055                           ;Main.c: 199: break;
 10056  00315A  D00E               	goto	l5539
 10057  00315C                     l5537:
 10058  00315C  0100               	movlb	0	; () banked
 10059  00315E  518A               	movf	lcd_gotoxy@y& (0+255),w,b
 10060                           
 10061                           ; Switch size 1, requested type "simple"
 10062                           ; Number of cases is 4, Range of values is 1 to 4
 10063                           ; switch strategies available:
 10064                           ; Name         Instructions Cycles
 10065                           ; simple_byte           13     7 (average)
 10066                           ;	Chosen strategy is simple_byte
 10067  003160  0A01               	xorlw	1	; case 1
 10068  003162  B4D8               	btfsc	status,2,c
 10069  003164  D7F2               	goto	l5527
 10070  003166  0A03               	xorlw	3	; case 2
 10071  003168  B4D8               	btfsc	status,2,c
 10072  00316A  D7F1               	goto	l5529
 10073  00316C  0A01               	xorlw	1	; case 3
 10074  00316E  B4D8               	btfsc	status,2,c
 10075  003170  D7F0               	goto	l5531
 10076  003172  0A07               	xorlw	7	; case 4
 10077  003174  B4D8               	btfsc	status,2,c
 10078  003176  D7EF               	goto	l5533
 10079  003178                     l5539:
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;Main.c: 201: address += x - 1;
 10083  003178  058B               	decf	lcd_gotoxy@x& (0+255),w,b
 10084  00317A  278C               	addwf	lcd_gotoxy@address& (0+255),f,b
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;Main.c: 202: lcd_send_byte(0, (unsigned char) (0x80 | address));
 10088  00317C  518C               	movf	lcd_gotoxy@address& (0+255),w,b
 10089  00317E  0980               	iorlw	128
 10090  003180  6F88               	movwf	lcd_send_byte@n& (0+255),b
 10091  003182  0E00               	movlw	0
 10092  003184  EC55  F018         	call	_lcd_send_byte
 10093  003188  0012               	return		;funcret
 10094  00318A                     __end_of_lcd_gotoxy:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _lcd_send_byte *****************
 10098 ;; Defined at:
 10099 ;;		line 162 in file "Main.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  cm_data         1    wreg     unsigned char 
 10102 ;;  n               1    8[BANK0 ] unsigned char 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  cm_data         1    9[BANK0 ] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10114 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:        2 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    6
 10121 ;; This function calls:
 10122 ;;		_delay_cycles
 10123 ;;		_delay_ms
 10124 ;;		_lcd_send_nibble
 10125 ;; This function is called by:
 10126 ;;		_lcd_init
 10127 ;;		_lcd_gotoxy
 10128 ;;		_lcd_putc
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text42
 10133  0030AA                     __ptext42:
 10134                           	callstack 0
 10135  0030AA                     _lcd_send_byte:
 10136                           	callstack 22
 10137                           
 10138                           ;incstack = 0
 10139                           ;lcd_send_byte@cm_data stored from wreg
 10140  0030AA  0100               	movlb	0	; () banked
 10141  0030AC  6F89               	movwf	lcd_send_byte@cm_data& (0+255),b
 10142                           
 10143                           ;Main.c: 163: PORTEbits.RE2 = cm_data;
 10144  0030AE  0100               	movlb	0	; () banked
 10145  0030B0  B189               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 10146  0030B2  D002               	bra	u6095
 10147  0030B4  9484               	bcf	132,2,c	;volatile
 10148  0030B6  D001               	bra	u6096
 10149  0030B8                     u6095:
 10150  0030B8  8484               	bsf	132,2,c	;volatile
 10151  0030BA                     u6096:
 10152                           
 10153                           ;Main.c: 164: delay_cycles(1);
 10154  0030BA  0E01               	movlw	1
 10155  0030BC  EC5F  F019         	call	_delay_cycles
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;Main.c: 165: delay_cycles(1);
 10159  0030C0  0E01               	movlw	1
 10160  0030C2  EC5F  F019         	call	_delay_cycles
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;Main.c: 166: PORTEbits.RE1 = 0;
 10164  0030C6  9284               	bcf	132,1,c	;volatile
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;Main.c: 167: lcd_send_nibble(n >> 4);
 10168  0030C8  3988               	swapf	lcd_send_byte@n& (0+255),w,b
 10169  0030CA  0B0F               	andlw	15
 10170  0030CC  ECF7  F019         	call	_lcd_send_nibble
 10171                           
 10172                           ;Main.c: 168: lcd_send_nibble(n & 0x0f);
 10173  0030D0  0100               	movlb	0	; () banked
 10174  0030D2  5188               	movf	lcd_send_byte@n& (0+255),w,b
 10175  0030D4  0B0F               	andlw	15
 10176  0030D6  ECF7  F019         	call	_lcd_send_nibble
 10177                           
 10178                           ;Main.c: 169: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 10179  0030DA  0100               	movlb	0	; () banked
 10180  0030DC  5189               	movf	lcd_send_byte@cm_data& (0+255),w,b
 10181  0030DE  B4D8               	btfsc	status,2,c
 10182  0030E0  D005               	goto	l5487
 10183                           
 10184                           ; BSR set to: 0
 10185  0030E2  0E32               	movlw	50
 10186  0030E4                     u8237:
 10187  0030E4  0004               	clrwdt	
 10188  0030E6  2EE8               	decfsz	wreg,f,c
 10189  0030E8  D7FD               	bra	u8237
 10190  0030EA  0012               	return	
 10191  0030EC                     l5487:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;Main.c: 170: else delay_ms(2);
 10195  0030EC  0E00               	movlw	0
 10196  0030EE  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 10197  0030F0  0E02               	movlw	2
 10198  0030F2  6F80               	movwf	delay_ms@n& (0+255),b
 10199  0030F4  ECBD  F019         	call	_delay_ms	;wreg free
 10200  0030F8  0012               	return		;funcret
 10201  0030FA                     __end_of_lcd_send_byte:
 10202                           	callstack 0
 10203                           
 10204 ;; *************** function _lcd_send_nibble *****************
 10205 ;; Defined at:
 10206 ;;		line 154 in file "Main.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  n               1    wreg     unsigned char 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  n               1    7[BANK0 ] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;Total ram usage:        2 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    5
 10227 ;; This function calls:
 10228 ;;		_delay_cycles
 10229 ;; This function is called by:
 10230 ;;		_lcd_send_byte
 10231 ;;		_lcd_init
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text43
 10236  0033EE                     __ptext43:
 10237                           	callstack 0
 10238  0033EE                     _lcd_send_nibble:
 10239                           	callstack 22
 10240                           
 10241                           ;incstack = 0
 10242                           ;lcd_send_nibble@n stored from wreg
 10243  0033EE  0100               	movlb	0	; () banked
 10244  0033F0  6F87               	movwf	lcd_send_nibble@n& (0+255),b
 10245                           
 10246                           ;Main.c: 155: lcd.data = n;
 10247  0033F2  C087  F086         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 10248  0033F6  0100               	movlb	0	; () banked
 10249  0033F8  3B86               	swapf	??_lcd_send_nibble& (0+255),f,b
 10250  0033FA  5083               	movf	131,w,c
 10251  0033FC  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10252  0033FE  0B0F               	andlw	-241
 10253  003400  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 10254  003402  6E83               	movwf	131,c
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;Main.c: 156: delay_cycles(1);
 10258  003404  0E01               	movlw	1
 10259  003406  EC5F  F019         	call	_delay_cycles
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;Main.c: 157: PORTEbits.RE1 = 1;
 10263  00340A  8284               	bsf	132,1,c	;volatile
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;Main.c: 158: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 10267  00340C  0004               	clrwdt	
 10268  00340E  F000               	nop		;2 cycle nop
 10269                           
 10270                           ;Main.c: 159: PORTEbits.RE1 = 0;
 10271  003410  9284               	bcf	132,1,c	;volatile
 10272  003412  0012               	return		;funcret
 10273  003414                     __end_of_lcd_send_nibble:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _delay_cycles *****************
 10277 ;; Defined at:
 10278 ;;		line 149 in file "Main.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  n               1    wreg     unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  n               1    3[BANK0 ] unsigned char 
 10283 ;;  x               2    4[BANK0 ] int 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 3F/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;Total ram usage:        6 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    4
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_lcd_send_nibble
 10304 ;;		_lcd_send_byte
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text44
 10309  0032BE                     __ptext44:
 10310                           	callstack 0
 10311  0032BE                     _delay_cycles:
 10312                           	callstack 22
 10313                           
 10314                           ;incstack = 0
 10315                           ;delay_cycles@n stored from wreg
 10316  0032BE  0100               	movlb	0	; () banked
 10317  0032C0  6F83               	movwf	delay_cycles@n& (0+255),b
 10318                           
 10319                           ;Main.c: 150: int x;;Main.c: 151: for (x = 0; x <= n; x++) asm(" clrwdt");
 10320  0032C2  0E00               	movlw	0
 10321  0032C4  0100               	movlb	0	; () banked
 10322  0032C6  6F85               	movwf	(delay_cycles@x+1)& (0+255),b
 10323  0032C8  0E00               	movlw	0
 10324  0032CA  6F84               	movwf	delay_cycles@x& (0+255),b
 10325  0032CC  D004               	goto	l5453
 10326  0032CE                     l175:
 10327                           
 10328                           ; BSR set to: 0
 10329  0032CE  0004               	clrwdt		;# 
 10330  0032D0  0100               	movlb	0	; () banked
 10331  0032D2  4B84               	infsnz	delay_cycles@x& (0+255),f,b
 10332  0032D4  2B85               	incf	(delay_cycles@x+1)& (0+255),f,b
 10333  0032D6                     l5453:
 10334                           
 10335                           ; BSR set to: 0
 10336  0032D6  5183               	movf	delay_cycles@n& (0+255),w,b
 10337  0032D8  6F80               	movwf	??_delay_cycles& (0+255),b
 10338  0032DA  6B81               	clrf	(??_delay_cycles+1)& (0+255),b
 10339  0032DC  5184               	movf	delay_cycles@x& (0+255),w,b
 10340  0032DE  5D80               	subwf	??_delay_cycles& (0+255),w,b
 10341  0032E0  5181               	movf	(??_delay_cycles+1)& (0+255),w,b
 10342  0032E2  0A80               	xorlw	128
 10343  0032E4  6F82               	movwf	(??_delay_cycles+2)& (0+255),b
 10344  0032E6  5185               	movf	(delay_cycles@x+1)& (0+255),w,b
 10345  0032E8  0A80               	xorlw	128
 10346  0032EA  5982               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 10347  0032EC  A0D8               	btfss	status,0,c
 10348  0032EE  0012               	return	
 10349  0032F0  D7EE               	goto	l175
 10350  0032F2                     __end_of_delay_cycles:
 10351                           	callstack 0
 10352                           
 10353 ;; *************** function _delay_ms *****************
 10354 ;; Defined at:
 10355 ;;		line 121 in file "Main.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  n               2    0[BANK0 ] unsigned int 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  i               2    2[BANK0 ] int 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg, status,2, status,0
 10364 ;; Tracked objects:
 10365 ;;		On entry : 3F/0
 10366 ;;		On exit  : 3F/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;Total ram usage:        4 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    4
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		_lcd_send_byte
 10380 ;;		_lcd_init
 10381 ;;		_lcd_putc
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text45
 10386  00337A                     __ptext45:
 10387                           	callstack 0
 10388  00337A                     _delay_ms:
 10389                           	callstack 23
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;Main.c: 122: int i;;Main.c: 123: for (i=0; i < n; i++) _delaywdt((unsigned long)((1)*(4
      +                          000000UL/4000.0))) ;
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;incstack = 0
 10396  00337A  0E00               	movlw	0
 10397  00337C  6F83               	movwf	(delay_ms@i+1)& (0+255),b
 10398  00337E  0E00               	movlw	0
 10399  003380  6F82               	movwf	delay_ms@i& (0+255),b
 10400  003382  D008               	goto	l156
 10401  003384                     l5457:
 10402                           
 10403                           ; BSR set to: 0
 10404  003384  0EC8               	movlw	200
 10405  003386                     u8247:
 10406  003386  0004               	clrwdt	
 10407  003388  0004               	clrwdt	
 10408  00338A  2EE8               	decfsz	wreg,f,c
 10409  00338C  D7FC               	bra	u8247
 10410  00338E  0100               	movlb	0	; () banked
 10411  003390  4B82               	infsnz	delay_ms@i& (0+255),f,b
 10412  003392  2B83               	incf	(delay_ms@i+1)& (0+255),f,b
 10413  003394                     l156:
 10414                           
 10415                           ; BSR set to: 0
 10416  003394  5180               	movf	delay_ms@n& (0+255),w,b
 10417  003396  5D82               	subwf	delay_ms@i& (0+255),w,b
 10418  003398  5181               	movf	(delay_ms@n+1)& (0+255),w,b
 10419  00339A  5983               	subwfb	(delay_ms@i+1)& (0+255),w,b
 10420  00339C  B0D8               	btfsc	status,0,c
 10421  00339E  0012               	return	
 10422  0033A0  D7F1               	goto	l5457
 10423  0033A2                     __end_of_delay_ms:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function ___lwtoft *****************
 10427 ;; Defined at:
 10428 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwtoft.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  c               2    8[BANK0 ] unsigned int 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;		None
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  3    8[BANK0 ] float 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2, status,0, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 3F/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;Total ram usage:        3 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:    5
 10449 ;; This function calls:
 10450 ;;		___ftpack
 10451 ;; This function is called by:
 10452 ;;		_autoCool
 10453 ;;		_autoHeat
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text46
 10458  003414                     __ptext46:
 10459                           	callstack 0
 10460  003414                     ___lwtoft:
 10461                           	callstack 24
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;incstack = 0
 10465  003414  C088  F080         	movff	___lwtoft@c,___ftpack@arg
 10466  003418  C089  F081         	movff	___lwtoft@c+1,___ftpack@arg+1
 10467  00341C  0100               	movlb	0	; () banked
 10468  00341E  6B82               	clrf	(___ftpack@arg+2)& (0+255),b
 10469  003420  0E8E               	movlw	142
 10470  003422  6F83               	movwf	___ftpack@exp& (0+255),b
 10471  003424  0E00               	movlw	0
 10472  003426  6F84               	movwf	___ftpack@sign& (0+255),b
 10473  003428  EC94  F014         	call	___ftpack	;wreg free
 10474  00342C  C080  F088         	movff	?___ftpack,?___lwtoft
 10475  003430  C081  F089         	movff	?___ftpack+1,?___lwtoft+1
 10476  003434  C082  F08A         	movff	?___ftpack+2,?___lwtoft+2
 10477                           
 10478                           ; BSR set to: 0
 10479  003438  0012               	return		;funcret
 10480  00343A                     __end_of___lwtoft:
 10481                           	callstack 0
 10482                           
 10483 ;; *************** function ___ftpack *****************
 10484 ;; Defined at:
 10485 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\float.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  arg             3    0[BANK0 ] unsigned um
 10488 ;;  exp             1    3[BANK0 ] unsigned char 
 10489 ;;  sign            1    4[BANK0 ] unsigned char 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  3    0[BANK0 ] float 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 3F/0
 10498 ;;		On exit  : 3F/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10501 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;Total ram usage:        8 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    4
 10508 ;; This function calls:
 10509 ;;		Nothing
 10510 ;; This function is called by:
 10511 ;;		___awtoft
 10512 ;;		___ftadd
 10513 ;;		___ftdiv
 10514 ;;		___ftmul
 10515 ;;		___lltoft
 10516 ;;		___lwtoft
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text47
 10521  002928                     __ptext47:
 10522                           	callstack 0
 10523  002928                     ___ftpack:
 10524                           	callstack 23
 10525                           
 10526                           ; BSR set to: 0
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;incstack = 0
 10530  002928  5183               	movf	___ftpack@exp& (0+255),w,b
 10531  00292A  B4D8               	btfsc	status,2,c
 10532  00292C  D005               	goto	u6120
 10533                           
 10534                           ; BSR set to: 0
 10535  00292E  5180               	movf	___ftpack@arg& (0+255),w,b
 10536  002930  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10537  002932  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10538  002934  A4D8               	btfss	status,2,c
 10539  002936  D00C               	goto	l5499
 10540  002938                     u6120:
 10541                           
 10542                           ; BSR set to: 0
 10543  002938  0E00               	movlw	0
 10544  00293A  6F80               	movwf	?___ftpack& (0+255),b
 10545  00293C  0E00               	movlw	0
 10546  00293E  6F81               	movwf	(?___ftpack+1)& (0+255),b
 10547  002940  0E00               	movlw	0
 10548  002942  6F82               	movwf	(?___ftpack+2)& (0+255),b
 10549  002944  0012               	return	
 10550  002946                     l5497:
 10551                           
 10552                           ; BSR set to: 0
 10553  002946  2B83               	incf	___ftpack@exp& (0+255),f,b
 10554  002948  90D8               	bcf	status,0,c
 10555  00294A  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10556  00294C  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10557  00294E  3380               	rrcf	___ftpack@arg& (0+255),f,b
 10558  002950                     l5499:
 10559                           
 10560                           ; BSR set to: 0
 10561  002950  0E00               	movlw	0
 10562  002952  1580               	andwf	___ftpack@arg& (0+255),w,b
 10563  002954  6F85               	movwf	??___ftpack& (0+255),b
 10564  002956  0E00               	movlw	0
 10565  002958  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10566  00295A  6F86               	movwf	(??___ftpack+1)& (0+255),b
 10567  00295C  0EFE               	movlw	254
 10568  00295E  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10569  002960  6F87               	movwf	(??___ftpack+2)& (0+255),b
 10570  002962  5185               	movf	??___ftpack& (0+255),w,b
 10571  002964  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 10572  002966  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 10573  002968  B4D8               	btfsc	status,2,c
 10574  00296A  D00C               	goto	l5505
 10575  00296C  D7EC               	goto	l5497
 10576  00296E                     l5501:
 10577                           
 10578                           ; BSR set to: 0
 10579  00296E  2B83               	incf	___ftpack@exp& (0+255),f,b
 10580                           
 10581                           ; BSR set to: 0
 10582  002970  0E01               	movlw	1
 10583  002972  2780               	addwf	___ftpack@arg& (0+255),f,b
 10584  002974  0E00               	movlw	0
 10585  002976  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10586  002978  0E00               	movlw	0
 10587  00297A  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10588  00297C  90D8               	bcf	status,0,c
 10589  00297E  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10590  002980  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10591  002982  3380               	rrcf	___ftpack@arg& (0+255),f,b
 10592  002984                     l5505:
 10593                           
 10594                           ; BSR set to: 0
 10595  002984  0E00               	movlw	0
 10596  002986  1580               	andwf	___ftpack@arg& (0+255),w,b
 10597  002988  6F85               	movwf	??___ftpack& (0+255),b
 10598  00298A  0E00               	movlw	0
 10599  00298C  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10600  00298E  6F86               	movwf	(??___ftpack+1)& (0+255),b
 10601  002990  0EFF               	movlw	255
 10602  002992  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10603  002994  6F87               	movwf	(??___ftpack+2)& (0+255),b
 10604  002996  5185               	movf	??___ftpack& (0+255),w,b
 10605  002998  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
 10606  00299A  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
 10607  00299C  B4D8               	btfsc	status,2,c
 10608  00299E  D006               	goto	l5509
 10609  0029A0  D7E6               	goto	l5501
 10610  0029A2                     l5507:
 10611                           
 10612                           ; BSR set to: 0
 10613  0029A2  0783               	decf	___ftpack@exp& (0+255),f,b
 10614  0029A4  90D8               	bcf	status,0,c
 10615  0029A6  3780               	rlcf	___ftpack@arg& (0+255),f,b
 10616  0029A8  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10617  0029AA  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10618  0029AC                     l5509:
 10619                           
 10620                           ; BSR set to: 0
 10621  0029AC  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10622  0029AE  D003               	goto	u6160
 10623                           
 10624                           ; BSR set to: 0
 10625  0029B0  0E02               	movlw	2
 10626  0029B2  6183               	cpfslt	___ftpack@exp& (0+255),b
 10627  0029B4  D7F6               	goto	l5507
 10628  0029B6                     u6160:
 10629                           
 10630                           ; BSR set to: 0
 10631  0029B6  A183               	btfss	___ftpack@exp& (0+255),0,b
 10632                           
 10633                           ; BSR set to: 0
 10634  0029B8  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10635                           
 10636                           ; BSR set to: 0
 10637  0029BA  90D8               	bcf	status,0,c
 10638  0029BC  3383               	rrcf	___ftpack@exp& (0+255),f,b
 10639  0029BE  5183               	movf	___ftpack@exp& (0+255),w,b
 10640  0029C0  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10641                           
 10642                           ; BSR set to: 0
 10643  0029C2  5184               	movf	___ftpack@sign& (0+255),w,b
 10644  0029C4  A4D8               	btfss	status,2,c
 10645                           
 10646                           ; BSR set to: 0
 10647  0029C6  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10648                           
 10649                           ; BSR set to: 0
 10650  0029C8  C080  F080         	movff	___ftpack@arg,?___ftpack
 10651  0029CC  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
 10652  0029D0  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
 10653                           
 10654                           ; BSR set to: 0
 10655  0029D4  0012               	return		;funcret
 10656  0029D6                     __end_of___ftpack:
 10657                           	callstack 0
 10658                           
 10659 ;; *************** function _highIsr *****************
 10660 ;; Defined at:
 10661 ;;		line 311 in file "Main.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;		None
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      void 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0, cstack
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10679 ;;Total ram usage:        5 bytes
 10680 ;; Hardware stack levels used:    1
 10681 ;; Hardware stack levels required when called:    3
 10682 ;; This function calls:
 10683 ;;		_changeOperationMode
 10684 ;;		_decrementHS
 10685 ;;		_decrementPercentCoolCounter
 10686 ;;		_decrementPercentHeatCounter
 10687 ;;		_incrementHS
 10688 ;;		_incrementPercentCoolCounter
 10689 ;;		_incrementPercentHeatCounter
 10690 ;;		_restartTimer3
 10691 ;;		i2___ftge
 10692 ;;		i2___ftmul
 10693 ;;		i2___ftsub
 10694 ;;		i2___lwtoft
 10695 ;;		i2_set_pwm1_percent
 10696 ;; This function is called by:
 10697 ;;		Interrupt level 2
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	intcode
 10702  000008                     __pintcode:
 10703                           	callstack 0
 10704  000008                     _highIsr:
 10705                           	callstack 20
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;incstack = 0
 10709  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10710  00000A  ED21  F00B         	call	int_func,f	;refresh shadow registers
 10711                           
 10712                           	psect	intcode_body
 10713  001642                     __pintcode_body:
 10714                           	callstack 20
 10715  001642                     int_func:
 10716                           	callstack 20
 10717  001642  0006               	pop		; remove dummy address from shadow register refresh
 10718                           
 10719                           ;Main.c: 313: if(PIR2bits.TMR3IF) {
 10720  001644  A2A1               	btfss	161,1,c	;volatile
 10721  001646  D0DA               	goto	i2l277
 10722                           
 10723                           ;Main.c: 314: RPS_count = ((unsigned int) TMR1H << 8) | (TMR1L);
 10724  001648  50CF               	movf	207,w,c	;volatile
 10725  00164A  6E32               	movwf	??_highIsr^0,c
 10726  00164C  50CE               	movf	206,w,c	;volatile
 10727  00164E  6E41               	movwf	_RPS_count^0,c
 10728  001650  C032  F042         	movff	??_highIsr,_RPS_count+1
 10729                           
 10730                           ;Main.c: 315: PIR2bits.TMR3IF = 0;
 10731  001654  92A1               	bcf	161,1,c	;volatile
 10732                           
 10733                           ;Main.c: 316: if (operationMode == 2 && (autoMode==0 || ((autoMode==2) && (RT > SP)))) {
 10734  001656  0E02               	movlw	2
 10735  001658  1849               	xorwf	_operationMode^0,w,c
 10736  00165A  104A               	iorwf	(_operationMode+1)^0,w,c
 10737  00165C  A4D8               	btfss	status,2,c
 10738  00165E  D05F               	goto	i2l5149
 10739  001660  5047               	movf	_autoMode^0,w,c
 10740  001662  1048               	iorwf	(_autoMode+1)^0,w,c
 10741  001664  B4D8               	btfsc	status,2,c
 10742  001666  D015               	goto	i2u560_40
 10743  001668  0E02               	movlw	2
 10744  00166A  1847               	xorwf	_autoMode^0,w,c
 10745  00166C  1048               	iorwf	(_autoMode+1)^0,w,c
 10746  00166E  A4D8               	btfss	status,2,c
 10747  001670  D056               	goto	i2l5149
 10748  001672  C053  F01B         	movff	_SP,i2___ftge@ff1
 10749  001676  C054  F01C         	movff	_SP+1,i2___ftge@ff1+1
 10750  00167A  C055  F01D         	movff	_SP+2,i2___ftge@ff1+2
 10751  00167E  C050  F01E         	movff	_RT,i2___ftge@ff2
 10752  001682  C051  F01F         	movff	_RT+1,i2___ftge@ff2+1
 10753  001686  C052  F020         	movff	_RT+2,i2___ftge@ff2+2
 10754  00168A  EC98  F016         	call	i2___ftge	;wreg free
 10755  00168E  B0D8               	btfsc	status,0,c
 10756  001690  D046               	goto	i2l5149
 10757  001692                     i2u560_40:
 10758                           
 10759                           ;Main.c: 317: if(RT<(SP-HS)) {
 10760  001692  C050  F01B         	movff	_RT,i2___ftge@ff1
 10761  001696  C051  F01C         	movff	_RT+1,i2___ftge@ff1+1
 10762  00169A  C052  F01D         	movff	_RT+2,i2___ftge@ff1+2
 10763  00169E  C04B  F009         	movff	_HS,i2___lwtoft@c
 10764  0016A2  C04C  F00A         	movff	_HS+1,i2___lwtoft@c+1
 10765  0016A6  EC1D  F01A         	call	i2___lwtoft	;wreg free
 10766  0016AA  C009  F018         	movff	?i2___lwtoft,i2___ftsub@f2
 10767  0016AE  C00A  F019         	movff	?i2___lwtoft+1,i2___ftsub@f2+1
 10768  0016B2  C00B  F01A         	movff	?i2___lwtoft+2,i2___ftsub@f2+2
 10769  0016B6  C053  F015         	movff	_SP,i2___ftsub@f1
 10770  0016BA  C054  F016         	movff	_SP+1,i2___ftsub@f1+1
 10771  0016BE  C055  F017         	movff	_SP+2,i2___ftsub@f1+2
 10772  0016C2  ECE6  F018         	call	i2___ftsub	;wreg free
 10773  0016C6  C015  F01E         	movff	?i2___ftsub,i2___ftge@ff2
 10774  0016CA  C016  F01F         	movff	?i2___ftsub+1,i2___ftge@ff2+1
 10775  0016CE  C017  F020         	movff	?i2___ftsub+2,i2___ftge@ff2+2
 10776  0016D2  EC98  F016         	call	i2___ftge	;wreg free
 10777  0016D6  B0D8               	btfsc	status,0,c
 10778  0016D8  D021               	goto	i2l281
 10779                           
 10780                           ;Main.c: 318: set_pwm1_percent(0.0);
 10781  0016DA  0E00               	movlw	0
 10782  0016DC  6E2A               	movwf	i2set_pwm1_percent@value^0,c
 10783  0016DE  0E00               	movlw	0
 10784  0016E0  6E2B               	movwf	(i2set_pwm1_percent@value+1)^0,c
 10785  0016E2  0E00               	movlw	0
 10786  0016E4  6E2C               	movwf	(i2set_pwm1_percent@value+2)^0,c
 10787  0016E6  EC8E  F015         	call	i2_set_pwm1_percent	;wreg free
 10788                           
 10789                           ;Main.c: 319: if ( timerCounter++ < 5) PORTCbits.RC5 = 1;
 10790  0016EA  5043               	movf	_timerCounter^0,w,c
 10791  0016EC  6E32               	movwf	??_highIsr^0,c
 10792  0016EE  5044               	movf	(_timerCounter+1)^0,w,c
 10793  0016F0  6E33               	movwf	(??_highIsr+1)^0,c
 10794  0016F2  4A43               	infsnz	_timerCounter^0,f,c
 10795  0016F4  2A44               	incf	(_timerCounter+1)^0,f,c
 10796  0016F6  5033               	movf	(??_highIsr+1)^0,w,c
 10797  0016F8  E106               	bnz	i2l5143
 10798  0016FA  0E05               	movlw	5
 10799  0016FC  5C32               	subwf	??_highIsr^0,w,c
 10800  0016FE  B0D8               	btfsc	status,0,c
 10801  001700  D002               	goto	i2l5143
 10802  001702  8A82               	bsf	130,5,c	;volatile
 10803  001704  D00C               	goto	i2l5149
 10804  001706                     i2l5143:
 10805                           
 10806                           ;Main.c: 320: else if ( timerCounter <= 10 ) PORTCbits.RC5 = 0;
 10807  001706  5044               	movf	(_timerCounter+1)^0,w,c
 10808  001708  E104               	bnz	i2l5147
 10809  00170A  0E0B               	movlw	11
 10810  00170C  5C43               	subwf	_timerCounter^0,w,c
 10811  00170E  A0D8               	btfss	status,0,c
 10812  001710  D005               	goto	i2l281
 10813  001712                     i2l5147:
 10814                           
 10815                           ;Main.c: 321: else timerCounter = 0;
 10816  001712  0E00               	movlw	0
 10817  001714  6E44               	movwf	(_timerCounter+1)^0,c
 10818  001716  0E00               	movlw	0
 10819  001718  6E43               	movwf	_timerCounter^0,c
 10820  00171A  D001               	goto	i2l5149
 10821  00171C                     i2l281:
 10822                           
 10823                           ;Main.c: 323: PORTCbits.RC5 = 0;
 10824  00171C  9A82               	bcf	130,5,c	;volatile
 10825  00171E                     i2l5149:
 10826                           
 10827                           ;Main.c: 324: };Main.c: 325: };Main.c: 327: if ((operationMode == 0) || (operationMode =
      +                          = 2 && autoMode == 1) || (operationMode == 2 && autoMode == 2)) {
 10828  00171E  5049               	movf	_operationMode^0,w,c
 10829  001720  104A               	iorwf	(_operationMode+1)^0,w,c
 10830  001722  B4D8               	btfsc	status,2,c
 10831  001724  D013               	goto	i2u568_40
 10832  001726  0E02               	movlw	2
 10833  001728  1849               	xorwf	_operationMode^0,w,c
 10834  00172A  104A               	iorwf	(_operationMode+1)^0,w,c
 10835  00172C  A4D8               	btfss	status,2,c
 10836  00172E  D004               	goto	i2u566_40
 10837  001730  0447               	decf	_autoMode^0,w,c
 10838  001732  1048               	iorwf	(_autoMode+1)^0,w,c
 10839  001734  B4D8               	btfsc	status,2,c
 10840  001736  D00A               	goto	i2u568_40
 10841  001738                     i2u566_40:
 10842  001738  0E02               	movlw	2
 10843  00173A  1849               	xorwf	_operationMode^0,w,c
 10844  00173C  104A               	iorwf	(_operationMode+1)^0,w,c
 10845  00173E  A4D8               	btfss	status,2,c
 10846  001740  D033               	goto	i2l5175
 10847  001742  0E02               	movlw	2
 10848  001744  1847               	xorwf	_autoMode^0,w,c
 10849  001746  1048               	iorwf	(_autoMode+1)^0,w,c
 10850  001748  A4D8               	btfss	status,2,c
 10851  00174A  D02E               	goto	i2l5175
 10852  00174C                     i2u568_40:
 10853                           
 10854                           ;Main.c: 328: if(!(operationMode == 2 && autoMode == 2)) {
 10855  00174C  0E02               	movlw	2
 10856  00174E  1849               	xorwf	_operationMode^0,w,c
 10857  001750  104A               	iorwf	(_operationMode+1)^0,w,c
 10858  001752  A4D8               	btfss	status,2,c
 10859  001754  D005               	goto	i2u570_40
 10860  001756  0E02               	movlw	2
 10861  001758  1847               	xorwf	_autoMode^0,w,c
 10862  00175A  1048               	iorwf	(_autoMode+1)^0,w,c
 10863  00175C  B4D8               	btfsc	status,2,c
 10864  00175E  D008               	goto	i2l5165
 10865  001760                     i2u570_40:
 10866                           
 10867                           ;Main.c: 329: set_pwm1_percent(0.0);
 10868  001760  0E00               	movlw	0
 10869  001762  6E2A               	movwf	i2set_pwm1_percent@value^0,c
 10870  001764  0E00               	movlw	0
 10871  001766  6E2B               	movwf	(i2set_pwm1_percent@value+1)^0,c
 10872  001768  0E00               	movlw	0
 10873  00176A  6E2C               	movwf	(i2set_pwm1_percent@value+2)^0,c
 10874  00176C  EC8E  F015         	call	i2_set_pwm1_percent	;wreg free
 10875  001770                     i2l5165:
 10876                           
 10877                           ;Main.c: 330: };Main.c: 331: if ( timerCounter++ < percentHeatCounter) PORTCbits.RC5 = 1
      +                          ;
 10878  001770  5043               	movf	_timerCounter^0,w,c
 10879  001772  6E32               	movwf	??_highIsr^0,c
 10880  001774  5044               	movf	(_timerCounter+1)^0,w,c
 10881  001776  6E33               	movwf	(??_highIsr+1)^0,c
 10882  001778  4A43               	infsnz	_timerCounter^0,f,c
 10883  00177A  2A44               	incf	(_timerCounter+1)^0,f,c
 10884  00177C  0100               	movlb	0	; () banked
 10885  00177E  51F3               	movf	_percentHeatCounter& (0+255),w,b
 10886  001780  5C32               	subwf	??_highIsr^0,w,c
 10887  001782  51F4               	movf	(_percentHeatCounter+1)& (0+255),w,b
 10888  001784  5833               	subwfb	(??_highIsr+1)^0,w,c
 10889  001786  B0D8               	btfsc	status,0,c
 10890  001788  D002               	goto	i2l5169
 10891                           
 10892                           ; BSR set to: 0
 10893  00178A  8A82               	bsf	130,5,c	;volatile
 10894  00178C  D034               	goto	i2l5181
 10895  00178E                     i2l5169:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;Main.c: 332: else if ( timerCounter <= 10 ) PORTCbits.RC5 = 0;
 10899  00178E  5044               	movf	(_timerCounter+1)^0,w,c
 10900  001790  E106               	bnz	i2l5173
 10901  001792  0E0B               	movlw	11
 10902  001794  5C43               	subwf	_timerCounter^0,w,c
 10903  001796  B0D8               	btfsc	status,0,c
 10904  001798  D002               	goto	i2l5173
 10905                           
 10906                           ; BSR set to: 0
 10907  00179A  9A82               	bcf	130,5,c	;volatile
 10908  00179C  D02C               	goto	i2l5181
 10909  00179E                     i2l5173:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;Main.c: 333: else timerCounter = 0;
 10913  00179E  0E00               	movlw	0
 10914  0017A0  6E44               	movwf	(_timerCounter+1)^0,c
 10915  0017A2  0E00               	movlw	0
 10916  0017A4  6E43               	movwf	_timerCounter^0,c
 10917  0017A6  D027               	goto	i2l5181
 10918  0017A8                     i2l5175:
 10919  0017A8  0449               	decf	_operationMode^0,w,c
 10920  0017AA  104A               	iorwf	(_operationMode+1)^0,w,c
 10921  0017AC  A4D8               	btfss	status,2,c
 10922  0017AE  D023               	goto	i2l5181
 10923                           
 10924                           ;Main.c: 335: PORTCbits.RC5 = 0;
 10925  0017B0  9A82               	bcf	130,5,c	;volatile
 10926                           
 10927                           ;Main.c: 336: set_pwm1_percent(percentCoolCounter * 10.0);
 10928  0017B2  C045  F009         	movff	_percentCoolCounter,i2___lwtoft@c
 10929  0017B6  C046  F00A         	movff	_percentCoolCounter+1,i2___lwtoft@c+1
 10930  0017BA  EC1D  F01A         	call	i2___lwtoft	;wreg free
 10931  0017BE  C009  F00C         	movff	?i2___lwtoft,i2___ftmul@f1
 10932  0017C2  C00A  F00D         	movff	?i2___lwtoft+1,i2___ftmul@f1+1
 10933  0017C6  C00B  F00E         	movff	?i2___lwtoft+2,i2___ftmul@f1+2
 10934  0017CA  0E00               	movlw	0
 10935  0017CC  6E0F               	movwf	i2___ftmul@f2^0,c
 10936  0017CE  0E20               	movlw	32
 10937  0017D0  6E10               	movwf	(i2___ftmul@f2+1)^0,c
 10938  0017D2  0E41               	movlw	65
 10939  0017D4  6E11               	movwf	(i2___ftmul@f2+2)^0,c
 10940  0017D6  EC60  F012         	call	i2___ftmul	;wreg free
 10941  0017DA  C00C  F034         	movff	?i2___ftmul,_highIsr$2194
 10942  0017DE  C00D  F035         	movff	?i2___ftmul+1,_highIsr$2194+1
 10943  0017E2  C00E  F036         	movff	?i2___ftmul+2,_highIsr$2194+2
 10944                           
 10945                           ;Main.c: 336: set_pwm1_percent(percentCoolCounter * 10.0);
 10946  0017E6  C034  F02A         	movff	_highIsr$2194,i2set_pwm1_percent@value
 10947  0017EA  C035  F02B         	movff	_highIsr$2194+1,i2set_pwm1_percent@value+1
 10948  0017EE  C036  F02C         	movff	_highIsr$2194+2,i2set_pwm1_percent@value+2
 10949  0017F2  EC8E  F015         	call	i2_set_pwm1_percent	;wreg free
 10950  0017F6                     i2l5181:
 10951                           
 10952                           ;Main.c: 337: };Main.c: 339: restartTimer3();
 10953  0017F6  EC8C  F01A         	call	_restartTimer3	;wreg free
 10954                           
 10955                           ;Main.c: 341: } else if(INTCONbits.INT0IF) {
 10956  0017FA  D02D               	goto	i2l303
 10957  0017FC                     i2l277:
 10958  0017FC  A2F2               	btfss	242,1,c	;volatile
 10959  0017FE  D004               	goto	i2l302
 10960                           
 10961                           ;Main.c: 342: changeOperationMode();
 10962  001800  EC50  F01A         	call	_changeOperationMode	;wreg free
 10963                           
 10964                           ;Main.c: 343: INTCONbits.INT0IF = 0;
 10965  001804  92F2               	bcf	242,1,c	;volatile
 10966                           
 10967                           ;Main.c: 344: }else if(INTCON3bits.INT1IF) {
 10968  001806  D027               	goto	i2l303
 10969  001808                     i2l302:
 10970  001808  A0F0               	btfss	240,0,c	;volatile
 10971  00180A  D012               	goto	i2l304
 10972                           
 10973                           ;Main.c: 345: if(operationMode == 0) decrementPercentHeatCounter();
 10974  00180C  5049               	movf	_operationMode^0,w,c
 10975  00180E  104A               	iorwf	(_operationMode+1)^0,w,c
 10976  001810  B4D8               	btfsc	status,2,c
 10977  001812  ECA7  F01A         	call	_decrementPercentHeatCounter	;wreg free
 10978                           
 10979                           ;Main.c: 346: if(operationMode == 1) decrementPercentCoolCounter();
 10980  001816  0449               	decf	_operationMode^0,w,c
 10981  001818  104A               	iorwf	(_operationMode+1)^0,w,c
 10982  00181A  B4D8               	btfsc	status,2,c
 10983  00181C  ECB8  F01A         	call	_decrementPercentCoolCounter	;wreg free
 10984                           
 10985                           ;Main.c: 347: if(operationMode == 2) decrementHS();
 10986  001820  0E02               	movlw	2
 10987  001822  1849               	xorwf	_operationMode^0,w,c
 10988  001824  104A               	iorwf	(_operationMode+1)^0,w,c
 10989  001826  B4D8               	btfsc	status,2,c
 10990  001828  ECC0  F01A         	call	_decrementHS	;wreg free
 10991                           
 10992                           ;Main.c: 348: INTCON3bits.INT1IF = 0;
 10993  00182C  90F0               	bcf	240,0,c	;volatile
 10994                           
 10995                           ;Main.c: 349: }else if(INTCON3bits.INT2IF) {
 10996  00182E  D013               	goto	i2l303
 10997  001830                     i2l304:
 10998  001830  A2F0               	btfss	240,1,c	;volatile
 10999  001832  D011               	goto	i2l303
 11000                           
 11001                           ;Main.c: 350: if(operationMode == 0) incrementPercentHeatCounter();
 11002  001834  5049               	movf	_operationMode^0,w,c
 11003  001836  104A               	iorwf	(_operationMode+1)^0,w,c
 11004  001838  B4D8               	btfsc	status,2,c
 11005  00183A  EC79  F01A         	call	_incrementPercentHeatCounter	;wreg free
 11006                           
 11007                           ;Main.c: 351: if(operationMode == 1) incrementPercentCoolCounter();
 11008  00183E  0449               	decf	_operationMode^0,w,c
 11009  001840  104A               	iorwf	(_operationMode+1)^0,w,c
 11010  001842  B4D8               	btfsc	status,2,c
 11011  001844  EC95  F01A         	call	_incrementPercentCoolCounter	;wreg free
 11012                           
 11013                           ;Main.c: 352: if(operationMode == 2) incrementHS();
 11014  001848  0E02               	movlw	2
 11015  00184A  1849               	xorwf	_operationMode^0,w,c
 11016  00184C  104A               	iorwf	(_operationMode+1)^0,w,c
 11017  00184E  B4D8               	btfsc	status,2,c
 11018  001850  EC9E  F01A         	call	_incrementHS	;wreg free
 11019                           
 11020                           ;Main.c: 353: INTCON3bits.INT2IF = 0;
 11021  001854  92F0               	bcf	240,1,c	;volatile
 11022  001856                     i2l303:
 11023  001856  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11024  001858  0011               	retfie		f
 11025  00185A                     __end_of_highIsr:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function i2_set_pwm1_percent *****************
 11029 ;; Defined at:
 11030 ;;		line 244 in file "Main.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  value           3   41[COMRAM] float 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  tmp             3   44[COMRAM] float 
 11035 ;;  raw_val         2   47[COMRAM] int 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      void 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0, cstack
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;Total ram usage:        8 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; Hardware stack levels required when called:    2
 11052 ;; This function calls:
 11053 ;;		i2___ftadd
 11054 ;;		i2___ftdiv
 11055 ;;		i2___ftmul
 11056 ;;		i2___fttol
 11057 ;;		i2_set_pwm1_raw
 11058 ;; This function is called by:
 11059 ;;		_highIsr
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text49
 11064  002B1C                     __ptext49:
 11065                           	callstack 0
 11066  002B1C                     i2_set_pwm1_percent:
 11067                           	callstack 20
 11068                           
 11069                           ;Main.c: 245: float tmp = value*1023.0/100.0;
 11070                           
 11071                           ;incstack = 0
 11072  002B1C  0EC0               	movlw	192
 11073  002B1E  6E0F               	movwf	i2___ftmul@f2^0,c
 11074  002B20  0E7F               	movlw	127
 11075  002B22  6E10               	movwf	(i2___ftmul@f2+1)^0,c
 11076  002B24  0E44               	movlw	68
 11077  002B26  6E11               	movwf	(i2___ftmul@f2+2)^0,c
 11078  002B28  C02A  F00C         	movff	i2set_pwm1_percent@value,i2___ftmul@f1
 11079  002B2C  C02B  F00D         	movff	i2set_pwm1_percent@value+1,i2___ftmul@f1+1
 11080  002B30  C02C  F00E         	movff	i2set_pwm1_percent@value+2,i2___ftmul@f1+2
 11081  002B34  EC60  F012         	call	i2___ftmul	;wreg free
 11082  002B38  C00C  F01B         	movff	?i2___ftmul,i2___ftdiv@f1
 11083  002B3C  C00D  F01C         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11084  002B40  C00E  F01D         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11085  002B44  0E00               	movlw	0
 11086  002B46  6E1E               	movwf	i2___ftdiv@f2^0,c
 11087  002B48  0EC8               	movlw	200
 11088  002B4A  6E1F               	movwf	(i2___ftdiv@f2+1)^0,c
 11089  002B4C  0E42               	movlw	66
 11090  002B4E  6E20               	movwf	(i2___ftdiv@f2+2)^0,c
 11091  002B50  EC4D  F013         	call	i2___ftdiv	;wreg free
 11092  002B54  C01B  F02D         	movff	?i2___ftdiv,i2set_pwm1_percent@tmp
 11093  002B58  C01C  F02E         	movff	?i2___ftdiv+1,i2set_pwm1_percent@tmp+1
 11094  002B5C  C01D  F02F         	movff	?i2___ftdiv+2,i2set_pwm1_percent@tmp+2
 11095                           
 11096                           ;Main.c: 246: int raw_val = (int)(tmp +0.5);
 11097  002B60  0E00               	movlw	0
 11098  002B62  6E0C               	movwf	i2___ftadd@f2^0,c
 11099  002B64  0E00               	movlw	0
 11100  002B66  6E0D               	movwf	(i2___ftadd@f2+1)^0,c
 11101  002B68  0E3F               	movlw	63
 11102  002B6A  6E0E               	movwf	(i2___ftadd@f2+2)^0,c
 11103  002B6C  C02D  F009         	movff	i2set_pwm1_percent@tmp,i2___ftadd@f1
 11104  002B70  C02E  F00A         	movff	i2set_pwm1_percent@tmp+1,i2___ftadd@f1+1
 11105  002B74  C02F  F00B         	movff	i2set_pwm1_percent@tmp+2,i2___ftadd@f1+2
 11106  002B78  ECCC  F00E         	call	i2___ftadd	;wreg free
 11107  002B7C  C009  F015         	movff	?i2___ftadd,i2___fttol@f1
 11108  002B80  C00A  F016         	movff	?i2___ftadd+1,i2___fttol@f1+1
 11109  002B84  C00B  F017         	movff	?i2___ftadd+2,i2___fttol@f1+2
 11110  002B88  EC2B  F014         	call	i2___fttol	;wreg free
 11111  002B8C  C015  F030         	movff	?i2___fttol,i2set_pwm1_percent@raw_val
 11112  002B90  C016  F031         	movff	?i2___fttol+1,i2set_pwm1_percent@raw_val+1
 11113                           
 11114                           ;Main.c: 247: if ( raw_val> 1023) raw_val = 1023;
 11115  002B94  BE31               	btfsc	(i2set_pwm1_percent@raw_val+1)^0,7,c
 11116  002B96  D007               	goto	i2l5089
 11117  002B98  0E04               	movlw	4
 11118  002B9A  5C31               	subwf	(i2set_pwm1_percent@raw_val+1)^0,w,c
 11119  002B9C  A0D8               	btfss	status,0,c
 11120  002B9E  D003               	goto	i2l5089
 11121  002BA0  0E03               	movlw	3
 11122  002BA2  6E31               	movwf	(i2set_pwm1_percent@raw_val+1)^0,c
 11123  002BA4  6830               	setf	i2set_pwm1_percent@raw_val^0,c
 11124  002BA6                     i2l5089:
 11125                           
 11126                           ;Main.c: 248: set_pwm1_raw(raw_val);
 11127  002BA6  C030  F001         	movff	i2set_pwm1_percent@raw_val,i2set_pwm1_raw@raw_value
 11128  002BAA  C031  F002         	movff	i2set_pwm1_percent@raw_val+1,i2set_pwm1_raw@raw_value+1
 11129  002BAE  EC90  F019         	call	i2_set_pwm1_raw	;wreg free
 11130  002BB2  0012               	return		;funcret
 11131  002BB4                     __end_ofi2_set_pwm1_percent:
 11132                           	callstack 0
 11133                           
 11134 ;; *************** function i2_set_pwm1_raw *****************
 11135 ;; Defined at:
 11136 ;;		line 239 in file "Main.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  raw_value       2    0[COMRAM] unsigned int 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;Total ram usage:        4 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		i2_set_pwm1_percent
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text50
 11164  003320                     __ptext50:
 11165                           	callstack 0
 11166  003320                     i2_set_pwm1_raw:
 11167                           	callstack 21
 11168                           
 11169                           ;Main.c: 240: CCPR1L = (raw_value >> 2) & 0x00FF;
 11170                           
 11171                           ;incstack = 0
 11172  003320  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 11173  003324  C002  F004         	movff	i2set_pwm1_raw@raw_value+1,??i2_set_pwm1_raw+1
 11174  003328  90D8               	bcf	status,0,c
 11175  00332A  3204               	rrcf	(??i2_set_pwm1_raw+1)^0,f,c
 11176  00332C  3203               	rrcf	??i2_set_pwm1_raw^0,f,c
 11177  00332E  90D8               	bcf	status,0,c
 11178  003330  3204               	rrcf	(??i2_set_pwm1_raw+1)^0,f,c
 11179  003332  3203               	rrcf	??i2_set_pwm1_raw^0,f,c
 11180  003334  5003               	movf	??i2_set_pwm1_raw^0,w,c
 11181  003336  6EBE               	movwf	190,c	;volatile
 11182                           
 11183                           ;Main.c: 241: CCP1CONbits.DC1B = raw_value & 0x0003;
 11184  003338  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 11185  00333C  0E03               	movlw	3
 11186  00333E  1603               	andwf	??i2_set_pwm1_raw^0,f,c
 11187  003340  3A03               	swapf	??i2_set_pwm1_raw^0,f,c
 11188  003342  50BD               	movf	189,w,c	;volatile
 11189  003344  1803               	xorwf	??i2_set_pwm1_raw^0,w,c
 11190  003346  0BCF               	andlw	-49
 11191  003348  1803               	xorwf	??i2_set_pwm1_raw^0,w,c
 11192  00334A  6EBD               	movwf	189,c	;volatile
 11193  00334C  0012               	return		;funcret
 11194  00334E                     __end_ofi2_set_pwm1_raw:
 11195                           	callstack 0
 11196                           
 11197 ;; *************** function i2___fttol *****************
 11198 ;; Defined at:
 11199 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fttol.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;  f1              3   20[COMRAM] float 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  lval            4   30[COMRAM] unsigned long 
 11204 ;;  exp1            1   34[COMRAM] unsigned char 
 11205 ;;  sign1           1   29[COMRAM] unsigned char 
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  4   20[COMRAM] long 
 11208 ;; Registers used:
 11209 ;;		wreg, status,2, status,0
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;Total ram usage:       15 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		i2_set_pwm1_percent
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text51
 11229  002856                     __ptext51:
 11230                           	callstack 0
 11231  002856                     i2___fttol:
 11232                           	callstack 21
 11233                           
 11234                           ;incstack = 0
 11235  002856  C017  F019         	movff	i2___fttol@f1+2,??i2___fttol
 11236  00285A  6A1A               	clrf	(??i2___fttol+1)^0,c
 11237  00285C  6A1B               	clrf	(??i2___fttol+2)^0,c
 11238  00285E  3416               	rlcf	(i2___fttol@f1+1)^0,w,c
 11239  002860  3619               	rlcf	??i2___fttol^0,f,c
 11240  002862  E301               	bnc	u520_41
 11241  002864  801A               	bsf	(??i2___fttol+1)^0,0,c
 11242  002866                     u520_41:
 11243  002866  5019               	movf	??i2___fttol^0,w,c
 11244  002868  6E23               	movwf	i2___fttol@exp1^0,c
 11245  00286A  5023               	movf	i2___fttol@exp1^0,w,c
 11246  00286C  A4D8               	btfss	status,2,c
 11247  00286E  D009               	goto	i2l4777
 11248  002870                     i2u521_40:
 11249  002870  0E00               	movlw	0
 11250  002872  6E15               	movwf	?i2___fttol^0,c
 11251  002874  0E00               	movlw	0
 11252  002876  6E16               	movwf	(?i2___fttol+1)^0,c
 11253  002878  0E00               	movlw	0
 11254  00287A  6E17               	movwf	(?i2___fttol+2)^0,c
 11255  00287C  0E00               	movlw	0
 11256  00287E  6E18               	movwf	(?i2___fttol+3)^0,c
 11257  002880  0012               	return	
 11258  002882                     i2l4777:
 11259  002882  0E17               	movlw	23
 11260  002884  6E19               	movwf	??i2___fttol^0,c
 11261  002886  C015  F01A         	movff	i2___fttol@f1,??i2___fttol+1
 11262  00288A  C016  F01B         	movff	i2___fttol@f1+1,??i2___fttol+2
 11263  00288E  C017  F01C         	movff	i2___fttol@f1+2,??i2___fttol+3
 11264  002892  2819               	incf	??i2___fttol^0,w,c
 11265  002894  6E1D               	movwf	(??i2___fttol+4)^0,c
 11266  002896  D004               	goto	i2u522_40
 11267  002898                     i2u522_45:
 11268  002898  90D8               	bcf	status,0,c
 11269  00289A  321C               	rrcf	(??i2___fttol+3)^0,f,c
 11270  00289C  321B               	rrcf	(??i2___fttol+2)^0,f,c
 11271  00289E  321A               	rrcf	(??i2___fttol+1)^0,f,c
 11272  0028A0                     i2u522_40:
 11273  0028A0  2E1D               	decfsz	(??i2___fttol+4)^0,f,c
 11274  0028A2  D7FA               	goto	i2u522_45
 11275  0028A4  501A               	movf	(??i2___fttol+1)^0,w,c
 11276  0028A6  6E1E               	movwf	i2___fttol@sign1^0,c
 11277  0028A8  8E16               	bsf	(i2___fttol@f1+1)^0,7,c
 11278  0028AA  0EFF               	movlw	255
 11279  0028AC  1615               	andwf	i2___fttol@f1^0,f,c
 11280  0028AE  0EFF               	movlw	255
 11281  0028B0  1616               	andwf	(i2___fttol@f1+1)^0,f,c
 11282  0028B2  0E00               	movlw	0
 11283  0028B4  1617               	andwf	(i2___fttol@f1+2)^0,f,c
 11284  0028B6  5015               	movf	i2___fttol@f1^0,w,c
 11285  0028B8  6E1F               	movwf	i2___fttol@lval^0,c
 11286  0028BA  5016               	movf	(i2___fttol@f1+1)^0,w,c
 11287  0028BC  6E20               	movwf	(i2___fttol@lval+1)^0,c
 11288  0028BE  5017               	movf	(i2___fttol@f1+2)^0,w,c
 11289  0028C0  6E21               	movwf	(i2___fttol@lval+2)^0,c
 11290  0028C2  6A22               	clrf	(i2___fttol@lval+3)^0,c
 11291  0028C4  0E8E               	movlw	142
 11292  0028C6  5E23               	subwf	i2___fttol@exp1^0,f,c
 11293  0028C8  AE23               	btfss	i2___fttol@exp1^0,7,c
 11294  0028CA  D00D               	goto	i2l4799
 11295  0028CC  5023               	movf	i2___fttol@exp1^0,w,c
 11296  0028CE  0A80               	xorlw	128
 11297  0028D0  0F8F               	addlw	143
 11298  0028D2  A0D8               	btfss	status,0,c
 11299  0028D4  D7CD               	goto	i2u521_40
 11300  0028D6                     i2l4795:
 11301  0028D6  90D8               	bcf	status,0,c
 11302  0028D8  3222               	rrcf	(i2___fttol@lval+3)^0,f,c
 11303  0028DA  3221               	rrcf	(i2___fttol@lval+2)^0,f,c
 11304  0028DC  3220               	rrcf	(i2___fttol@lval+1)^0,f,c
 11305  0028DE  321F               	rrcf	i2___fttol@lval^0,f,c
 11306  0028E0  3E23               	incfsz	i2___fttol@exp1^0,f,c
 11307  0028E2  D7F9               	goto	i2l4795
 11308  0028E4  D00D               	goto	i2u526_40
 11309  0028E6                     i2l4799:
 11310  0028E6  0E17               	movlw	23
 11311  0028E8  6423               	cpfsgt	i2___fttol@exp1^0,c
 11312  0028EA  D007               	goto	i2l4807
 11313  0028EC  D7C1               	goto	i2u521_40
 11314  0028EE                     i2l4805:
 11315  0028EE  90D8               	bcf	status,0,c
 11316  0028F0  361F               	rlcf	i2___fttol@lval^0,f,c
 11317  0028F2  3620               	rlcf	(i2___fttol@lval+1)^0,f,c
 11318  0028F4  3621               	rlcf	(i2___fttol@lval+2)^0,f,c
 11319  0028F6  3622               	rlcf	(i2___fttol@lval+3)^0,f,c
 11320  0028F8  0623               	decf	i2___fttol@exp1^0,f,c
 11321  0028FA                     i2l4807:
 11322  0028FA  5023               	movf	i2___fttol@exp1^0,w,c
 11323  0028FC  A4D8               	btfss	status,2,c
 11324  0028FE  D7F7               	goto	i2l4805
 11325  002900                     i2u526_40:
 11326  002900  501E               	movf	i2___fttol@sign1^0,w,c
 11327  002902  B4D8               	btfsc	status,2,c
 11328  002904  D008               	goto	i2l4813
 11329  002906  1E22               	comf	(i2___fttol@lval+3)^0,f,c
 11330  002908  1E21               	comf	(i2___fttol@lval+2)^0,f,c
 11331  00290A  1E20               	comf	(i2___fttol@lval+1)^0,f,c
 11332  00290C  6C1F               	negf	i2___fttol@lval^0,c
 11333  00290E  0E00               	movlw	0
 11334  002910  2220               	addwfc	(i2___fttol@lval+1)^0,f,c
 11335  002912  2221               	addwfc	(i2___fttol@lval+2)^0,f,c
 11336  002914  2222               	addwfc	(i2___fttol@lval+3)^0,f,c
 11337  002916                     i2l4813:
 11338  002916  C01F  F015         	movff	i2___fttol@lval,?i2___fttol
 11339  00291A  C020  F016         	movff	i2___fttol@lval+1,?i2___fttol+1
 11340  00291E  C021  F017         	movff	i2___fttol@lval+2,?i2___fttol+2
 11341  002922  C022  F018         	movff	i2___fttol@lval+3,?i2___fttol+3
 11342  002926  0012               	return		;funcret
 11343  002928                     __end_ofi2___fttol:
 11344                           	callstack 0
 11345                           
 11346 ;; *************** function i2___ftmul *****************
 11347 ;; Defined at:
 11348 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftmul.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  f1              3   11[COMRAM] float 
 11351 ;;  f2              3   14[COMRAM] float 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  f3_as_produc    3   21[COMRAM] unsigned um
 11354 ;;  sign            1   25[COMRAM] unsigned char 
 11355 ;;  cntr            1   24[COMRAM] unsigned char 
 11356 ;;  exp             1   20[COMRAM] unsigned char 
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  3   11[COMRAM] float 
 11359 ;; Registers used:
 11360 ;;		wreg, status,2, status,0, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11366 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11369 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11370 ;;Total ram usage:       15 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:    1
 11373 ;; This function calls:
 11374 ;;		i2___ftpack
 11375 ;; This function is called by:
 11376 ;;		_highIsr
 11377 ;;		i2_set_pwm1_percent
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text52
 11382  0024C0                     __ptext52:
 11383                           	callstack 0
 11384  0024C0                     i2___ftmul:
 11385                           	callstack 20
 11386                           
 11387                           ;incstack = 0
 11388  0024C0  C00E  F012         	movff	i2___ftmul@f1+2,??i2___ftmul
 11389  0024C4  6A13               	clrf	(??i2___ftmul+1)^0,c
 11390  0024C6  6A14               	clrf	(??i2___ftmul+2)^0,c
 11391  0024C8  340D               	rlcf	(i2___ftmul@f1+1)^0,w,c
 11392  0024CA  3612               	rlcf	??i2___ftmul^0,f,c
 11393  0024CC  E301               	bnc	u514_41
 11394  0024CE  8013               	bsf	(??i2___ftmul+1)^0,0,c
 11395  0024D0                     u514_41:
 11396  0024D0  5012               	movf	??i2___ftmul^0,w,c
 11397  0024D2  6E15               	movwf	i2___ftmul@exp^0,c
 11398  0024D4  5015               	movf	i2___ftmul@exp^0,w,c
 11399  0024D6  A4D8               	btfss	status,2,c
 11400  0024D8  D007               	goto	i2l4729
 11401  0024DA  0E00               	movlw	0
 11402  0024DC  6E0C               	movwf	?i2___ftmul^0,c
 11403  0024DE  0E00               	movlw	0
 11404  0024E0  6E0D               	movwf	(?i2___ftmul+1)^0,c
 11405  0024E2  0E00               	movlw	0
 11406  0024E4  6E0E               	movwf	(?i2___ftmul+2)^0,c
 11407  0024E6  0012               	return	
 11408  0024E8                     i2l4729:
 11409  0024E8  C011  F012         	movff	i2___ftmul@f2+2,??i2___ftmul
 11410  0024EC  6A13               	clrf	(??i2___ftmul+1)^0,c
 11411  0024EE  6A14               	clrf	(??i2___ftmul+2)^0,c
 11412  0024F0  3410               	rlcf	(i2___ftmul@f2+1)^0,w,c
 11413  0024F2  3612               	rlcf	??i2___ftmul^0,f,c
 11414  0024F4  E301               	bnc	u516_41
 11415  0024F6  8013               	bsf	(??i2___ftmul+1)^0,0,c
 11416  0024F8                     u516_41:
 11417  0024F8  5012               	movf	??i2___ftmul^0,w,c
 11418  0024FA  6E1A               	movwf	i2___ftmul@sign^0,c
 11419  0024FC  501A               	movf	i2___ftmul@sign^0,w,c
 11420  0024FE  A4D8               	btfss	status,2,c
 11421  002500  D007               	goto	i2l4735
 11422  002502  0E00               	movlw	0
 11423  002504  6E0C               	movwf	?i2___ftmul^0,c
 11424  002506  0E00               	movlw	0
 11425  002508  6E0D               	movwf	(?i2___ftmul+1)^0,c
 11426  00250A  0E00               	movlw	0
 11427  00250C  6E0E               	movwf	(?i2___ftmul+2)^0,c
 11428  00250E  0012               	return	
 11429  002510                     i2l4735:
 11430  002510  501A               	movf	i2___ftmul@sign^0,w,c
 11431  002512  0F7B               	addlw	123
 11432  002514  2615               	addwf	i2___ftmul@exp^0,f,c
 11433  002516  C00E  F01A         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 11434  00251A  5011               	movf	(i2___ftmul@f2+2)^0,w,c
 11435  00251C  1A1A               	xorwf	i2___ftmul@sign^0,f,c
 11436  00251E  0E80               	movlw	128
 11437  002520  161A               	andwf	i2___ftmul@sign^0,f,c
 11438  002522  8E0D               	bsf	(i2___ftmul@f1+1)^0,7,c
 11439  002524  8E10               	bsf	(i2___ftmul@f2+1)^0,7,c
 11440  002526  0EFF               	movlw	255
 11441  002528  160F               	andwf	i2___ftmul@f2^0,f,c
 11442  00252A  0EFF               	movlw	255
 11443  00252C  1610               	andwf	(i2___ftmul@f2+1)^0,f,c
 11444  00252E  0E00               	movlw	0
 11445  002530  1611               	andwf	(i2___ftmul@f2+2)^0,f,c
 11446  002532  0E00               	movlw	0
 11447  002534  6E16               	movwf	i2___ftmul@f3_as_product^0,c
 11448  002536  0E00               	movlw	0
 11449  002538  6E17               	movwf	(i2___ftmul@f3_as_product+1)^0,c
 11450  00253A  0E00               	movlw	0
 11451  00253C  6E18               	movwf	(i2___ftmul@f3_as_product+2)^0,c
 11452  00253E  0E07               	movlw	7
 11453  002540  6E19               	movwf	i2___ftmul@cntr^0,c
 11454  002542                     i2l4749:
 11455  002542  A00C               	btfss	i2___ftmul@f1^0,0,c
 11456  002544  D006               	goto	i2l4753
 11457  002546  500F               	movf	i2___ftmul@f2^0,w,c
 11458  002548  2616               	addwf	i2___ftmul@f3_as_product^0,f,c
 11459  00254A  5010               	movf	(i2___ftmul@f2+1)^0,w,c
 11460  00254C  2217               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 11461  00254E  5011               	movf	(i2___ftmul@f2+2)^0,w,c
 11462  002550  2218               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 11463  002552                     i2l4753:
 11464  002552  90D8               	bcf	status,0,c
 11465  002554  320E               	rrcf	(i2___ftmul@f1+2)^0,f,c
 11466  002556  320D               	rrcf	(i2___ftmul@f1+1)^0,f,c
 11467  002558  320C               	rrcf	i2___ftmul@f1^0,f,c
 11468  00255A  90D8               	bcf	status,0,c
 11469  00255C  360F               	rlcf	i2___ftmul@f2^0,f,c
 11470  00255E  3610               	rlcf	(i2___ftmul@f2+1)^0,f,c
 11471  002560  3611               	rlcf	(i2___ftmul@f2+2)^0,f,c
 11472  002562  2E19               	decfsz	i2___ftmul@cntr^0,f,c
 11473  002564  D7EE               	goto	i2l4749
 11474  002566  0E09               	movlw	9
 11475  002568  6E19               	movwf	i2___ftmul@cntr^0,c
 11476  00256A                     i2l4759:
 11477  00256A  A00C               	btfss	i2___ftmul@f1^0,0,c
 11478  00256C  D006               	goto	i2l4763
 11479  00256E  500F               	movf	i2___ftmul@f2^0,w,c
 11480  002570  2616               	addwf	i2___ftmul@f3_as_product^0,f,c
 11481  002572  5010               	movf	(i2___ftmul@f2+1)^0,w,c
 11482  002574  2217               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 11483  002576  5011               	movf	(i2___ftmul@f2+2)^0,w,c
 11484  002578  2218               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 11485  00257A                     i2l4763:
 11486  00257A  90D8               	bcf	status,0,c
 11487  00257C  320E               	rrcf	(i2___ftmul@f1+2)^0,f,c
 11488  00257E  320D               	rrcf	(i2___ftmul@f1+1)^0,f,c
 11489  002580  320C               	rrcf	i2___ftmul@f1^0,f,c
 11490  002582  90D8               	bcf	status,0,c
 11491  002584  3218               	rrcf	(i2___ftmul@f3_as_product+2)^0,f,c
 11492  002586  3217               	rrcf	(i2___ftmul@f3_as_product+1)^0,f,c
 11493  002588  3216               	rrcf	i2___ftmul@f3_as_product^0,f,c
 11494  00258A  2E19               	decfsz	i2___ftmul@cntr^0,f,c
 11495  00258C  D7EE               	goto	i2l4759
 11496  00258E  C016  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 11497  002592  C017  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 11498  002596  C018  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 11499  00259A  C015  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 11500  00259E  C01A  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 11501  0025A2  ECEB  F014         	call	i2___ftpack	;wreg free
 11502  0025A6  C001  F00C         	movff	?i2___ftpack,?i2___ftmul
 11503  0025AA  C002  F00D         	movff	?i2___ftpack+1,?i2___ftmul+1
 11504  0025AE  C003  F00E         	movff	?i2___ftpack+2,?i2___ftmul+2
 11505  0025B2  0012               	return		;funcret
 11506  0025B4                     __end_ofi2___ftmul:
 11507                           	callstack 0
 11508                           
 11509 ;; *************** function i2___ftdiv *****************
 11510 ;; Defined at:
 11511 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdiv.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  f1              3   26[COMRAM] float 
 11514 ;;  f2              3   29[COMRAM] float 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  f3              3   36[COMRAM] float 
 11517 ;;  sign            1   40[COMRAM] unsigned char 
 11518 ;;  exp             1   39[COMRAM] unsigned char 
 11519 ;;  cntr            1   35[COMRAM] unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  3   26[COMRAM] float 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11529 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;Total ram usage:       15 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:    1
 11536 ;; This function calls:
 11537 ;;		i2___ftpack
 11538 ;; This function is called by:
 11539 ;;		i2_set_pwm1_percent
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text53
 11544  00269A                     __ptext53:
 11545                           	callstack 0
 11546  00269A                     i2___ftdiv:
 11547                           	callstack 20
 11548                           
 11549                           ;incstack = 0
 11550  00269A  C01D  F021         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11551  00269E  6A22               	clrf	(??i2___ftdiv+1)^0,c
 11552  0026A0  6A23               	clrf	(??i2___ftdiv+2)^0,c
 11553  0026A2  341C               	rlcf	(i2___ftdiv@f1+1)^0,w,c
 11554  0026A4  3621               	rlcf	??i2___ftdiv^0,f,c
 11555  0026A6  E301               	bnc	u509_41
 11556  0026A8  8022               	bsf	(??i2___ftdiv+1)^0,0,c
 11557  0026AA                     u509_41:
 11558  0026AA  5021               	movf	??i2___ftdiv^0,w,c
 11559  0026AC  6E28               	movwf	i2___ftdiv@exp^0,c
 11560  0026AE  5028               	movf	i2___ftdiv@exp^0,w,c
 11561  0026B0  A4D8               	btfss	status,2,c
 11562  0026B2  D007               	goto	i2l4683
 11563  0026B4  0E00               	movlw	0
 11564  0026B6  6E1B               	movwf	?i2___ftdiv^0,c
 11565  0026B8  0E00               	movlw	0
 11566  0026BA  6E1C               	movwf	(?i2___ftdiv+1)^0,c
 11567  0026BC  0E00               	movlw	0
 11568  0026BE  6E1D               	movwf	(?i2___ftdiv+2)^0,c
 11569  0026C0  0012               	return	
 11570  0026C2                     i2l4683:
 11571  0026C2  C020  F021         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11572  0026C6  6A22               	clrf	(??i2___ftdiv+1)^0,c
 11573  0026C8  6A23               	clrf	(??i2___ftdiv+2)^0,c
 11574  0026CA  341F               	rlcf	(i2___ftdiv@f2+1)^0,w,c
 11575  0026CC  3621               	rlcf	??i2___ftdiv^0,f,c
 11576  0026CE  E301               	bnc	u511_41
 11577  0026D0  8022               	bsf	(??i2___ftdiv+1)^0,0,c
 11578  0026D2                     u511_41:
 11579  0026D2  5021               	movf	??i2___ftdiv^0,w,c
 11580  0026D4  6E29               	movwf	i2___ftdiv@sign^0,c
 11581  0026D6  5029               	movf	i2___ftdiv@sign^0,w,c
 11582  0026D8  A4D8               	btfss	status,2,c
 11583  0026DA  D007               	goto	i2l4689
 11584  0026DC  0E00               	movlw	0
 11585  0026DE  6E1B               	movwf	?i2___ftdiv^0,c
 11586  0026E0  0E00               	movlw	0
 11587  0026E2  6E1C               	movwf	(?i2___ftdiv+1)^0,c
 11588  0026E4  0E00               	movlw	0
 11589  0026E6  6E1D               	movwf	(?i2___ftdiv+2)^0,c
 11590  0026E8  0012               	return	
 11591  0026EA                     i2l4689:
 11592  0026EA  0E00               	movlw	0
 11593  0026EC  6E25               	movwf	i2___ftdiv@f3^0,c
 11594  0026EE  0E00               	movlw	0
 11595  0026F0  6E26               	movwf	(i2___ftdiv@f3+1)^0,c
 11596  0026F2  0E00               	movlw	0
 11597  0026F4  6E27               	movwf	(i2___ftdiv@f3+2)^0,c
 11598  0026F6  5029               	movf	i2___ftdiv@sign^0,w,c
 11599  0026F8  0F89               	addlw	137
 11600  0026FA  5E28               	subwf	i2___ftdiv@exp^0,f,c
 11601  0026FC  C01D  F029         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11602  002700  5020               	movf	(i2___ftdiv@f2+2)^0,w,c
 11603  002702  1A29               	xorwf	i2___ftdiv@sign^0,f,c
 11604  002704  0E80               	movlw	128
 11605  002706  1629               	andwf	i2___ftdiv@sign^0,f,c
 11606  002708  8E1C               	bsf	(i2___ftdiv@f1+1)^0,7,c
 11607  00270A  0EFF               	movlw	255
 11608  00270C  161B               	andwf	i2___ftdiv@f1^0,f,c
 11609  00270E  0EFF               	movlw	255
 11610  002710  161C               	andwf	(i2___ftdiv@f1+1)^0,f,c
 11611  002712  0E00               	movlw	0
 11612  002714  161D               	andwf	(i2___ftdiv@f1+2)^0,f,c
 11613  002716  8E1F               	bsf	(i2___ftdiv@f2+1)^0,7,c
 11614  002718  0EFF               	movlw	255
 11615  00271A  161E               	andwf	i2___ftdiv@f2^0,f,c
 11616  00271C  0EFF               	movlw	255
 11617  00271E  161F               	andwf	(i2___ftdiv@f2+1)^0,f,c
 11618  002720  0E00               	movlw	0
 11619  002722  1620               	andwf	(i2___ftdiv@f2+2)^0,f,c
 11620  002724  0E18               	movlw	24
 11621  002726  6E24               	movwf	i2___ftdiv@cntr^0,c
 11622  002728                     i2l4709:
 11623  002728  90D8               	bcf	status,0,c
 11624  00272A  3625               	rlcf	i2___ftdiv@f3^0,f,c
 11625  00272C  3626               	rlcf	(i2___ftdiv@f3+1)^0,f,c
 11626  00272E  3627               	rlcf	(i2___ftdiv@f3+2)^0,f,c
 11627  002730  501E               	movf	i2___ftdiv@f2^0,w,c
 11628  002732  5C1B               	subwf	i2___ftdiv@f1^0,w,c
 11629  002734  501F               	movf	(i2___ftdiv@f2+1)^0,w,c
 11630  002736  581C               	subwfb	(i2___ftdiv@f1+1)^0,w,c
 11631  002738  5020               	movf	(i2___ftdiv@f2+2)^0,w,c
 11632  00273A  581D               	subwfb	(i2___ftdiv@f1+2)^0,w,c
 11633  00273C  A0D8               	btfss	status,0,c
 11634  00273E  D007               	goto	i2l939
 11635  002740  501E               	movf	i2___ftdiv@f2^0,w,c
 11636  002742  5E1B               	subwf	i2___ftdiv@f1^0,f,c
 11637  002744  501F               	movf	(i2___ftdiv@f2+1)^0,w,c
 11638  002746  5A1C               	subwfb	(i2___ftdiv@f1+1)^0,f,c
 11639  002748  5020               	movf	(i2___ftdiv@f2+2)^0,w,c
 11640  00274A  5A1D               	subwfb	(i2___ftdiv@f1+2)^0,f,c
 11641  00274C  8025               	bsf	i2___ftdiv@f3^0,0,c
 11642  00274E                     i2l939:
 11643  00274E  90D8               	bcf	status,0,c
 11644  002750  361B               	rlcf	i2___ftdiv@f1^0,f,c
 11645  002752  361C               	rlcf	(i2___ftdiv@f1+1)^0,f,c
 11646  002754  361D               	rlcf	(i2___ftdiv@f1+2)^0,f,c
 11647  002756  2E24               	decfsz	i2___ftdiv@cntr^0,f,c
 11648  002758  D7E7               	goto	i2l4709
 11649  00275A  C025  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11650  00275E  C026  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11651  002762  C027  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11652  002766  C028  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11653  00276A  C029  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11654  00276E  ECEB  F014         	call	i2___ftpack	;wreg free
 11655  002772  C001  F01B         	movff	?i2___ftpack,?i2___ftdiv
 11656  002776  C002  F01C         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11657  00277A  C003  F01D         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11658  00277E  0012               	return		;funcret
 11659  002780                     __end_ofi2___ftdiv:
 11660                           	callstack 0
 11661                           
 11662 ;; *************** function i2___lwtoft *****************
 11663 ;; Defined at:
 11664 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwtoft.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  c               2    8[COMRAM] unsigned int 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;		None
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  3    8[COMRAM] float 
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, status,0, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11678 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;Total ram usage:        3 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:    1
 11685 ;; This function calls:
 11686 ;;		i2___ftpack
 11687 ;; This function is called by:
 11688 ;;		_highIsr
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text54
 11693  00343A                     __ptext54:
 11694                           	callstack 0
 11695  00343A                     i2___lwtoft:
 11696                           	callstack 21
 11697                           
 11698                           ;incstack = 0
 11699  00343A  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 11700  00343E  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 11701  003442  6A03               	clrf	(i2___ftpack@arg+2)^0,c
 11702  003444  0E8E               	movlw	142
 11703  003446  6E04               	movwf	i2___ftpack@exp^0,c
 11704  003448  0E00               	movlw	0
 11705  00344A  6E05               	movwf	i2___ftpack@sign^0,c
 11706  00344C  ECEB  F014         	call	i2___ftpack	;wreg free
 11707  003450  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 11708  003454  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 11709  003458  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 11710  00345C  0012               	return		;funcret
 11711  00345E                     __end_ofi2___lwtoft:
 11712                           	callstack 0
 11713                           
 11714 ;; *************** function i2___ftsub *****************
 11715 ;; Defined at:
 11716 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftsub.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;  f1              3   20[COMRAM] float 
 11719 ;;  f2              3   23[COMRAM] float 
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;		None
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  3   20[COMRAM] float 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11731 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;Total ram usage:        6 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    2
 11738 ;; This function calls:
 11739 ;;		i2___ftadd
 11740 ;; This function is called by:
 11741 ;;		_highIsr
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           	psect	text55
 11746  0031CC                     __ptext55:
 11747                           	callstack 0
 11748  0031CC                     i2___ftsub:
 11749                           	callstack 20
 11750                           
 11751                           ;incstack = 0
 11752  0031CC  5018               	movf	i2___ftsub@f2^0,w,c
 11753  0031CE  1019               	iorwf	(i2___ftsub@f2+1)^0,w,c
 11754  0031D0  101A               	iorwf	(i2___ftsub@f2+2)^0,w,c
 11755  0031D2  B4D8               	btfsc	status,2,c
 11756  0031D4  D006               	goto	i2l5113
 11757  0031D6  0E00               	movlw	0
 11758  0031D8  1A18               	xorwf	i2___ftsub@f2^0,f,c
 11759  0031DA  0E00               	movlw	0
 11760  0031DC  1A19               	xorwf	(i2___ftsub@f2+1)^0,f,c
 11761  0031DE  0E80               	movlw	128
 11762  0031E0  1A1A               	xorwf	(i2___ftsub@f2+2)^0,f,c
 11763  0031E2                     i2l5113:
 11764  0031E2  C015  F009         	movff	i2___ftsub@f1,i2___ftadd@f1
 11765  0031E6  C016  F00A         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 11766  0031EA  C017  F00B         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 11767  0031EE  C018  F00C         	movff	i2___ftsub@f2,i2___ftadd@f2
 11768  0031F2  C019  F00D         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 11769  0031F6  C01A  F00E         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 11770  0031FA  ECCC  F00E         	call	i2___ftadd	;wreg free
 11771  0031FE  C009  F015         	movff	?i2___ftadd,?i2___ftsub
 11772  003202  C00A  F016         	movff	?i2___ftadd+1,?i2___ftsub+1
 11773  003206  C00B  F017         	movff	?i2___ftadd+2,?i2___ftsub+2
 11774  00320A  0012               	return		;funcret
 11775  00320C                     __end_ofi2___ftsub:
 11776                           	callstack 0
 11777                           
 11778 ;; *************** function i2___ftadd *****************
 11779 ;; Defined at:
 11780 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftadd.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  f1              3    8[COMRAM] float 
 11783 ;;  f2              3   11[COMRAM] float 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  exp1            1   19[COMRAM] unsigned char 
 11786 ;;  exp2            1   18[COMRAM] unsigned char 
 11787 ;;  sign            1   17[COMRAM] unsigned char 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  3    8[COMRAM] float 
 11790 ;; Registers used:
 11791 ;;		wreg, status,2, status,0, cstack
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11797 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;Total ram usage:       12 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    1
 11804 ;; This function calls:
 11805 ;;		i2___ftpack
 11806 ;; This function is called by:
 11807 ;;		i2_set_pwm1_percent
 11808 ;;		i2___ftsub
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text56
 11813  001D98                     __ptext56:
 11814                           	callstack 0
 11815  001D98                     i2___ftadd:
 11816                           	callstack 20
 11817                           
 11818                           ;incstack = 0
 11819  001D98  C00B  F00F         	movff	i2___ftadd@f1+2,??i2___ftadd
 11820  001D9C  6A10               	clrf	(??i2___ftadd+1)^0,c
 11821  001D9E  6A11               	clrf	(??i2___ftadd+2)^0,c
 11822  001DA0  340A               	rlcf	(i2___ftadd@f1+1)^0,w,c
 11823  001DA2  360F               	rlcf	??i2___ftadd^0,f,c
 11824  001DA4  E301               	bnc	u488_41
 11825  001DA6  8010               	bsf	(??i2___ftadd+1)^0,0,c
 11826  001DA8                     u488_41:
 11827  001DA8  500F               	movf	??i2___ftadd^0,w,c
 11828  001DAA  6E14               	movwf	i2___ftadd@exp1^0,c
 11829  001DAC  C00E  F00F         	movff	i2___ftadd@f2+2,??i2___ftadd
 11830  001DB0  6A10               	clrf	(??i2___ftadd+1)^0,c
 11831  001DB2  6A11               	clrf	(??i2___ftadd+2)^0,c
 11832  001DB4  340D               	rlcf	(i2___ftadd@f2+1)^0,w,c
 11833  001DB6  360F               	rlcf	??i2___ftadd^0,f,c
 11834  001DB8  E301               	bnc	u489_41
 11835  001DBA  8010               	bsf	(??i2___ftadd+1)^0,0,c
 11836  001DBC                     u489_41:
 11837  001DBC  500F               	movf	??i2___ftadd^0,w,c
 11838  001DBE  6E13               	movwf	i2___ftadd@exp2^0,c
 11839  001DC0  5014               	movf	i2___ftadd@exp1^0,w,c
 11840  001DC2  B4D8               	btfsc	status,2,c
 11841  001DC4  D00A               	goto	i2u492_40
 11842  001DC6  5013               	movf	i2___ftadd@exp2^0,w,c
 11843  001DC8  5C14               	subwf	i2___ftadd@exp1^0,w,c
 11844  001DCA  B0D8               	btfsc	status,0,c
 11845  001DCC  D00D               	goto	i2l4615
 11846  001DCE  5014               	movf	i2___ftadd@exp1^0,w,c
 11847  001DD0  5C13               	subwf	i2___ftadd@exp2^0,w,c
 11848  001DD2  6E0F               	movwf	??i2___ftadd^0,c
 11849  001DD4  0E18               	movlw	24
 11850  001DD6  640F               	cpfsgt	??i2___ftadd^0,c
 11851  001DD8  D007               	goto	i2l4615
 11852  001DDA                     i2u492_40:
 11853  001DDA  C00C  F009         	movff	i2___ftadd@f2,?i2___ftadd
 11854  001DDE  C00D  F00A         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 11855  001DE2  C00E  F00B         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 11856  001DE6  0012               	return	
 11857  001DE8                     i2l4615:
 11858  001DE8  5013               	movf	i2___ftadd@exp2^0,w,c
 11859  001DEA  B4D8               	btfsc	status,2,c
 11860  001DEC  D00A               	goto	i2u495_40
 11861  001DEE  5014               	movf	i2___ftadd@exp1^0,w,c
 11862  001DF0  5C13               	subwf	i2___ftadd@exp2^0,w,c
 11863  001DF2  B0D8               	btfsc	status,0,c
 11864  001DF4  D00D               	goto	i2l4621
 11865  001DF6  5013               	movf	i2___ftadd@exp2^0,w,c
 11866  001DF8  5C14               	subwf	i2___ftadd@exp1^0,w,c
 11867  001DFA  6E0F               	movwf	??i2___ftadd^0,c
 11868  001DFC  0E18               	movlw	24
 11869  001DFE  640F               	cpfsgt	??i2___ftadd^0,c
 11870  001E00  D007               	goto	i2l4621
 11871  001E02                     i2u495_40:
 11872  001E02  C009  F009         	movff	i2___ftadd@f1,?i2___ftadd
 11873  001E06  C00A  F00A         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 11874  001E0A  C00B  F00B         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 11875  001E0E  0012               	return	
 11876  001E10                     i2l4621:
 11877  001E10  0E06               	movlw	6
 11878  001E12  6E12               	movwf	i2___ftadd@sign^0,c
 11879  001E14  BE0B               	btfsc	(i2___ftadd@f1+2)^0,7,c
 11880  001E16  8E12               	bsf	i2___ftadd@sign^0,7,c
 11881  001E18  BE0E               	btfsc	(i2___ftadd@f2+2)^0,7,c
 11882  001E1A  8C12               	bsf	i2___ftadd@sign^0,6,c
 11883  001E1C  8E0A               	bsf	(i2___ftadd@f1+1)^0,7,c
 11884  001E1E  0EFF               	movlw	255
 11885  001E20  1609               	andwf	i2___ftadd@f1^0,f,c
 11886  001E22  0EFF               	movlw	255
 11887  001E24  160A               	andwf	(i2___ftadd@f1+1)^0,f,c
 11888  001E26  0E00               	movlw	0
 11889  001E28  160B               	andwf	(i2___ftadd@f1+2)^0,f,c
 11890  001E2A  8E0D               	bsf	(i2___ftadd@f2+1)^0,7,c
 11891  001E2C  0EFF               	movlw	255
 11892  001E2E  160C               	andwf	i2___ftadd@f2^0,f,c
 11893  001E30  0EFF               	movlw	255
 11894  001E32  160D               	andwf	(i2___ftadd@f2+1)^0,f,c
 11895  001E34  0E00               	movlw	0
 11896  001E36  160E               	andwf	(i2___ftadd@f2+2)^0,f,c
 11897  001E38  5013               	movf	i2___ftadd@exp2^0,w,c
 11898  001E3A  5C14               	subwf	i2___ftadd@exp1^0,w,c
 11899  001E3C  B0D8               	btfsc	status,0,c
 11900  001E3E  D01B               	goto	i2l4647
 11901  001E40                     i2u498_40:
 11902  001E40  90D8               	bcf	status,0,c
 11903  001E42  360C               	rlcf	i2___ftadd@f2^0,f,c
 11904  001E44  360D               	rlcf	(i2___ftadd@f2+1)^0,f,c
 11905  001E46  360E               	rlcf	(i2___ftadd@f2+2)^0,f,c
 11906  001E48  0613               	decf	i2___ftadd@exp2^0,f,c
 11907  001E4A  5014               	movf	i2___ftadd@exp1^0,w,c
 11908  001E4C  1813               	xorwf	i2___ftadd@exp2^0,w,c
 11909  001E4E  B4D8               	btfsc	status,2,c
 11910  001E50  D00D               	goto	i2l4645
 11911  001E52  0612               	decf	i2___ftadd@sign^0,f,c
 11912  001E54  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 11913  001E58  0E07               	movlw	7
 11914  001E5A  160F               	andwf	??i2___ftadd^0,f,c
 11915  001E5C  B4D8               	btfsc	status,2,c
 11916  001E5E  D006               	goto	i2l4645
 11917  001E60  D7EF               	goto	i2u498_40
 11918  001E62                     i2l4643:
 11919  001E62  90D8               	bcf	status,0,c
 11920  001E64  320B               	rrcf	(i2___ftadd@f1+2)^0,f,c
 11921  001E66  320A               	rrcf	(i2___ftadd@f1+1)^0,f,c
 11922  001E68  3209               	rrcf	i2___ftadd@f1^0,f,c
 11923  001E6A  2A14               	incf	i2___ftadd@exp1^0,f,c
 11924  001E6C                     i2l4645:
 11925  001E6C  5013               	movf	i2___ftadd@exp2^0,w,c
 11926  001E6E  1814               	xorwf	i2___ftadd@exp1^0,w,c
 11927  001E70  B4D8               	btfsc	status,2,c
 11928  001E72  D01F               	goto	i2u505_40
 11929  001E74  D7F6               	goto	i2l4643
 11930  001E76                     i2l4647:
 11931  001E76  5014               	movf	i2___ftadd@exp1^0,w,c
 11932  001E78  5C13               	subwf	i2___ftadd@exp2^0,w,c
 11933  001E7A  B0D8               	btfsc	status,0,c
 11934  001E7C  D01A               	goto	i2u505_40
 11935  001E7E                     i2u502_40:
 11936  001E7E  90D8               	bcf	status,0,c
 11937  001E80  3609               	rlcf	i2___ftadd@f1^0,f,c
 11938  001E82  360A               	rlcf	(i2___ftadd@f1+1)^0,f,c
 11939  001E84  360B               	rlcf	(i2___ftadd@f1+2)^0,f,c
 11940  001E86  0614               	decf	i2___ftadd@exp1^0,f,c
 11941  001E88  5014               	movf	i2___ftadd@exp1^0,w,c
 11942  001E8A  1813               	xorwf	i2___ftadd@exp2^0,w,c
 11943  001E8C  B4D8               	btfsc	status,2,c
 11944  001E8E  D00D               	goto	i2l4657
 11945  001E90  0612               	decf	i2___ftadd@sign^0,f,c
 11946  001E92  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 11947  001E96  0E07               	movlw	7
 11948  001E98  160F               	andwf	??i2___ftadd^0,f,c
 11949  001E9A  B4D8               	btfsc	status,2,c
 11950  001E9C  D006               	goto	i2l4657
 11951  001E9E  D7EF               	goto	i2u502_40
 11952  001EA0                     i2l4655:
 11953  001EA0  90D8               	bcf	status,0,c
 11954  001EA2  320E               	rrcf	(i2___ftadd@f2+2)^0,f,c
 11955  001EA4  320D               	rrcf	(i2___ftadd@f2+1)^0,f,c
 11956  001EA6  320C               	rrcf	i2___ftadd@f2^0,f,c
 11957  001EA8  2A13               	incf	i2___ftadd@exp2^0,f,c
 11958  001EAA                     i2l4657:
 11959  001EAA  5013               	movf	i2___ftadd@exp2^0,w,c
 11960  001EAC  1814               	xorwf	i2___ftadd@exp1^0,w,c
 11961  001EAE  A4D8               	btfss	status,2,c
 11962  001EB0  D7F7               	goto	i2l4655
 11963  001EB2                     i2u505_40:
 11964  001EB2  AE12               	btfss	i2___ftadd@sign^0,7,c
 11965  001EB4  D00C               	goto	i2l928
 11966  001EB6  0EFF               	movlw	255
 11967  001EB8  1A09               	xorwf	i2___ftadd@f1^0,f,c
 11968  001EBA  0EFF               	movlw	255
 11969  001EBC  1A0A               	xorwf	(i2___ftadd@f1+1)^0,f,c
 11970  001EBE  0EFF               	movlw	255
 11971  001EC0  1A0B               	xorwf	(i2___ftadd@f1+2)^0,f,c
 11972  001EC2  0E01               	movlw	1
 11973  001EC4  2609               	addwf	i2___ftadd@f1^0,f,c
 11974  001EC6  0E00               	movlw	0
 11975  001EC8  220A               	addwfc	(i2___ftadd@f1+1)^0,f,c
 11976  001ECA  0E00               	movlw	0
 11977  001ECC  220B               	addwfc	(i2___ftadd@f1+2)^0,f,c
 11978  001ECE                     i2l928:
 11979  001ECE  AC12               	btfss	i2___ftadd@sign^0,6,c
 11980  001ED0  D00C               	goto	i2l4663
 11981  001ED2  0EFF               	movlw	255
 11982  001ED4  1A0C               	xorwf	i2___ftadd@f2^0,f,c
 11983  001ED6  0EFF               	movlw	255
 11984  001ED8  1A0D               	xorwf	(i2___ftadd@f2+1)^0,f,c
 11985  001EDA  0EFF               	movlw	255
 11986  001EDC  1A0E               	xorwf	(i2___ftadd@f2+2)^0,f,c
 11987  001EDE  0E01               	movlw	1
 11988  001EE0  260C               	addwf	i2___ftadd@f2^0,f,c
 11989  001EE2  0E00               	movlw	0
 11990  001EE4  220D               	addwfc	(i2___ftadd@f2+1)^0,f,c
 11991  001EE6  0E00               	movlw	0
 11992  001EE8  220E               	addwfc	(i2___ftadd@f2+2)^0,f,c
 11993  001EEA                     i2l4663:
 11994  001EEA  0E00               	movlw	0
 11995  001EEC  6E12               	movwf	i2___ftadd@sign^0,c
 11996  001EEE  5009               	movf	i2___ftadd@f1^0,w,c
 11997  001EF0  260C               	addwf	i2___ftadd@f2^0,f,c
 11998  001EF2  500A               	movf	(i2___ftadd@f1+1)^0,w,c
 11999  001EF4  220D               	addwfc	(i2___ftadd@f2+1)^0,f,c
 12000  001EF6  500B               	movf	(i2___ftadd@f1+2)^0,w,c
 12001  001EF8  220E               	addwfc	(i2___ftadd@f2+2)^0,f,c
 12002  001EFA  AE0E               	btfss	(i2___ftadd@f2+2)^0,7,c
 12003  001EFC  D00E               	goto	i2l4673
 12004  001EFE  0EFF               	movlw	255
 12005  001F00  1A0C               	xorwf	i2___ftadd@f2^0,f,c
 12006  001F02  0EFF               	movlw	255
 12007  001F04  1A0D               	xorwf	(i2___ftadd@f2+1)^0,f,c
 12008  001F06  0EFF               	movlw	255
 12009  001F08  1A0E               	xorwf	(i2___ftadd@f2+2)^0,f,c
 12010  001F0A  0E01               	movlw	1
 12011  001F0C  260C               	addwf	i2___ftadd@f2^0,f,c
 12012  001F0E  0E00               	movlw	0
 12013  001F10  220D               	addwfc	(i2___ftadd@f2+1)^0,f,c
 12014  001F12  0E00               	movlw	0
 12015  001F14  220E               	addwfc	(i2___ftadd@f2+2)^0,f,c
 12016  001F16  0E01               	movlw	1
 12017  001F18  6E12               	movwf	i2___ftadd@sign^0,c
 12018  001F1A                     i2l4673:
 12019  001F1A  C00C  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 12020  001F1E  C00D  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 12021  001F22  C00E  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 12022  001F26  C014  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 12023  001F2A  C012  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 12024  001F2E  ECEB  F014         	call	i2___ftpack	;wreg free
 12025  001F32  C001  F009         	movff	?i2___ftpack,?i2___ftadd
 12026  001F36  C002  F00A         	movff	?i2___ftpack+1,?i2___ftadd+1
 12027  001F3A  C003  F00B         	movff	?i2___ftpack+2,?i2___ftadd+2
 12028  001F3E  0012               	return		;funcret
 12029  001F40                     __end_ofi2___ftadd:
 12030                           	callstack 0
 12031                           
 12032 ;; *************** function i2___ftpack *****************
 12033 ;; Defined at:
 12034 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\float.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  arg             3    0[COMRAM] unsigned um
 12037 ;;  exp             1    3[COMRAM] unsigned char 
 12038 ;;  sign            1    4[COMRAM] unsigned char 
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  3    0[COMRAM] float 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2, status,0
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12050 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12054 ;;Total ram usage:        8 bytes
 12055 ;; Hardware stack levels used:    1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		i2___ftadd
 12060 ;;		i2___ftdiv
 12061 ;;		i2___ftmul
 12062 ;;		i2___lwtoft
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           	psect	text57
 12067  0029D6                     __ptext57:
 12068                           	callstack 0
 12069  0029D6                     i2___ftpack:
 12070                           	callstack 20
 12071                           
 12072                           ;incstack = 0
 12073  0029D6  5004               	movf	i2___ftpack@exp^0,w,c
 12074  0029D8  B4D8               	btfsc	status,2,c
 12075  0029DA  D005               	goto	i2u410_40
 12076  0029DC  5001               	movf	i2___ftpack@arg^0,w,c
 12077  0029DE  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
 12078  0029E0  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
 12079  0029E2  A4D8               	btfss	status,2,c
 12080  0029E4  D00C               	goto	i2l4147
 12081  0029E6                     i2u410_40:
 12082  0029E6  0E00               	movlw	0
 12083  0029E8  6E01               	movwf	?i2___ftpack^0,c
 12084  0029EA  0E00               	movlw	0
 12085  0029EC  6E02               	movwf	(?i2___ftpack+1)^0,c
 12086  0029EE  0E00               	movlw	0
 12087  0029F0  6E03               	movwf	(?i2___ftpack+2)^0,c
 12088  0029F2  0012               	return	
 12089  0029F4                     i2l4145:
 12090  0029F4  2A04               	incf	i2___ftpack@exp^0,f,c
 12091  0029F6  90D8               	bcf	status,0,c
 12092  0029F8  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 12093  0029FA  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 12094  0029FC  3201               	rrcf	i2___ftpack@arg^0,f,c
 12095  0029FE                     i2l4147:
 12096  0029FE  0E00               	movlw	0
 12097  002A00  1401               	andwf	i2___ftpack@arg^0,w,c
 12098  002A02  6E06               	movwf	??i2___ftpack^0,c
 12099  002A04  0E00               	movlw	0
 12100  002A06  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 12101  002A08  6E07               	movwf	(??i2___ftpack+1)^0,c
 12102  002A0A  0EFE               	movlw	254
 12103  002A0C  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 12104  002A0E  6E08               	movwf	(??i2___ftpack+2)^0,c
 12105  002A10  5006               	movf	??i2___ftpack^0,w,c
 12106  002A12  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 12107  002A14  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 12108  002A16  B4D8               	btfsc	status,2,c
 12109  002A18  D00C               	goto	i2l4153
 12110  002A1A  D7EC               	goto	i2l4145
 12111  002A1C                     i2l4149:
 12112  002A1C  2A04               	incf	i2___ftpack@exp^0,f,c
 12113  002A1E  0E01               	movlw	1
 12114  002A20  2601               	addwf	i2___ftpack@arg^0,f,c
 12115  002A22  0E00               	movlw	0
 12116  002A24  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
 12117  002A26  0E00               	movlw	0
 12118  002A28  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
 12119  002A2A  90D8               	bcf	status,0,c
 12120  002A2C  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 12121  002A2E  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 12122  002A30  3201               	rrcf	i2___ftpack@arg^0,f,c
 12123  002A32                     i2l4153:
 12124  002A32  0E00               	movlw	0
 12125  002A34  1401               	andwf	i2___ftpack@arg^0,w,c
 12126  002A36  6E06               	movwf	??i2___ftpack^0,c
 12127  002A38  0E00               	movlw	0
 12128  002A3A  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 12129  002A3C  6E07               	movwf	(??i2___ftpack+1)^0,c
 12130  002A3E  0EFF               	movlw	255
 12131  002A40  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 12132  002A42  6E08               	movwf	(??i2___ftpack+2)^0,c
 12133  002A44  5006               	movf	??i2___ftpack^0,w,c
 12134  002A46  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 12135  002A48  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 12136  002A4A  B4D8               	btfsc	status,2,c
 12137  002A4C  D006               	goto	i2l4157
 12138  002A4E  D7E6               	goto	i2l4149
 12139  002A50                     i2l4155:
 12140  002A50  0604               	decf	i2___ftpack@exp^0,f,c
 12141  002A52  90D8               	bcf	status,0,c
 12142  002A54  3601               	rlcf	i2___ftpack@arg^0,f,c
 12143  002A56  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
 12144  002A58  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
 12145  002A5A                     i2l4157:
 12146  002A5A  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
 12147  002A5C  D003               	goto	i2u414_40
 12148  002A5E  0E02               	movlw	2
 12149  002A60  6004               	cpfslt	i2___ftpack@exp^0,c
 12150  002A62  D7F6               	goto	i2l4155
 12151  002A64                     i2u414_40:
 12152  002A64  A004               	btfss	i2___ftpack@exp^0,0,c
 12153  002A66  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
 12154  002A68  90D8               	bcf	status,0,c
 12155  002A6A  3204               	rrcf	i2___ftpack@exp^0,f,c
 12156  002A6C  5004               	movf	i2___ftpack@exp^0,w,c
 12157  002A6E  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
 12158  002A70  5005               	movf	i2___ftpack@sign^0,w,c
 12159  002A72  A4D8               	btfss	status,2,c
 12160  002A74  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
 12161  002A76  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 12162  002A7A  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 12163  002A7E  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 12164  002A82  0012               	return		;funcret
 12165  002A84                     __end_ofi2___ftpack:
 12166                           	callstack 0
 12167                           
 12168 ;; *************** function i2___ftge *****************
 12169 ;; Defined at:
 12170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftge.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  ff1             3   26[COMRAM] float 
 12173 ;;  ff2             3   29[COMRAM] float 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;		None               void
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12185 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12187 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12189 ;;Total ram usage:        9 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; This function calls:
 12192 ;;		Nothing
 12193 ;; This function is called by:
 12194 ;;		_highIsr
 12195 ;; This function uses a non-reentrant model
 12196 ;;
 12197                           
 12198                           	psect	text58
 12199  002D30                     __ptext58:
 12200                           	callstack 0
 12201  002D30                     i2___ftge:
 12202                           	callstack 22
 12203                           
 12204                           ;incstack = 0
 12205  002D30  AE1D               	btfss	(i2___ftge@ff1+2)^0,7,c
 12206  002D32  D00F               	goto	i2l5095
 12207  002D34  0E00               	movlw	0
 12208  002D36  6E21               	movwf	??i2___ftge^0,c
 12209  002D38  0E00               	movlw	0
 12210  002D3A  6E22               	movwf	(??i2___ftge+1)^0,c
 12211  002D3C  0E80               	movlw	128
 12212  002D3E  6E23               	movwf	(??i2___ftge+2)^0,c
 12213  002D40  501B               	movf	i2___ftge@ff1^0,w,c
 12214  002D42  5C21               	subwf	??i2___ftge^0,w,c
 12215  002D44  6E1B               	movwf	i2___ftge@ff1^0,c
 12216  002D46  501C               	movf	(i2___ftge@ff1+1)^0,w,c
 12217  002D48  5822               	subwfb	(??i2___ftge+1)^0,w,c
 12218  002D4A  6E1C               	movwf	(i2___ftge@ff1+1)^0,c
 12219  002D4C  501D               	movf	(i2___ftge@ff1+2)^0,w,c
 12220  002D4E  5823               	subwfb	(??i2___ftge+2)^0,w,c
 12221  002D50  6E1D               	movwf	(i2___ftge@ff1+2)^0,c
 12222  002D52                     i2l5095:
 12223  002D52  AE20               	btfss	(i2___ftge@ff2+2)^0,7,c
 12224  002D54  D00F               	goto	i2l5099
 12225  002D56  0E00               	movlw	0
 12226  002D58  6E21               	movwf	??i2___ftge^0,c
 12227  002D5A  0E00               	movlw	0
 12228  002D5C  6E22               	movwf	(??i2___ftge+1)^0,c
 12229  002D5E  0E80               	movlw	128
 12230  002D60  6E23               	movwf	(??i2___ftge+2)^0,c
 12231  002D62  501E               	movf	i2___ftge@ff2^0,w,c
 12232  002D64  5C21               	subwf	??i2___ftge^0,w,c
 12233  002D66  6E1E               	movwf	i2___ftge@ff2^0,c
 12234  002D68  501F               	movf	(i2___ftge@ff2+1)^0,w,c
 12235  002D6A  5822               	subwfb	(??i2___ftge+1)^0,w,c
 12236  002D6C  6E1F               	movwf	(i2___ftge@ff2+1)^0,c
 12237  002D6E  5020               	movf	(i2___ftge@ff2+2)^0,w,c
 12238  002D70  5823               	subwfb	(??i2___ftge+2)^0,w,c
 12239  002D72  6E20               	movwf	(i2___ftge@ff2+2)^0,c
 12240  002D74                     i2l5099:
 12241  002D74  0E00               	movlw	0
 12242  002D76  1A1B               	xorwf	i2___ftge@ff1^0,f,c
 12243  002D78  0E00               	movlw	0
 12244  002D7A  1A1C               	xorwf	(i2___ftge@ff1+1)^0,f,c
 12245  002D7C  0E80               	movlw	128
 12246  002D7E  1A1D               	xorwf	(i2___ftge@ff1+2)^0,f,c
 12247  002D80  0E00               	movlw	0
 12248  002D82  1A1E               	xorwf	i2___ftge@ff2^0,f,c
 12249  002D84  0E00               	movlw	0
 12250  002D86  1A1F               	xorwf	(i2___ftge@ff2+1)^0,f,c
 12251  002D88  0E80               	movlw	128
 12252  002D8A  1A20               	xorwf	(i2___ftge@ff2+2)^0,f,c
 12253  002D8C  501E               	movf	i2___ftge@ff2^0,w,c
 12254  002D8E  5C1B               	subwf	i2___ftge@ff1^0,w,c
 12255  002D90  501F               	movf	(i2___ftge@ff2+1)^0,w,c
 12256  002D92  581C               	subwfb	(i2___ftge@ff1+1)^0,w,c
 12257  002D94  5020               	movf	(i2___ftge@ff2+2)^0,w,c
 12258  002D96  581D               	subwfb	(i2___ftge@ff1+2)^0,w,c
 12259  002D98  B0D8               	btfsc	status,0,c
 12260  002D9A  D002               	goto	i2l5105
 12261  002D9C  90D8               	bcf	status,0,c
 12262  002D9E  0012               	return	
 12263  002DA0                     i2l5105:
 12264  002DA0  80D8               	bsf	status,0,c
 12265  002DA2  0012               	return		;funcret
 12266  002DA4                     __end_ofi2___ftge:
 12267                           	callstack 0
 12268                           
 12269 ;; *************** function _restartTimer3 *****************
 12270 ;; Defined at:
 12271 ;;		line 114 in file "Main.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;Total ram usage:        0 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_highIsr
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text59
 12299  003518                     __ptext59:
 12300                           	callstack 0
 12301  003518                     _restartTimer3:
 12302                           	callstack 22
 12303                           
 12304                           ;Main.c: 115: TMR1H = 0;
 12305                           
 12306                           ;incstack = 0
 12307  003518  0E00               	movlw	0
 12308  00351A  6ECF               	movwf	207,c	;volatile
 12309                           
 12310                           ;Main.c: 116: TMR1L = 0;
 12311  00351C  0E00               	movlw	0
 12312  00351E  6ECE               	movwf	206,c	;volatile
 12313                           
 12314                           ;Main.c: 117: TMR3H = (unsigned char)((40536 >> 8) & 0x00FF);
 12315  003520  0E9E               	movlw	158
 12316  003522  6EB3               	movwf	179,c	;volatile
 12317                           
 12318                           ;Main.c: 118: TMR3L = (unsigned char)(40536 & 0x00FF );
 12319  003524  0E58               	movlw	88
 12320  003526  6EB2               	movwf	178,c	;volatile
 12321  003528  0012               	return		;funcret
 12322  00352A                     __end_of_restartTimer3:
 12323                           	callstack 0
 12324                           
 12325 ;; *************** function _incrementPercentHeatCounter *****************
 12326 ;; Defined at:
 12327 ;;		line 290 in file "Main.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;		None
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		wreg, status,2, status,0
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 3F/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;Total ram usage:        0 bytes
 12346 ;; Hardware stack levels used:    1
 12347 ;; This function calls:
 12348 ;;		Nothing
 12349 ;; This function is called by:
 12350 ;;		_highIsr
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           	psect	text60
 12355  0034F2                     __ptext60:
 12356                           	callstack 0
 12357  0034F2                     _incrementPercentHeatCounter:
 12358                           	callstack 22
 12359                           
 12360                           ;Main.c: 291: if (percentHeatCounter < 20) percentHeatCounter++;}
 12361                           
 12362                           ;incstack = 0
 12363  0034F2  0100               	movlb	0	; () banked
 12364  0034F4  51F4               	movf	(_percentHeatCounter+1)& (0+255),w,b
 12365  0034F6  E106               	bnz	i2l252
 12366  0034F8  0E14               	movlw	20
 12367  0034FA  5DF3               	subwf	_percentHeatCounter& (0+255),w,b
 12368  0034FC  B0D8               	btfsc	status,0,c
 12369  0034FE  0012               	return	
 12370                           
 12371                           ; BSR set to: 0
 12372  003500  4BF3               	infsnz	_percentHeatCounter& (0+255),f,b
 12373  003502  2BF4               	incf	(_percentHeatCounter+1)& (0+255),f,b
 12374  003504                     i2l252:
 12375                           
 12376                           ; BSR set to: 0
 12377  003504  0012               	return		;funcret
 12378  003506                     __end_of_incrementPercentHeatCounter:
 12379                           	callstack 0
 12380                           
 12381 ;; *************** function _incrementPercentCoolCounter *****************
 12382 ;; Defined at:
 12383 ;;		line 297 in file "Main.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;		None
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, status,2, status,0
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;Total ram usage:        0 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; This function calls:
 12404 ;;		Nothing
 12405 ;; This function is called by:
 12406 ;;		_highIsr
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text61
 12411  00352A                     __ptext61:
 12412                           	callstack 0
 12413  00352A                     _incrementPercentCoolCounter:
 12414                           	callstack 22
 12415                           
 12416                           ;Main.c: 298: if (percentCoolCounter < 20) percentCoolCounter++;}
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;incstack = 0
 12420  00352A  5046               	movf	(_percentCoolCounter+1)^0,w,c
 12421  00352C  E106               	bnz	i2l260
 12422  00352E  0E14               	movlw	20
 12423  003530  5C45               	subwf	_percentCoolCounter^0,w,c
 12424  003532  B0D8               	btfsc	status,0,c
 12425  003534  0012               	return	
 12426  003536  4A45               	infsnz	_percentCoolCounter^0,f,c
 12427  003538  2A46               	incf	(_percentCoolCounter+1)^0,f,c
 12428  00353A                     i2l260:
 12429  00353A  0012               	return		;funcret
 12430  00353C                     __end_of_incrementPercentCoolCounter:
 12431                           	callstack 0
 12432                           
 12433 ;; *************** function _incrementHS *****************
 12434 ;; Defined at:
 12435 ;;		line 303 in file "Main.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;		None
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;		None
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1    wreg      void 
 12442 ;; Registers used:
 12443 ;;		wreg, status,2, status,0
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;Total ram usage:        0 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; This function calls:
 12456 ;;		Nothing
 12457 ;; This function is called by:
 12458 ;;		_highIsr
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text62
 12463  00353C                     __ptext62:
 12464                           	callstack 0
 12465  00353C                     _incrementHS:
 12466                           	callstack 22
 12467                           
 12468                           ;Main.c: 304: if (HS < 5) HS++;}
 12469                           
 12470                           ;incstack = 0
 12471  00353C  504C               	movf	(_HS+1)^0,w,c
 12472  00353E  E106               	bnz	i2l268
 12473  003540  0E05               	movlw	5
 12474  003542  5C4B               	subwf	_HS^0,w,c
 12475  003544  B0D8               	btfsc	status,0,c
 12476  003546  0012               	return	
 12477  003548  4A4B               	infsnz	_HS^0,f,c
 12478  00354A  2A4C               	incf	(_HS+1)^0,f,c
 12479  00354C                     i2l268:
 12480  00354C  0012               	return		;funcret
 12481  00354E                     __end_of_incrementHS:
 12482                           	callstack 0
 12483                           
 12484 ;; *************** function _decrementPercentHeatCounter *****************
 12485 ;; Defined at:
 12486 ;;		line 294 in file "Main.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;		None
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;		None
 12491 ;; Return value:  Size  Location     Type
 12492 ;;                  1    wreg      void 
 12493 ;; Registers used:
 12494 ;;		wreg, status,2, status,0
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 3F/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;Total ram usage:        0 bytes
 12505 ;; Hardware stack levels used:    1
 12506 ;; This function calls:
 12507 ;;		Nothing
 12508 ;; This function is called by:
 12509 ;;		_highIsr
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text63
 12514  00354E                     __ptext63:
 12515                           	callstack 0
 12516  00354E                     _decrementPercentHeatCounter:
 12517                           	callstack 22
 12518                           
 12519                           ;Main.c: 295: if (percentHeatCounter > 0) percentHeatCounter--;}
 12520                           
 12521                           ;incstack = 0
 12522  00354E  0100               	movlb	0	; () banked
 12523  003550  51F3               	movf	_percentHeatCounter& (0+255),w,b
 12524  003552  11F4               	iorwf	(_percentHeatCounter+1)& (0+255),w,b
 12525  003554  B4D8               	btfsc	status,2,c
 12526  003556  0012               	return	
 12527                           
 12528                           ; BSR set to: 0
 12529  003558  07F3               	decf	_percentHeatCounter& (0+255),f,b
 12530  00355A  A0D8               	btfss	status,0,c
 12531  00355C  07F4               	decf	(_percentHeatCounter+1)& (0+255),f,b
 12532                           
 12533                           ; BSR set to: 0
 12534  00355E  0012               	return		;funcret
 12535  003560                     __end_of_decrementPercentHeatCounter:
 12536                           	callstack 0
 12537                           
 12538 ;; *************** function _decrementPercentCoolCounter *****************
 12539 ;; Defined at:
 12540 ;;		line 300 in file "Main.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;		None
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;		None
 12545 ;; Return value:  Size  Location     Type
 12546 ;;                  1    wreg      void 
 12547 ;; Registers used:
 12548 ;;		wreg, status,2, status,0
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/0
 12551 ;;		On exit  : 0/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;Total ram usage:        0 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_highIsr
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text64
 12568  003570                     __ptext64:
 12569                           	callstack 0
 12570  003570                     _decrementPercentCoolCounter:
 12571                           	callstack 22
 12572                           
 12573                           ;Main.c: 301: if (percentCoolCounter > 0) percentCoolCounter--;}
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;incstack = 0
 12577  003570  5045               	movf	_percentCoolCounter^0,w,c
 12578  003572  1046               	iorwf	(_percentCoolCounter+1)^0,w,c
 12579  003574  B4D8               	btfsc	status,2,c
 12580  003576  0012               	return	
 12581  003578  0645               	decf	_percentCoolCounter^0,f,c
 12582  00357A  A0D8               	btfss	status,0,c
 12583  00357C  0646               	decf	(_percentCoolCounter+1)^0,f,c
 12584  00357E  0012               	return		;funcret
 12585  003580                     __end_of_decrementPercentCoolCounter:
 12586                           	callstack 0
 12587                           
 12588 ;; *************** function _decrementHS *****************
 12589 ;; Defined at:
 12590 ;;		line 306 in file "Main.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1    wreg      void 
 12597 ;; Registers used:
 12598 ;;		wreg, status,2, status,0
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12608 ;;Total ram usage:        0 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_highIsr
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           	psect	text65
 12618  003580                     __ptext65:
 12619                           	callstack 0
 12620  003580                     _decrementHS:
 12621                           	callstack 22
 12622                           
 12623                           ;Main.c: 307: if (HS > 0) HS--;}
 12624                           
 12625                           ;incstack = 0
 12626  003580  504B               	movf	_HS^0,w,c
 12627  003582  104C               	iorwf	(_HS+1)^0,w,c
 12628  003584  B4D8               	btfsc	status,2,c
 12629  003586  0012               	return	
 12630  003588  064B               	decf	_HS^0,f,c
 12631  00358A  A0D8               	btfss	status,0,c
 12632  00358C  064C               	decf	(_HS+1)^0,f,c
 12633  00358E  0012               	return		;funcret
 12634  003590                     __end_of_decrementHS:
 12635                           	callstack 0
 12636                           
 12637 ;; *************** function _changeOperationMode *****************
 12638 ;; Defined at:
 12639 ;;		line 226 in file "Main.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;		None
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2, status,0
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; This function calls:
 12660 ;;		Nothing
 12661 ;; This function is called by:
 12662 ;;		_highIsr
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text66
 12667  0034A0                     __ptext66:
 12668                           	callstack 0
 12669  0034A0                     _changeOperationMode:
 12670                           	callstack 22
 12671                           
 12672                           ;Main.c: 227: if (operationMode++ == 2) operationMode = 0;
 12673                           
 12674                           ;incstack = 0
 12675  0034A0  4A49               	infsnz	_operationMode^0,f,c
 12676  0034A2  2A4A               	incf	(_operationMode+1)^0,f,c
 12677  0034A4  0E03               	movlw	3
 12678  0034A6  1849               	xorwf	_operationMode^0,w,c
 12679  0034A8  104A               	iorwf	(_operationMode+1)^0,w,c
 12680  0034AA  A4D8               	btfss	status,2,c
 12681  0034AC  D004               	goto	i2l219
 12682  0034AE  0E00               	movlw	0
 12683  0034B0  6E4A               	movwf	(_operationMode+1)^0,c
 12684  0034B2  0E00               	movlw	0
 12685  0034B4  6E49               	movwf	_operationMode^0,c
 12686  0034B6                     i2l219:
 12687                           
 12688                           ;Main.c: 228: timerCounter = 0;
 12689  0034B6  0E00               	movlw	0
 12690  0034B8  6E44               	movwf	(_timerCounter+1)^0,c
 12691  0034BA  0E00               	movlw	0
 12692  0034BC  6E43               	movwf	_timerCounter^0,c
 12693  0034BE  0012               	return		;funcret
 12694  0034C0                     __end_of_changeOperationMode:
 12695                           	callstack 0
 12696                           
 12697                           	psect	rparam
 12698  0000                     
 12699                           	psect	temp
 12700  00005F                     btemp:
 12701                           	callstack 0
 12702  00005F                     	ds	1
 12703  0000                     int$flags	set	btemp
 12704  0000                     wtemp8	set	btemp+1
 12705  0000                     ttemp5	set	btemp+1
 12706  0000                     ttemp6	set	btemp+4
 12707  0000                     ttemp7	set	btemp+8
 12708                           
 12709                           	psect	idloc
 12710                           
 12711                           ;Config register IDLOC0 @ 0x200000
 12712                           ;	unspecified, using default values
 12713  200000                     	org	2097152
 12714  200000  FF                 	db	255
 12715                           
 12716                           ;Config register IDLOC1 @ 0x200001
 12717                           ;	unspecified, using default values
 12718  200001                     	org	2097153
 12719  200001  FF                 	db	255
 12720                           
 12721                           ;Config register IDLOC2 @ 0x200002
 12722                           ;	unspecified, using default values
 12723  200002                     	org	2097154
 12724  200002  FF                 	db	255
 12725                           
 12726                           ;Config register IDLOC3 @ 0x200003
 12727                           ;	unspecified, using default values
 12728  200003                     	org	2097155
 12729  200003  FF                 	db	255
 12730                           
 12731                           ;Config register IDLOC4 @ 0x200004
 12732                           ;	unspecified, using default values
 12733  200004                     	org	2097156
 12734  200004  FF                 	db	255
 12735                           
 12736                           ;Config register IDLOC5 @ 0x200005
 12737                           ;	unspecified, using default values
 12738  200005                     	org	2097157
 12739  200005  FF                 	db	255
 12740                           
 12741                           ;Config register IDLOC6 @ 0x200006
 12742                           ;	unspecified, using default values
 12743  200006                     	org	2097158
 12744  200006  FF                 	db	255
 12745                           
 12746                           ;Config register IDLOC7 @ 0x200007
 12747                           ;	unspecified, using default values
 12748  200007                     	org	2097159
 12749  200007  FF                 	db	255
 12750                           
 12751                           	psect	config
 12752                           
 12753                           ; Padding undefined space
 12754  300000                     	org	3145728
 12755  300000  FF                 	db	255
 12756                           
 12757                           ;Config register CONFIG1H @ 0x300001
 12758                           ;	Oscillator Selection bits
 12759                           ;	OSC = XT, XT oscillator
 12760                           ;	Fail-Safe Clock Monitor Enable bit
 12761                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12762                           ;	Internal/External Oscillator Switchover bit
 12763                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12764  300001                     	org	3145729
 12765  300001  01                 	db	1
 12766                           
 12767                           ;Config register CONFIG2L @ 0x300002
 12768                           ;	Power-up Timer Enable bit
 12769                           ;	PWRT = OFF, PWRT disabled
 12770                           ;	Brown-out Reset Enable bits
 12771                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12772                           ;	Brown Out Reset Voltage bits
 12773                           ;	BORV = 3, Minimum setting
 12774  300002                     	org	3145730
 12775  300002  1F                 	db	31
 12776                           
 12777                           ;Config register CONFIG2H @ 0x300003
 12778                           ;	Watchdog Timer Enable bit
 12779                           ;	WDT = ON, WDT enabled
 12780                           ;	Watchdog Timer Postscale Select bits
 12781                           ;	WDTPS = 32768, 1:32768
 12782  300003                     	org	3145731
 12783  300003  1F                 	db	31
 12784                           
 12785                           ; Padding undefined space
 12786  300004                     	org	3145732
 12787  300004  FF                 	db	255
 12788                           
 12789                           ;Config register CONFIG3H @ 0x300005
 12790                           ;	CCP2 MUX bit
 12791                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12792                           ;	PORTB A/D Enable bit
 12793                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12794                           ;	Low-Power Timer1 Oscillator Enable bit
 12795                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12796                           ;	MCLR Pin Enable bit
 12797                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12798  300005                     	org	3145733
 12799  300005  83                 	db	131
 12800                           
 12801                           ;Config register CONFIG4L @ 0x300006
 12802                           ;	Stack Full/Underflow Reset Enable bit
 12803                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12804                           ;	Single-Supply ICSP Enable bit
 12805                           ;	LVP = ON, Single-Supply ICSP enabled
 12806                           ;	Extended Instruction Set Enable bit
 12807                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12808                           ;	Background Debugger Enable bit
 12809                           ;	DEBUG = 0x1, unprogrammed default
 12810  300006                     	org	3145734
 12811  300006  85                 	db	133
 12812                           
 12813                           ; Padding undefined space
 12814  300007                     	org	3145735
 12815  300007  FF                 	db	255
 12816                           
 12817                           ;Config register CONFIG5L @ 0x300008
 12818                           ;	Code Protection bit
 12819                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12820                           ;	Code Protection bit
 12821                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12822                           ;	Code Protection bit
 12823                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12824                           ;	Code Protection bit
 12825                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12826  300008                     	org	3145736
 12827  300008  0F                 	db	15
 12828                           
 12829                           ;Config register CONFIG5H @ 0x300009
 12830                           ;	Boot Block Code Protection bit
 12831                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12832                           ;	Data EEPROM Code Protection bit
 12833                           ;	CPD = OFF, Data EEPROM not code-protected
 12834  300009                     	org	3145737
 12835  300009  C0                 	db	192
 12836                           
 12837                           ;Config register CONFIG6L @ 0x30000A
 12838                           ;	Write Protection bit
 12839                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12840                           ;	Write Protection bit
 12841                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12842                           ;	Write Protection bit
 12843                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12844                           ;	Write Protection bit
 12845                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12846  30000A                     	org	3145738
 12847  30000A  0F                 	db	15
 12848                           
 12849                           ;Config register CONFIG6H @ 0x30000B
 12850                           ;	Configuration Register Write Protection bit
 12851                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12852                           ;	Boot Block Write Protection bit
 12853                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12854                           ;	Data EEPROM Write Protection bit
 12855                           ;	WRTD = OFF, Data EEPROM not write-protected
 12856  30000B                     	org	3145739
 12857  30000B  E0                 	db	224
 12858                           
 12859                           ;Config register CONFIG7L @ 0x30000C
 12860                           ;	Table Read Protection bit
 12861                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12862                           ;	Table Read Protection bit
 12863                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12864                           ;	Table Read Protection bit
 12865                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12866                           ;	Table Read Protection bit
 12867                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12868  30000C                     	org	3145740
 12869  30000C  0F                 	db	15
 12870                           
 12871                           ;Config register CONFIG7H @ 0x30000D
 12872                           ;	Boot Block Table Read Protection bit
 12873                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12874  30000D                     	org	3145741
 12875  30000D  40                 	db	64
 12876                           tosu	equ	0xFFF
 12877                           tosh	equ	0xFFE
 12878                           tosl	equ	0xFFD
 12879                           stkptr	equ	0xFFC
 12880                           pclatu	equ	0xFFB
 12881                           pclath	equ	0xFFA
 12882                           pcl	equ	0xFF9
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           indf0	equ	0xFEF
 12890                           postinc0	equ	0xFEE
 12891                           postdec0	equ	0xFED
 12892                           preinc0	equ	0xFEC
 12893                           plusw0	equ	0xFEB
 12894                           fsr0h	equ	0xFEA
 12895                           fsr0l	equ	0xFE9
 12896                           wreg	equ	0xFE8
 12897                           indf1	equ	0xFE7
 12898                           postinc1	equ	0xFE6
 12899                           postdec1	equ	0xFE5
 12900                           preinc1	equ	0xFE4
 12901                           plusw1	equ	0xFE3
 12902                           fsr1h	equ	0xFE2
 12903                           fsr1l	equ	0xFE1
 12904                           bsr	equ	0xFE0
 12905                           indf2	equ	0xFDF
 12906                           postinc2	equ	0xFDE
 12907                           postdec2	equ	0xFDD
 12908                           preinc2	equ	0xFDC
 12909                           plusw2	equ	0xFDB
 12910                           fsr2h	equ	0xFDA
 12911                           fsr2l	equ	0xFD9
 12912                           status	equ	0xFD8

Data Sizes:
    Strings     287
    Constant    118
    Data        6
    BSS         56
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     54      94
    BANK0           128    115     117
    BANK1           256    101     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_32(CODE[7]), sprintf@c(BANK1[1]), ?_sprintf(BANK0[2]), STR_31(CODE[6]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), heatError(COMRAM[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_28(CODE[6]), STR_27(CODE[52]), STR_26(CODE[12]), STR_25(CODE[23]), 
		 -> STR_24(CODE[3]), STR_20(CODE[3]), STR_16(CODE[6]), STR_15(CODE[10]), 
		 -> STR_12(CODE[20]), STR_7(CODE[11]), STR_5(CODE[11]), STR_3(CODE[3]), 
		 -> STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    main$1361	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[6]), STR_30(CODE[20]), 

    main$1360	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_31(CODE[6]), STR_30(CODE[20]), STR_29(CODE[20]), 

    main$1345	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), STR_22(CODE[3]), 

    main$1344	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 

    main$1336	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[5]), STR_18(CODE[5]), 

    main$1335	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 

    main$1327	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), 

    main$1321	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_11(CODE[2]), STR_10(CODE[2]), 

    main$1317	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 41
		 -> main@Buffer(BANK1[32]), STR_4(CODE[41]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_6(CODE[4]), main@Buffer(BANK1[32]), STR_2(CODE[3]), Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->i2_set_pwm1_percent
    i2_set_pwm1_percent->i2___ftdiv
    i2___fttol->i2___ftadd
    i2___ftmul->i2___lwtoft
    i2___ftdiv->i2___ftmul
    i2___lwtoft->i2___ftpack
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___ftpack
    i2___ftge->i2___ftsub

Critical Paths under _main in BANK0

    _main->_autoCool
    _send_string_no_lib->_send_byte_no_lib
    _read_adc_voltage->___ftdiv
    ___awtoft->___ftpack
    _lcd_init->_lcd_send_byte
    _autoHeat->_sprintf
    _autoCool->_sprintf
    _sprintf->___ftge
    _sprintf->___fttol
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___ftadd
    ___ftge->___ftsub
    _set_pwm1_percent->___fttol
    ___fttol->___ftadd
    ___ftmul->_read_adc_voltage
    ___ftdiv->___awtoft
    ___ftadd->_fround
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    ___lwtoft->___ftpack

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _autoHeat->_sprintf
    _autoCool->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0  351068
                                             28 BANK1     73    73      0
                             ___ftge
                            ___ftmul
                            ___ftsub
                             ___wmul
                           _autoCool
                           _autoHeat
                               _init
                    _init_adc_no_lib
                          _init_pwm1
                  _is_byte_available
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                   _read_adc_voltage
                   _read_byte_no_lib
                 _send_string_no_lib
                         _setupPorts
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       6
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     546
                                              1 BANK0      2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                     9     6      3   10721
                                             27 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___wmul
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      65
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3656
                                              8 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1863
                                             10 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       3
                                              0 BANK0      1     1      0
                          _init_pwm1
 ---------------------------------------------------------------------------------
 (1) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoHeat                                             2     2      0  123942
                                            106 BANK0      2     2      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                             ___wmul
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
                   _set_pwm1_percent
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _autoCool                                             9     9      0  117958
                                            106 BANK0      9     9      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                           ___lwtoft
                             ___wmul
                         _lcd_gotoxy
                           _lcd_puts
                   _set_pwm1_percent
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    35     11   62615
                                             89 BANK0     17     6     11
                                              0 BANK1     28    28      0
                            ___awdiv
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                           ___lwtoft (ARG)
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   11624
                                             51 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              11     8      3    9140
                                             51 BANK0     11     8      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     502
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     511
                                              4 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     634
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     853
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2362
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3625
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     952
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     781
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6764
                                             74 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     155
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    2578
                                             80 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftsub (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _set_pwm1_percent                                     8     5      3   19285
                                             89 BANK0      8     5      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (3) _set_pwm1_raw                                         4     2      2     152
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     821
                                             74 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7777
                                             36 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                   _read_adc_voltage (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4539
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5518
                                             62 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    5431
                                             14 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    4286
                                             13 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2627
                                             10 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1169
                                              8 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      99
                                              6 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      68
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     428
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3844
                                              8 BANK0      3     0      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3433
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _highIsr                                              5     5      0    7317
                                             49 COMRAM     5     5      0
                _changeOperationMode
                        _decrementHS
        _decrementPercentCoolCounter
        _decrementPercentHeatCounter
                        _incrementHS
        _incrementPercentCoolCounter
        _incrementPercentHeatCounter
                      _restartTimer3
                           i2___ftge
                          i2___ftmul
                          i2___ftsub
                         i2___lwtoft
                 i2_set_pwm1_percent
 ---------------------------------------------------------------------------------
 (9) i2_set_pwm1_percent                                   8     5      3    3856
                                             41 COMRAM     8     5      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
                     i2_set_pwm1_raw
 ---------------------------------------------------------------------------------
 (10) i2_set_pwm1_raw                                      4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     278
                                             20 COMRAM    15    11      4
                          i2___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftmul                                          15     9      6     975
                                             11 COMRAM    15     9      6
                         i2___ftpack
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftdiv                                          15     9      6     877
                                             26 COMRAM    15     9      6
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___lwtoft                                           3     0      3     617
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftsub                                            6     0      6    1606
                                             20 COMRAM     6     0      6
                          i2___ftadd
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftadd                                          12     6      6    1487
                                              8 COMRAM    12     6      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) i2___ftge                                             9     3      6     240
                                             26 COMRAM     9     3      6
                          i2___ftsub (ARG)
                         i2___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (9) _restartTimer3                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementPercentHeatCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementPercentCoolCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementHS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementPercentHeatCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementPercentCoolCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementHS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _changeOperationMode                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftge
     ___ftadd (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftpack (ARG)
     ___lbdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
     _read_adc_voltage (ARG)
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _read_adc_raw_no_lib
   ___ftsub
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
   ___wmul
   _autoCool
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       _read_adc_voltage (ARG)
         ___awtoft
           ___ftpack
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul
         _read_adc_raw_no_lib
     ___ftsub
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _set_pwm1_percent
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
       _set_pwm1_raw
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftsub (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             _fround (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
                 _read_adc_voltage (ARG)
                   ___awtoft
                     ___ftpack
                     ___wmul (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___wmul
                   _read_adc_raw_no_lib
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
   _autoHeat
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___ftge
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       _read_adc_voltage (ARG)
         ___awtoft
           ___ftpack
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul
         _read_adc_raw_no_lib
     ___ftsub
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _set_pwm1_percent
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
       _set_pwm1_raw
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftsub (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             _fround (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
                 _read_adc_voltage (ARG)
                   ___awtoft
                     ___ftpack
                     ___wmul (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___wmul (ARG)
                     ___wmul (ARG)
                   ___wmul
                   _read_adc_raw_no_lib
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___lltoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
   _init
     _init_pwm1
   _init_adc_no_lib
   _init_pwm1
   _is_byte_available
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _read_adc_voltage
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _read_adc_raw_no_lib
   _read_byte_no_lib
   _send_string_no_lib
     _send_byte_no_lib
   _setupPorts
   _setupSerial
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       _fround (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftge (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           _fround (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
               _read_adc_voltage (ARG)
                 ___awtoft
                   ___ftpack
                   ___wmul (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___wmul (ARG)
                   ___wmul (ARG)
                 ___wmul
                 _read_adc_raw_no_lib
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       _read_adc_voltage (ARG)
         ___awtoft
           ___ftpack
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul
         _read_adc_raw_no_lib
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         _fround (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
             _read_adc_voltage (ARG)
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___wmul (ARG)
               ___wmul
               _read_adc_raw_no_lib
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
           _read_adc_voltage (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul
             _read_adc_raw_no_lib
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___wmul (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
         _read_adc_voltage (ARG)
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul
           _read_adc_raw_no_lib

 _highIsr (ROOT)
   _changeOperationMode
   _decrementHS
   _decrementPercentCoolCounter
   _decrementPercentHeatCounter
   _incrementHS
   _incrementPercentCoolCounter
   _incrementPercentHeatCounter
   _restartTimer3
   i2___ftge
     i2___ftsub (ARG)
       i2___ftadd
         i2___ftpack
       i2___lwtoft (ARG)
         i2___ftpack
     i2___lwtoft (ARG)
       i2___ftpack
   i2___ftmul
     i2___ftpack
     i2___lwtoft (ARG)
       i2___ftpack
   i2___ftsub
     i2___ftadd
       i2___ftpack
     i2___lwtoft (ARG)
       i2___ftpack
   i2___lwtoft
     i2___ftpack
   i2_set_pwm1_percent
     i2___ftadd
       i2___ftpack
     i2___ftdiv
       i2___ftmul (ARG)
         i2___ftpack
         i2___lwtoft (ARG)
           i2___ftpack
       i2___ftpack (ARG)
     i2___ftmul
       i2___ftpack
       i2___lwtoft (ARG)
         i2___ftpack
     i2___fttol
       i2___ftadd (ARG)
         i2___ftpack
     i2_set_pwm1_raw

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     65      88       7       53.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     73      75       5       91.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     36      5E       1       74.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      34        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Apr 23 23:06:29 2022

                   ?_read_adc_voltage 009B                         _autoHeat$2113 00EA  
                  ??_read_adc_voltage 009E                                    _HS 004B  
                                  _OT 0185                                    _SP 0053  
                                  _RT 0050                        ?_lcd_send_byte 0088  
                        ___awdiv@sign 008B                         _autoCool$1109 00ED  
                       _autoCool$2112 00EA                   ___wmul@multiplicand 0082  
                          i2___ftpack 29D6                          ___ftadd@exp1 00C9  
                        ___ftadd@exp2 00C8                          ___ftadd@sign 00C7  
                                 l156 3394                                   l340 34E6  
                                 l412 118E                                   l165 3224  
                                 l334 350E                                   l175 32CE  
                                 l335 350C                                   l353 0CE2  
                                 l541 07F4                                   l608 2CAA  
                                 l928 1D26                                   l946 2258  
                                 l939 2668                                   l947 2280  
                          i2___lwtoft 343A                                   l978 33E0  
                                 _PR2 000FCB                                   _lcd 000F83  
                        ___awmod@sign 0085                                   prod 000FF3  
           read_adc_voltage@raw_value 00A2                                   wreg 000FE8  
                         main@channel 0164                           lcd_gotoxy@x 008B  
                         lcd_gotoxy@y 008A                          ___ftdiv@cntr 0095  
                        ___ftdiv@sign 009A                                  l1023 2ED4  
                                l6023 2604                                  l6111 2804  
                                l6007 2C9C                                  l6017 25DC  
                                l6121 281C                                  l6201 003A  
                                l7001 1126                                  l6043 2642  
                                l6123 2828                                  l6115 2814  
                                l6203 004C                                  l7003 112C  
                                l5501 296E                                  l6061 31A2  
                                l6213 0086                                  l6151 2F48  
                                l6207 0056                                  l7007 1134  
                                l5505 2984                                  l6129 2844  
                                l6073 2D00                                  l6145 2EC6  
                                l6137 2E92                                  l6153 2F54  
                                l6401 06D0                                  l6321 03F2  
                                l6305 0356                                  l6241 018C  
                                l6233 0164                                  l5507 29A2  
                                l5531 3152                                  l6171 3054  
                                l6139 2E9E                                  l6251 01B8  
                                l6227 0114                                  l6235 017A  
                                l7019 1182                                  l5509 29AC  
                                l5453 32D6                                  l5533 3156  
                                l6093 27AE                                  l6069 2CDE  
                                l5701 2C2E                                  l6333 047E  
                                l6261 0224                                  l6253 01BE  
                                l7045 1286                                  l7053 12D0  
                                l5527 314A                                  l6175 3080  
                                l5551 1C40                                  l6191 2B0E  
                                l6079 2D2C                                  l6503 0A30  
                                l6431 07D0                                  l6415 0714  
                                l6423 07AA                                  l6407 06EA  
                                l6271 0258                                  l6239 0188  
                                l7047 129A                                  l5457 3384  
                                l5529 314E                                  l5537 315C  
                                l5609 1D72                                  l5625 241C  
                                l5721 2DD2                                  l5713 2DB8  
                                l6521 0AB0                                  l6513 0A7A  
                                l6425 07B6                                  l6345 0508  
                                l6337 04BE                                  l6329 0458  
                                l6281 02BA                                  l6273 026C  
                                l6265 023C                                  l6249 01AE  
                                l7049 12A4                                  l5539 3178  
                                l5643 245E                                  l5619 23F4  
                                l5723 2DDA                                  l6507 0A5A  
                                l6363 05EE                                  l6267 0246  
                                l6195 001C                                  l5581 1CC4  
                                l5557 1C68                                  l5653 2486  
                                l5813 1A02                                  l5733 2DFC  
                                l5717 2DC4                                  l6525 0AE0  
                                l6461 095A                                  l6445 0818  
                                l6437 07F8                                  l6381 0668  
                                l6365 05F2                                  l6349 0530  
                                l6613 2EFC                                  l5487 30EC  
                                l5591 1CF8                                  l5583 1CCE  
                                l5639 244E                                  l5751 3264  
                                l5807 195E                                  l6535 0B0C  
                                l6543 0B32                                  l6527 0AEA  
                                l6519 0AA6                                  l6359 0588  
                                l6295 031A                                  l6279 02A4  
                                l6287 02CC                                  l5497 2946  
                                l5593 1D02                                  l5649 2476  
                                l5921 22BE                                  l5913 22AA  
                                l5681 2BEE                                  l5737 2E0A  
                                l5729 2DF2                                  l5833 146E  
                                l6449 086A                                  l6393 06A4  
                                l6385 067E                                  l6377 062A  
                                l6289 0306                                  l6801 2FFC  
                                l5499 2950                                  l5579 1CBA  
                                l5747 325E                                  l5763 3282  
                                l5683 2BF6                                  l5675 2BD8  
                                l5851 161E                                  l5827 13DE  
                                l6563 0C04                                  l6467 0974  
                                l6459 094E                                  l6643 1FE6  
                                l6627 2F24                                  l5909 229A  
                                l5693 2C16                                  l5669 2BC8  
                                l5845 158E                                  l5837 1492  
                                l6557 0B78                                  l6485 09CA  
                                l6469 097E                                  l6645 1FF2  
                                l6805 3028                                  l5791 2FD6  
                                l5599 1D42                                  l5919 22B2  
                                l5759 327A                                  l5863 3478  
                                l6487 09CE                                  l6479 09B2  
                                l6399 06BE                                  l6655 2084  
                                l6671 1AF8                                  l6583 329A  
                                l6903 0E48                                  l5785 2FA4  
                                l5929 22F6                                  l5873 2204  
                                l5777 3372                                  l5769 335A  
                                l5697 2C20                                  l6817 34EE  
                                l6921 0EC4                                  l5787 2FBE  
                                l5795 2FE2                                  l6499 0A06  
                                l6667 1AE4                                  l6675 1B20  
                                l6915 0E94                                  l5789 2FCA  
                                l5981 23B4                                  l5973 23A0  
                                l5957 2374                                  l5949 2344  
                                l6941 0F66                                  l6933 0F40  
                                l6925 0F00                                  l6679 1B70  
                                l6943 0F7A                                  l6927 0F10  
                                l5969 2390                                  l6945 0F84  
                                l5995 2C5C                                  l5979 23A8  
                                l6963 1026                                  l5997 2C68  
                                l6981 109C                                  l6965 102E  
                                l6893 0E18                                  l6991 10D8  
                                l6983 10B2                                  l6975 105E  
                                l6959 1012                                  l6977 1072  
                                l6995 10E6                                  l6979 107C  
                                STR_1 FFBB                                  STR_2 FFE9  
                                STR_3 FFF5                                  STR_4 FF13  
                                STR_5 FFA6                                  STR_6 FFE5  
                                STR_7 FF9B                                  STR_8 FFFC  
                                STR_9 FFFA                                  _PIE1 000F9D  
                                u6120 2938                                  u6201 1C14  
                                u7001 2792                                  u7010 279C  
                                u7020 27CC                                  u6230 1C32  
                                u6160 29B6                                  u6401 23DC  
                                u7025 27C4                                  u7130 3076  
                                u6330 1CD6                                  u7140 30A2  
                                u6260 1C5A                                  u7060 282E  
                                u6421 2404                                  u7230 01F2  
                                u6095 30B8                                  u6191 1C00  
                                u6096 30BA                                  u6360 1D0A  
                                u7400 04D0                                  u7240 01F8  
                                u7137 306C                                  u6290 1C98  
                                u7090 2EA2                                  u8130 10D2  
                                u7147 3098                                  u8140 10E0  
                                u7237 01E8                                  u6550 2DDE  
                                u7430 0508                                  u7350 0390  
                                u7190 00EC                                  u6711 21E8  
                                u6800 22E4                                  u6720 21F2  
                                u7520 06F8                                  u6490 2BFA  
                                u7290 0296                                  u6731 2214  
                                u7355 0386                                  u8237 30E4  
                                u6901 25C4                                  u6590 3268  
                                u7550 07DE                                  u7390 0490  
                                u8247 3386                                  u7800 0C34  
                                u7560 07EE                                  u6921 25EC  
                                u7297 028C                                  u6860 23BA  
                                u6790 22C4                                  u6880 2C6C  
                                u7760 0B3A                                  u7770 0B5C  
                                u7930 301E                                  u7940 304A  
                                u7790 0C16                                  u7937 3014  
                                u7890 1ADC                                  u7970 34E2  
                                u7947 3040                      ?_lcd_send_nibble 0001  
                                _main 0C42                          ___ftpack@arg 0080  
                                _init 20D6                      _send_byte_no_lib 3506  
                        ___ftpack@exp 0083                                  fsr0h 000FEA  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 005F                          i2___ftadd@f1 0009  
                        i2___ftadd@f2 000C                          i2___ftge@ff1 001B  
                        i2___ftge@ff2 001E                                  prodh 000FF4  
                                prodl 000FF3                                  start 000E  
                        i2___ftdiv@f1 001B                          i2___ftdiv@f2 001E  
                        i2___ftdiv@f3 0025                           main@voltage 0145  
                        _sprintf$2120 0100           __end_of_changeOperationMode 34C0  
                        ___ftmul@cntr 00B1                          i2___ftmul@f1 000C  
                        i2___ftmul@f2 000F                          ___param_bank 000000  
                        ___ftmul@sign 00B2                          ?_incrementHS 0001  
                        i2___ftsub@f1 0015                          i2___ftsub@f2 0018  
                        i2___fttol@f1 0015          ?_incrementPercentHeatCounter 0001  
                        ___fttol@exp1 00D8                      _set_pwm1_percent 2A84  
                        ___fttol@lval 00D4                  __end_of_delay_cycles 32F2  
                               ?_main 0001                                 ?_init 0001  
                     __end_of___awdiv 2C38                       __end_of___lbdiv 3286  
                     __end_of___ftadd 1D98                                 STR_10 FFFC  
                               STR_11 FFFA                                 STR_20 FFD3  
                               STR_12 FF7B                                 STR_13 FFF8  
                               STR_21 FFEF                                 STR_14 FFE7  
                               STR_22 FFF2                                 STR_30 FF67  
                               STR_23 FFEC                                 STR_31 FFCA  
                               STR_15 FFB1                                 STR_24 FFE9  
                               STR_16 FFD0                                 STR_32 FFC3  
                               STR_17 FFE0                                 STR_25 FF3C  
                               STR_18 FFD6                                 STR_26 FF8F  
                               STR_19 FFDB                                 STR_27 FEDF  
                               STR_28 FFD0                       __end_of___awmod 2E14  
                               STR_29 FF53                       __end_of___lbmod 337A  
                     __end_of___ftdiv 269A                       __end_of___ftneg 33EE  
                        i2___lwtoft@c 0009                       __end_of___lldiv 2CBC  
                     __end_of___ftmul 24C0                       ___awdiv@divisor 0088  
                     __end_of___llmod 2EE6                       __end_of___ftsub 31CC  
                     __end_of___fttol 2856                                 _T2CON 000FCA  
                      i2_set_pwm1_raw 3320                                 i2l302 1808  
                               i2l303 1856                                 i2l304 1830  
                               i2l219 34B6                                 i2l260 353A  
                               i2l252 3504                                 i2l281 171C  
                               i2l268 354C                                 i2l277 17FC  
                               i2l928 1ECE                                 i2l939 274E  
                     ___awdiv@counter 008A                                 _RCREG 000FAE  
                               _RCSTA 000FAB                                 _TMR1H 000FCF  
                               _TMR1L 000FCE                                 _TMR3H 000FB3  
                               _TMR3L 000FB2                                 _SPBRG 000FAF  
                               _PORTD 000F83               read_adc_voltage@channel 00A1  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                                 _TRISD 000F95  
                               _TRISE 000F96                                 _TXREG 000FAD  
                               _TXSTA 000FAC          ?_decrementPercentHeatCounter 0001  
                        ___lltoft@exp 0090                       __end_of_highIsr 185A  
                       ___awtoft@sign 008B                       __end_of_dpowers FEDF  
                               _scale 12D6                       __end_of_isdigit 3480  
                               _hours 003B                       _init_adc_no_lib 3590  
                       ___ftpack@sign 0084          ?_incrementPercentCoolCounter 0001  
                               tablat 000FF5                      __end_ofi2___ftge 2DA4  
                __size_of_decrementHS 0010                                 ttemp5 0060  
                               ttemp6 0063                                 ttemp7 0067  
                               status 000FD8               read_adc_voltage@voltage 009E  
                               wtemp8 0060                       __end_of_sprintf 0C42  
                     ___lbdiv@divisor 0084                       ___lbdiv@counter 0086  
                       i2___ftdiv@exp 0028                    __size_ofi2___ftadd 01A8  
                  __size_ofi2___ftdiv 00E6                    __size_ofi2___ftmul 00F4  
                  __size_ofi2___ftsub 0040                    __size_ofi2___fttol 00D2  
          __end_ofi2_set_pwm1_percent 2BB4                        main@RecvedChar 0163  
                     __initialization 30FA          ?_decrementPercentCoolCounter 0001  
                        __end_of_main 12D6                       ??_lcd_send_byte 0089  
                        __end_of_init 21D8                         i2___ftmul@exp 0015  
       ??_incrementPercentHeatCounter 0001                __end_ofi2_set_pwm1_raw 334E  
                         ?i2___ftpack 0001                                ??_main 00F3  
                       ___fttol@sign1 00D3                                ??_init 0080  
                         ?i2___lwtoft 0009               i2set_pwm1_percent@value 002A  
                       __activetblptr 000002                  __size_of__tdiv_to_l_ 00FE  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                      ___llmod@dividend 008D  
                              ?_scale 00B3                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR1L 000FBE  
                    ___awdiv@dividend 0086                      __end_of___awtoft 32BE  
                    __end_of___ftpack 29D6                      __end_of___lltoft 2F9E  
                              i2l5105 2DA0                                i2l4153 2A32  
                              i2l4145 29F4                                i2l5113 31E2  
                              i2l4155 2A50                                i2l4147 29FE  
                              i2l4157 2A5A                                i2l4149 2A1C  
                              i2l5143 1706                                i2l5147 1712  
                              i2l4621 1E10                                i2l5173 179E  
                              i2l5181 17F6                                i2l5165 1770  
                              i2l5149 171E                                i2l5095 2D52  
                              i2l4615 1DE8                                i2l5175 17A8  
                              i2l5089 2BA6                                i2l5169 178E  
                              i2l5099 2D74                                i2l4643 1E62  
                              i2l4645 1E6C                                i2l4709 2728  
                              i2l4813 2916                                i2l4805 28EE  
                              i2l4663 1EEA                                i2l4655 1EA0  
                              i2l4647 1E76                                i2l4735 2510  
                              i2l4807 28FA                                i2l4673 1F1A  
                              i2l4657 1EAA                                i2l4753 2552  
                              i2l4729 24E8                                i2l4683 26C2  
                              i2l4763 257A                                i2l4749 2542  
                              i2l4759 256A                                i2l4689 26EA  
                              i2l4777 2882                                i2l4795 28D6  
                              i2l4799 28E6                                u511_41 26D2  
                              u520_41 2866                      __end_of___lwtoft 343A  
                              u514_41 24D0                                u516_41 24F8  
                              u509_41 26AA                                u488_41 1DA8  
                              u489_41 1DBC                                _SPBRGH 000FB0  
       ??_incrementPercentCoolCounter 0001                      __end_of_delay_ms 33A2  
                              _Buffer 0165                      __end_of__powers_ FE90  
                    __end_of_lcd_init 2F42                      __end_of_lcd_putc 2FFA  
                    __end_of_lcd_puts 30AA                                ___ftge 2CBC  
                    __end_of_autoHeat 1BF0                      __end_of_autoCool 20D6  
                              ___wmul 33A2                             ??___awdiv 008A  
                           ??___lbdiv 0085                             ??___ftadd 00C4  
                           ??___awmod 0084                             ??___lbmod 0081  
                           ??___ftdiv 0092                             ??___ftneg 0083  
                           ??___lldiv 0088                             ??___ftmul 00AA  
                           ??___llmod 0095                             ??___ftsub 00D0  
                           ??___fttol 00CE             i2set_pwm1_percent@raw_val 0030  
                              _fround 185A                                clear_0 3120  
                              clear_1 3132                       ?i2_set_pwm1_raw 0001  
                    ___awdiv@quotient 008C                       ___awmod@divisor 0082  
                     ___awmod@counter 0084                                main@AN 011C  
                           ??_highIsr 0032                 ___ftmul@f3_as_product 00AE  
             __end_of_init_adc_no_lib 359C                          __pdataCOMRAM 0059  
                           ??_isdigit 0080                     __end_ofi2___ftadd 1F40  
                   __end_ofi2___ftdiv 2780                        i2___ftadd@exp1 0014  
                      i2___ftadd@exp2 0013                     __end_ofi2___ftmul 25B4  
                   __end_ofi2___ftsub 320C                     __end_ofi2___fttol 2928  
                      i2___ftadd@sign 0012                          __mediumconst FE68  
                 send_string_no_lib@p 0081                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                  _send_string_no_lib 2FFA  __size_of_incrementPercentHeatCounter 0014  
                        ?_setupSerial 0001                             ??_sprintf 00E4  
                    ___lbdiv@dividend 0085                       ___lbmod@divisor 0080  
                      i2___ftdiv@cntr 0024                            __accesstop 0080  
             __end_of__initialization 3138                        i2___ftdiv@sign 0029  
                     ___lbmod@counter 0082                   ?_send_string_no_lib 0081  
                          ___ftadd@f1 00BE                            ___ftadd@f2 00C1  
                 __size_ofi2___ftpack 00AE                            ___ftge@ff1 00D0  
                          ___ftge@ff2 00D3                     ?_read_byte_no_lib 0001  
                       ___rparam_used 000001                            ___ftdiv@f1 008C  
                          ___ftdiv@f2 008F                            ___ftdiv@f3 0096  
                 __size_ofi2___lwtoft 0024                            ___ftneg@f1 0080  
                          ___awtoft@c 0088                        i2___ftpack@arg 0001  
                      i2___ftpack@exp 0004  __size_of_decrementPercentHeatCounter 0012  
                  ??_read_byte_no_lib 0080                            ___ftmul@f1 00A4  
                          ___ftmul@f2 00A7                            ___ftsub@f1 00CA  
                          ___ftsub@f2 00CD                            ___fttol@f1 00CA  
                      __pcstackCOMRAM 0001                 __size_of_delay_cycles 0034  
                          ___lltoft@c 0088                        i2___ftmul@cntr 0019  
                       __end_of_scale 1642                        i2___ftmul@sign 001A  
                __size_of_incrementHS 0012  __size_of_incrementPercentCoolCounter 0012  
                    ___lbdiv@quotient 0087                        i2___fttol@exp1 0023  
                ??_send_string_no_lib 0083                            ___lwtoft@c 0088  
                      i2___fttol@lval 001F                             ?i2___ftge 001B  
            __end_of_send_byte_no_lib 3518                 i2set_pwm1_percent@tmp 002D  
                          __div_to_l_ 22D6             __size_of_read_adc_voltage 006A  
                   lcd_gotoxy@address 008C  __size_of_decrementPercentCoolCounter 0010  
                     __div_to_l_@exp1 008B                       __div_to_l_@cntr 008A  
                             ??_scale 00B6                       __div_to_l_@quot 0086  
                        sprintf@width 0117                    _percentHeatCounter 00F3  
            __end_of_set_pwm1_percent 2B1C                            __pbssBANK0 00F3  
                          __pbssBANK1 0165           __end_of_read_adc_raw_no_lib 324A  
                        _delay_cycles 32BE                            __pnvCOMRAM 004D  
                       __div_to_l_@f1 0080                         __div_to_l_@f2 0083  
                  __size_of_init_pwm1 0010                     read_byte_no_lib@c 0080  
               __end_of_restartTimer3 352A                        lcd_send_byte@n 0088  
                             ?___ftge 00D0                               ?___wmul 0080  
                       autoCool@value 00F0                      lcd_send_nibble@n 0087  
                             _CCP1CON 000FBD                               ?_fround 00B3  
                           ?___awtoft 0088                             ?___ftpack 0080  
                  _percentCoolCounter 0045                             ?___lltoft 0088  
                          ??i2___ftge 0021                             ?___lwtoft 0088  
                    ?_init_adc_no_lib 0001                               _INTCON2 000FF1  
                             _INTCON3 000FF0                             ?_delay_ms 0080  
                          _lcd_gotoxy 3146                             ?_lcd_init 0001  
                           ?_lcd_putc 0001                             ?_lcd_puts 008E  
                           ?_autoHeat 0001                             ?_autoCool 0001  
                   _is_byte_available 34DA                     __end_of__npowers_ FEB7  
                             __Hparam 0000                            _scale$2119 00B6  
                             __Lparam 0000              __size_of_lcd_send_nibble 0026  
                  ?_is_byte_available 0001                          _highIsr$2194 0034  
                     __size_of___ftge 0074                               ___awdiv 2BB4  
                             ___lbdiv 324A                               ___ftadd 1BF0  
                             ___awmod 2DA4                               ___lbmod 334E  
                             ___ftdiv 25B4                               ___ftneg 33C8  
                             ___lldiv 2C38                       __size_of___wmul 0026  
                             ___ftmul 23CC                               ___llmod 2E7E  
                             ___ftsub 318A                               ___fttol 2780  
                       ?_set_pwm1_raw 0080                               __pcinit 30FA  
                        ??i2___ftpack 0006                               _clkMode 0039  
                          ??___awtoft 008B                            ??___ftpack 0085  
                     __size_of_fround 01E8          __size_of_changeOperationMode 0020  
             i2___ftmul@f3_as_product 0016                               __ramtop 1000  
                 ??_is_byte_available 0080                            ??___lltoft 008C  
                             __ptext0 0C42                               __ptext1 3480  
                             __ptext2 34C0                               __ptext3 2FFA  
                             __ptext4 3506                               __ptext5 359C  
                             __ptext6 2E14                               __ptext7 320C  
                             __ptext8 3286                               __ptext9 2EE6  
                             _highIsr 0008                          ??i2___lwtoft 000C  
                          ??___lwtoft 008B                             _T1CONbits 000FCD  
                         ?__div_to_l_ 0080                               _dpowers FEB7  
                  i2_set_pwm1_percent 2B1C                             _T2CONbits 000FCA  
                             _initial 005D                               _isdigit 345E  
                           _T3CONbits 000FB1                     __end_of_init_pwm1 3570  
                    ___awmod@dividend 0080                               _minutes 003D  
                             _seconds 003F                            ??_delay_ms 0082  
                             _stpMode 0037                         ??_decrementHS 0001  
                             _sprintf 0012                            ??_lcd_init 008A  
                 ?i2_set_pwm1_percent 002A                        __pintcode_body 1642  
                          ??_lcd_putc 008D                            ??_lcd_puts 0090  
                end_of_initialization 3138                            ??_autoHeat 00EA  
                          ??_autoCool 00EA                  __size_of_setupSerial 0020  
                       __Lmediumconst FE68             __end_of_is_byte_available 34F2  
                             int_func 1642                  lcd_send_byte@cm_data 0089  
                  __end_ofi2___ftpack 2A84                       ___lldiv@divisor 0084  
                  __end_ofi2___lwtoft 345E                       ___lldiv@counter 008C  
                    ??i2_set_pwm1_raw 0003                             _RCSTAbits 000FAB  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
                ??i2_set_pwm1_percent 002D                        ??_set_pwm1_raw 0082  
                      __tdiv_to_l_@f1 0080                        __tdiv_to_l_@f2 0083  
               __end_of_lcd_send_byte 30FA                         ??__tdiv_to_l_ 0086  
                           _PORTCbits 000F82                             _PORTEbits 000F84  
                          _setupPorts 34C0                   set_pwm1_percent@tmp 00DC  
                    ___lbmod@dividend 0081                      _read_adc_voltage 2E14  
                           _TRISCbits 000F94                           ?_lcd_gotoxy 008A  
                          main@Buffer 0125                             i2___ftadd 1D98  
                     _LCD_INIT_STRING 0059                             i2___ftdiv 269A  
                           i2___ftmul 24C0                             i2___ftsub 31CC  
                           i2___fttol 2856                             _RPS_count 0041  
                         ___lbmod@rem 0083                           _CCP1CONbits 000FBD  
                         ___ftdiv@exp 0099                             _TXSTAbits 000FAC  
                 __end_of_decrementHS 3590                       i2___ftpack@sign 0005  
                 __size_of__div_to_l_ 00F6   __end_of_incrementPercentHeatCounter 3506  
         _incrementPercentHeatCounter 34F2                           ___ftmul@exp 00AD  
                   send_byte_no_lib@c 0080                        __end_of___ftge 2D30  
                      __end_of___wmul 33C8                           _BAUDCONbits 000FB8  
                       __pidataCOMRAM 35A6                         delay_cycles@n 0083  
                       delay_cycles@x 0084                     ??_lcd_send_nibble 0086  
           __size_of_read_byte_no_lib 000A                        __end_of_fround 1A42  
                   ?_send_byte_no_lib 0001   __end_of_decrementPercentHeatCounter 3560  
         _decrementPercentHeatCounter 354E                   start_initialization 30FA  
                   __size_ofi2___ftge 0074                    ??_send_byte_no_lib 0080  
                    main@SendToSerial 0162                   __end_of__tdiv_to_l_ 22D6  
                     i2___fttol@sign1 001E                            ?i2___ftadd 0009  
                          ?i2___ftdiv 001B                            ?i2___ftmul 000C  
                          ?i2___ftsub 0015                            ?i2___fttol 0015  
 __end_of_incrementPercentCoolCounter 353C           _incrementPercentCoolCounter 352A  
       ??_decrementPercentHeatCounter 0001                     ?_set_pwm1_percent 00D9  
          __size_of_is_byte_available 0018                    ??_set_pwm1_percent 00DC  
                     ___llmod@divisor 0091                       ___llmod@counter 0095  
 __end_of_decrementPercentCoolCounter 3580           _decrementPercentCoolCounter 3570  
                       ??_incrementHS 0001                              ??___ftge 00D6  
                 __size_of_lcd_gotoxy 0044                              ??___wmul 0084  
        read_adc_raw_no_lib@raw_value 0085                              ??_fround 00B6  
                       sprintf@tmpval 0108           __size_of_send_string_no_lib 0058  
                         ?_setupPorts 0001         ??_decrementPercentCoolCounter 0001  
                          fround@prec 00BD                     __size_of___awtoft 0038  
                   __size_of___ftpack 00AE                     __size_of___lltoft 005C  
                         __pbssCOMRAM 0037                     __size_of___lwtoft 0026  
                       __pcstackBANK0 0080                         __pcstackBANK1 0100  
                        _isdigit$1870 0081                     __size_of_delay_ms 0028  
                         _decrementHS 3580                  __end_of_set_pwm1_raw 3320  
                 _changeOperationMode 34A0                     __size_of_lcd_init 005C  
                         sprintf@flag 0112                           sprintf@eexp 0110  
                   __size_of_lcd_putc 005C                     __size_of_lcd_puts 0058  
                         sprintf@fval 0114                           sprintf@prec 0119  
                   __size_of_autoHeat 01AE                     __size_of_autoCool 0196  
                           __pnvBANK1 0185                             _main$1321 014E  
                           _main$2115 0148                             _main$2116 014A  
                           _main$1317 014C                             _main$1326 0150  
                           _main$1335 0154                             _main$1327 0152  
                           _main$1360 015E                             _main$1344 015A  
                           _main$1336 0156                             _main$1361 0160  
                           _main$1345 015C                             _main$1337 0158  
                           _heatError 0056                             __pintcode 0008  
        __size_of_read_adc_raw_no_lib 003E                         __pmediumconst FE68  
                            ?___awdiv 0086                              ?___lbdiv 0084  
                            ?___ftadd 00BE                              ?___awmod 0080  
                            ?___lbmod 0080                              ?___ftdiv 008C  
                            ?___ftneg 0080                              ?___lldiv 0080  
                            ?___ftmul 00A4                              ?___llmod 008D  
                            ?___ftsub 00CA                             __npowers_ FE90  
                            ?___fttol 00CA                             _coolError 004D  
                ?_changeOperationMode 0001                           __tdiv_to_l_ 21D8  
                 __end_of_incrementHS 354E                              ?_highIsr 0001  
                        ??__div_to_l_ 0086                              ?_isdigit 0001  
                         ??i2___ftadd 000F                              ?_sprintf 00D9  
              __size_of_restartTimer3 0012                           ??i2___ftdiv 0021  
                           _init_pwm1 3560                           ??i2___ftmul 0012  
                      __size_of_scale 036C                           ??i2___ftsub 001B  
                         ??i2___fttol 0019              __size_of_init_adc_no_lib 000C  
                      ___wmul@product 0084                             delay_ms@i 0082  
                           delay_ms@n 0080                              _IPR2bits 000FA2  
                            _PIE2bits 000FA0                   __size_of_setupPorts 001A  
                       _operationMode 0049                              i2u410_40 29E6  
                            i2u414_40 2A64                              i2u502_40 1E7E  
                            i2u505_40 1EB2                              i2u521_40 2870  
                            _PIR1bits 000F9E                    __end_of__div_to_l_ 23CC  
                            i2u522_40 28A0                              i2u522_45 2898  
                            _PIR2bits 000FA1              __end_of_read_adc_voltage 2E7E  
                            i2u526_40 2900                              i2u560_40 1692  
                            i2u570_40 1760                              i2u492_40 1DDA  
                            i2u566_40 1738                              i2u495_40 1E02  
                            i2u568_40 174C                              i2u498_40 1E40  
                            _RCONbits 000FD0            read_adc_raw_no_lib@channel 0084  
               ??_changeOperationMode 0001                      _read_byte_no_lib 359C  
                          _ADCON0bits 000FC2                     ___wmul@multiplier 0080  
                            i2___ftge 2D30                             lcd_init@i 008A  
                           lcd_putc@c 008D                             lcd_puts@s 008E  
                        ??_lcd_gotoxy 008B                         ??_setupSerial 0080  
                          ?_init_pwm1 0001                           _INTCON2bits 000FF1  
                         _INTCON3bits 000FF0                             copy_data0 310E  
                     _lcd_send_nibble 33EE                              __Hrparam 0000  
               set_pwm1_raw@raw_value 0080                              __Lrparam 0000  
                         _incrementHS 353C                         _restartTimer3 3518  
                  __end_of_lcd_gotoxy 318A           __size_ofi2_set_pwm1_percent 0098  
                    __size_of___awdiv 0084                      __size_of___lbdiv 003C  
                    __size_of___ftadd 01A8                      __size_of___awmod 0070  
                    __size_of___lbmod 002C                      __size_of___ftdiv 00E6  
                    __size_of___ftneg 0026                      __size_of___lldiv 0084  
                    __size_of___ftmul 00F4                      __size_of___llmod 0068  
                    __size_of___ftsub 0042                      __size_of___fttol 00D6  
                            ___awtoft 3286                              ___ftpack 2928  
                         _fround$2117 00BA                           _fround$2118 00B7  
                            ___lltoft 2F42                              ___lwtoft 3414  
                    __size_of_highIsr 1852                            sprintf@len 0106  
                          sprintf@val 010C                 __size_of_set_pwm1_raw 002E  
                    __size_of_isdigit 0022                              _delay_ms 337A  
                            __ptext10 34DA                              __ptext11 3590  
                            __ptext20 345E                              __ptext12 20D6  
                            __ptext21 185A                              __ptext13 3560  
                            __ptext30 318A                              __ptext22 334E  
                            __ptext14 1A42                              __ptext31 33C8  
                            __ptext23 324A                              __ptext15 1F40  
                            __ptext40 2F9E                              __ptext32 2CBC  
                            __ptext24 21D8                              __ptext16 0012  
                            __ptext41 3146                              __ptext33 2A84  
                            __ptext25 22D6                              __ptext17 12D6  
                            __ptext50 3320                              __ptext42 30AA  
                            __ptext34 32F2                              __ptext26 33A2  
                            __ptext18 2DA4                              __ptext51 2856  
                            __ptext43 33EE                              __ptext35 2780  
                            __ptext27 2F42                              __ptext19 2BB4  
                            __ptext60 34F2                              __ptext52 24C0  
                            __ptext44 32BE                              __ptext36 23CC  
                            __ptext28 2E7E                              __ptext61 352A  
                            __ptext53 269A                              __ptext45 337A  
                            __ptext37 25B4                              __ptext29 2C38  
                            __ptext62 353C                              __ptext54 343A  
                            __ptext46 3414                              __ptext38 1BF0  
                            __ptext63 354E                              __ptext55 31CC  
                            __ptext47 2928                              __ptext39 3052  
                            __ptext64 3570                              __ptext56 1D98  
                            __ptext65 3580                              __ptext57 29D6  
                            __ptext49 2B1C                              __ptext66 34A0  
                            __ptext58 2D30                              __ptext59 3518  
                            __powers_ FE69                              _lcd_init 2EE6  
                            _lcd_putc 2F9E                              _lcd_puts 3052  
                            _autoHeat 1A42                              _autoCool 1F40  
                    __size_of_sprintf 0C30               set_pwm1_percent@raw_val 00DF  
                            _autoMode 0047                __size_of_lcd_send_byte 0050  
                       ?_delay_cycles 0001                         __size_of_main 0694  
                       __size_of_init 0102             __size_of_send_byte_no_lib 0012  
                 __end_of_setupSerial 34A0                     ??_init_adc_no_lib 0080  
                      ?_restartTimer3 0001                              int$flags 005F  
           __size_of_set_pwm1_percent 0098                          _set_pwm1_raw 32F2  
                        ??_setupPorts 0080               __size_ofi2_set_pwm1_raw 002E  
                          _INTCONbits 000FF2                              isdigit@c 0082  
                 _read_adc_raw_no_lib 320C                              scale@scl 00B9  
                         ??_init_pwm1 0080                          ?_decrementHS 0001  
                            intlevel2 0000                             sprintf@ap 0105  
                           sprintf@cp 0103               __end_of_lcd_send_nibble 3414  
                    __tdiv_to_l_@exp1 008E                             sprintf@sp 00D9  
                    __tdiv_to_l_@cntr 008D                        ??_delay_cycles 0080  
                    __tdiv_to_l_@quot 0089                          _timerCounter 0043  
                    ___lldiv@dividend 0080                    __end_of_setupPorts 34DA  
                ?_read_adc_raw_no_lib 0080            __end_of_send_string_no_lib 3052  
                       _lcd_send_byte 30AA                          ?__tdiv_to_l_ 0080  
                            sprintf@c 011B                              sprintf@f 00DB  
                    ___lldiv@quotient 0088                 set_pwm1_percent@value 00D9  
                         _setupSerial 3480              __end_of_read_byte_no_lib 35A6  
             i2set_pwm1_raw@raw_value 0001                       ??_restartTimer3 0001  
               ??_read_adc_raw_no_lib 0082  
